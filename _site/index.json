{
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Extensions.ApplicationBuilderExtensions.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Extensions.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions | Nuv Tools Framework Docs",
    "summary": "Class ApplicationBuilderExtensions Namespace NuvTools.AspNetCore.EntityFrameworkCore.Extensions Assembly NuvTools.AspNetCore.EntityFrameworkCore.dll public static class ApplicationBuilderExtensions Inheritance object ApplicationBuilderExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods DatabaseMigrate<TContext>(IApplicationBuilder, TimeSpan?) public static IApplicationBuilder DatabaseMigrate<TContext>(this IApplicationBuilder app, TimeSpan? timeout = null) where TContext : DbContext Parameters app IApplicationBuilder timeout TimeSpan? Returns IApplicationBuilder Type Parameters TContext"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Extensions.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Extensions.html",
    "title": "Namespace NuvTools.AspNetCore.EntityFrameworkCore.Extensions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.AspNetCore.EntityFrameworkCore.Extensions Classes ApplicationBuilderExtensions"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Mapper.ServiceWithCrudBase-4.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Mapper.ServiceWithCrudBase-4.html",
    "title": "Class ServiceWithCrudBase<TContext, TDTO, TEntity, TKey> | Nuv Tools Framework Docs",
    "summary": "Class ServiceWithCrudBase<TContext, TDTO, TEntity, TKey> Namespace NuvTools.AspNetCore.EntityFrameworkCore.Mapper Assembly NuvTools.AspNetCore.EntityFrameworkCore.dll public abstract class ServiceWithCrudBase<TContext, TDTO, TEntity, TKey> : ServiceWithMapperBase<TDTO, TEntity> where TContext : DbContext where TDTO : class where TEntity : class where TKey : notnull Type Parameters TContext TDTO TEntity TKey Inheritance object ServiceWithMapperBase<TDTO, TEntity> ServiceWithCrudBase<TContext, TDTO, TEntity, TKey> Inherited Members ServiceWithMapperBase<TDTO, TEntity>.ConvertTo<TReturn>(TEntity) ServiceWithMapperBase<TDTO, TEntity>.ConvertTo<TReturn>(IEnumerable<TEntity>) ServiceWithMapperBase<TDTO, TEntity>.ConvertToEntity(TDTO) ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(TEntity) ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(IEnumerable<TEntity>) ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(IList<TEntity>) ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(TEntity[]) ServiceWithMapperBase<TDTO, TEntity>.Mapper object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ServiceWithCrudBase(TContext, IMapper) protected ServiceWithCrudBase(TContext context, IMapper mapper) Parameters context TContext mapper IMapper Fields Context protected readonly TContext Context Field Value TContext Properties Dataset public DbSet<TEntity> Dataset { get; } Property Value DbSet<TEntity> Methods AddAndSaveAsync(TDTO) public virtual Task<IResult<TKey>> AddAndSaveAsync(TDTO model) Parameters model TDTO Returns Task<IResult<TKey>> FindAsync(object[]) public Task<TDTO?> FindAsync(object[] keys) Parameters keys object[] Returns Task<TDTO> FindAsync(TKey) public Task<TDTO?> FindAsync(TKey id) Parameters id TKey Returns Task<TDTO> FindFromExpressionAsync(Expression<Func<IQueryable<TEntity>>>) public Task<IEnumerable<TDTO>?> FindFromExpressionAsync(Expression<Func<IQueryable<TEntity>>> expression) Parameters expression Expression<Func<IQueryable<TEntity>>> Returns Task<IEnumerable<TDTO>> RemoveAndSaveAsync(TKey) public virtual Task<IResult> RemoveAndSaveAsync(TKey id) Parameters id TKey Returns Task<IResult> UpdateAndSaveAsync(TKey, TDTO) public virtual Task<IResult> UpdateAndSaveAsync(TKey id, TDTO model) Parameters id TKey model TDTO Returns Task<IResult>"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Mapper.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.EntityFrameworkCore.Mapper.html",
    "title": "Namespace NuvTools.AspNetCore.EntityFrameworkCore.Mapper | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.AspNetCore.EntityFrameworkCore.Mapper Classes ServiceWithCrudBase<TContext, TDTO, TEntity, TKey>"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.JSInterop.ClipboardService.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.JSInterop.ClipboardService.html",
    "title": "Class ClipboardService | Nuv Tools Framework Docs",
    "summary": "Class ClipboardService Namespace NuvTools.AspNetCore.JSInterop Assembly NuvTools.AspNetCore.dll public sealed class ClipboardService Inheritance object ClipboardService Inherited Members object.GetType() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ClipboardService(IJSRuntime) public ClipboardService(IJSRuntime jsRuntime) Parameters jsRuntime IJSRuntime Methods ReadTextAsync() public ValueTask<string> ReadTextAsync() Returns ValueTask<string> WriteTextAsync(string) public ValueTask WriteTextAsync(string text) Parameters text string Returns ValueTask"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.JSInterop.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.JSInterop.html",
    "title": "Namespace NuvTools.AspNetCore.JSInterop | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.AspNetCore.JSInterop Classes ClipboardService"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Localization.CompositeLocalizer.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Localization.CompositeLocalizer.html",
    "title": "Class CompositeLocalizer | Nuv Tools Framework Docs",
    "summary": "Class CompositeLocalizer Namespace NuvTools.AspNetCore.Localization Assembly NuvTools.AspNetCore.dll public class CompositeLocalizer Inheritance object CompositeLocalizer Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors CompositeLocalizer(Dictionary<string, IStringLocalizer>, ILogger<CompositeLocalizer>?) public CompositeLocalizer(Dictionary<string, IStringLocalizer> namedLocalizers, ILogger<CompositeLocalizer>? logger = null) Parameters namedLocalizers Dictionary<string, IStringLocalizer> logger ILogger<CompositeLocalizer> Properties this[string] public LocalizedString this[string key] { get; } Parameters key string Property Value LocalizedString this[string, object[]] public LocalizedString this[string key, params object[] arguments] { get; } Parameters key string arguments object[] Property Value LocalizedString Methods TryGetValue(string, out string, params object[]) public bool TryGetValue(string key, out string value, params object[] arguments) Parameters key string value string arguments object[] Returns bool"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Localization.LocalizationServiceExtensions.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Localization.LocalizationServiceExtensions.html",
    "title": "Class LocalizationServiceExtensions | Nuv Tools Framework Docs",
    "summary": "Class LocalizationServiceExtensions Namespace NuvTools.AspNetCore.Localization Assembly NuvTools.AspNetCore.dll public static class LocalizationServiceExtensions Inheritance object LocalizationServiceExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddCompositeLocalizer(IServiceCollection, IDictionary<string, Type>?, IEnumerable<Type>?) public static IServiceCollection AddCompositeLocalizer(this IServiceCollection services, IDictionary<string, Type>? namedResourceTypes = null, IEnumerable<Type>? unnamedResourceTypes = null) Parameters services IServiceCollection namedResourceTypes IDictionary<string, Type> unnamedResourceTypes IEnumerable<Type> Returns IServiceCollection"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Localization.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Localization.html",
    "title": "Namespace NuvTools.AspNetCore.Localization | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.AspNetCore.Localization Classes CompositeLocalizer LocalizationServiceExtensions"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Mapper.ServiceWithMapperBase-2.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Mapper.ServiceWithMapperBase-2.html",
    "title": "Class ServiceWithMapperBase<TDTO, TEntity> | Nuv Tools Framework Docs",
    "summary": "Class ServiceWithMapperBase<TDTO, TEntity> Namespace NuvTools.AspNetCore.Mapper Assembly NuvTools.AspNetCore.dll public abstract class ServiceWithMapperBase<TDTO, TEntity> where TDTO : class where TEntity : class Type Parameters TDTO TEntity Inheritance object ServiceWithMapperBase<TDTO, TEntity> Derived ServiceWithCrudBase<TContext, TDTO, TEntity, TKey> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ServiceWithMapperBase(IMapper) protected ServiceWithMapperBase(IMapper mapper) Parameters mapper IMapper Properties Mapper protected IMapper Mapper { get; } Property Value IMapper Methods ConvertToDTO(IEnumerable<TEntity>?) protected IEnumerable<TDTO>? ConvertToDTO(IEnumerable<TEntity>? models) Parameters models IEnumerable<TEntity> Returns IEnumerable<TDTO> ConvertToDTO(IList<TEntity>?) protected IList<TDTO>? ConvertToDTO(IList<TEntity>? models) Parameters models IList<TEntity> Returns IList<TDTO> ConvertToDTO(TEntity?) protected TDTO? ConvertToDTO(TEntity? model) Parameters model TEntity Returns TDTO ConvertToDTO(TEntity[]?) protected TDTO[]? ConvertToDTO(TEntity[]? models) Parameters models TEntity[] Returns TDTO[] ConvertToEntity(TDTO) protected TEntity ConvertToEntity(TDTO model) Parameters model TDTO Returns TEntity ConvertTo<TReturn>(IEnumerable<TEntity>?) protected IEnumerable<TReturn>? ConvertTo<TReturn>(IEnumerable<TEntity>? models) Parameters models IEnumerable<TEntity> Returns IEnumerable<TReturn> Type Parameters TReturn ConvertTo<TReturn>(TEntity?) protected TReturn? ConvertTo<TReturn>(TEntity? model) Parameters model TEntity Returns TReturn Type Parameters TReturn"
  },
  "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Mapper.html": {
    "href": "api/NuvTools.AspNetCore/NuvTools.AspNetCore.Mapper.html",
    "title": "Namespace NuvTools.AspNetCore.Mapper | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.AspNetCore.Mapper Classes ServiceWithMapperBase<TDTO, TEntity>"
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.DateTimeServiceCollectionExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.DateTimeServiceCollectionExtensions.html",
    "title": "Class DateTimeServiceCollectionExtensions | Nuv Tools Framework Docs",
    "summary": "Class DateTimeServiceCollectionExtensions Namespace NuvTools.Common.Dates Assembly NuvTools.Common.dll Provides DI extensions for IDateTimeService. public static class DateTimeServiceCollectionExtensions Inheritance object DateTimeServiceCollectionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddDateTimeService(IServiceCollection, TimeZoneRegion) Registers IDateTimeService as a singleton with a specified TimeZoneRegion. public static IServiceCollection AddDateTimeService(this IServiceCollection services, TimeZoneRegion region = TimeZoneRegion.Brasilia) Parameters services IServiceCollection region TimeZoneRegion Returns IServiceCollection"
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.Enumerations.TimeZoneRegion.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.Enumerations.TimeZoneRegion.html",
    "title": "Enum TimeZoneRegion | Nuv Tools Framework Docs",
    "summary": "Enum TimeZoneRegion Namespace NuvTools.Common.Dates.Enumerations Assembly NuvTools.Common.dll Represents well-known regional time zones supported by NuvTools for cross-platform date and time conversions. Each value maps to both a Windows and an IANA time zone identifier, ensuring consistent behavior across Windows, macOS, and Linux. public enum TimeZoneRegion Extension Methods TimeZoneExtensions.GetTimeZoneInfo(TimeZoneRegion) ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) EnumerationExtensions.GetDescription(Enum) EnumerationExtensions.GetDisplayAttributes(Enum) EnumerationExtensions.GetEnumerator<TUEnum>(Enum) EnumerationExtensions.GetGroupName(Enum) EnumerationExtensions.GetName(Enum) EnumerationExtensions.GetOrder(Enum) EnumerationExtensions.GetPrompt(Enum) EnumerationExtensions.GetShortName(Enum) EnumerationExtensions.GetValueAsString(Enum) EnumerationExtensions.IsInGroup(Enum, string) Fields Azores = 8 (UTC−01:00) Azores, Cape Verde Islands. Windows ID: Azores Standard Time IANA ID: Atlantic/Azores Brasilia = 6 (UTC−03:00) Brasília, Buenos Aires, Montevideo. Windows ID: E. South America Standard Time IANA ID: America/Sao_Paulo CentralEurope = 10 (UTC+01:00) Amsterdam, Berlin, Rome, Paris, Madrid. Windows ID: W. Europe Standard Time IANA ID: Europe/Berlin CentralStandardTime = 3 (UTC−06:00) Central Time (US and Canada), Mexico City, Monterrey. Windows ID: Central Standard Time IANA ID: America/Chicago China = 16 (UTC+08:00) Beijing, Hong Kong, Kuala Lumpur, Singapore, Taipei, Perth. Windows ID: China Standard Time IANA ID: Asia/Shanghai Dubai = 13 (UTC+04:00) Dubai, Baku, Samara. Windows ID: Arabian Standard Time IANA ID: Asia/Dubai EasternEurope = 11 (UTC+02:00) Athens, Bucharest, Istanbul, Cairo. Windows ID: GTB Standard Time IANA ID: Europe/Athens EasternTimeUSCanada = 4 (UTC−05:00) Eastern Time (US and Canada), Bogotá, Lima, Quito. Windows ID: Eastern Standard Time IANA ID: America/New_York India = 14 (UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi. Windows ID: India Standard Time IANA ID: Asia/Kolkata Japan = 17 (UTC+09:00) Osaka, Sapporo, Tokyo, Seoul. Windows ID: Tokyo Standard Time IANA ID: Asia/Tokyo London = 9 (UTC+00:00) Dublin, Edinburgh, Lisbon, London. Windows ID: GMT Standard Time IANA ID: Europe/London MidAtlantic = 7 (UTC−02:00) Mid-Atlantic, South Georgia. Windows ID: Mid-Atlantic Standard Time IANA ID: Atlantic/South_Georgia Moscow = 12 (UTC+03:00) Moscow, Nairobi, Riyadh. Windows ID: Russian Standard Time IANA ID: Europe/Moscow MountainTimeUSCanada = 2 (UTC−07:00) Mountain Time (US and Canada). Windows ID: Mountain Standard Time IANA ID: America/Denver NewZealand = 19 (UTC+12:00) Auckland, Wellington, Fiji. Windows ID: New Zealand Standard Time IANA ID: Pacific/Auckland PacificTimeUSCanada = 1 (UTC−08:00) Pacific Time (US and Canada). Windows ID: Pacific Standard Time IANA ID: America/Los_Angeles Santiago = 5 (UTC−04:00) Santiago, Manaus, La Paz. Windows ID: Pacific SA Standard Time IANA ID: America/Santiago SoutheastAsia = 15 (UTC+07:00) Bangkok, Hanoi, Jakarta. Windows ID: SE Asia Standard Time IANA ID: Asia/Bangkok Sydney = 18 (UTC+10:00) Sydney, Canberra, Melbourne. Windows ID: AUS Eastern Standard Time IANA ID: Australia/Sydney Utc = 0 Coordinated Universal Time. Windows ID: UTC IANA ID: Etc/UTC Remarks This enumeration is primarily used by IDateTimeService and TimeZoneExtensions to standardize time zone conversions."
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.Enumerations.UtcDirection.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.Enumerations.UtcDirection.html",
    "title": "Enum UtcDirection | Nuv Tools Framework Docs",
    "summary": "Enum UtcDirection Namespace NuvTools.Common.Dates.Enumerations Assembly NuvTools.Common.dll Specifies the conversion direction to or from UTC. public enum UtcDirection Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) EnumerationExtensions.GetDescription(Enum) EnumerationExtensions.GetDisplayAttributes(Enum) EnumerationExtensions.GetEnumerator<TUEnum>(Enum) EnumerationExtensions.GetGroupName(Enum) EnumerationExtensions.GetName(Enum) EnumerationExtensions.GetOrder(Enum) EnumerationExtensions.GetPrompt(Enum) EnumerationExtensions.GetShortName(Enum) EnumerationExtensions.GetValueAsString(Enum) EnumerationExtensions.IsInGroup(Enum, string) Fields FromUtc = 1 None = 0 ToUtc = 2"
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.Enumerations.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.Enumerations.html",
    "title": "Namespace NuvTools.Common.Dates.Enumerations | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Dates.Enumerations Enums TimeZoneRegion Represents well-known regional time zones supported by NuvTools for cross-platform date and time conversions. Each value maps to both a Windows and an IANA time zone identifier, ensuring consistent behavior across Windows, macOS, and Linux. UtcDirection Specifies the conversion direction to or from UTC."
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.IDateTimeService.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.IDateTimeService.html",
    "title": "Interface IDateTimeService | Nuv Tools Framework Docs",
    "summary": "Interface IDateTimeService Namespace NuvTools.Common.Dates Assembly NuvTools.Common.dll Provides a timezone-aware abstraction for system date and time operations. public interface IDateTimeService Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Properties Now Current local DateTime based on configured region. DateTime Now { get; } Property Value DateTime NowOffset Current local DateTimeOffset based on configured region. DateTimeOffset NowOffset { get; } Property Value DateTimeOffset Region Configured timezone region. TimeZoneRegion Region { get; } Property Value TimeZoneRegion UtcNow Current UTC DateTime. DateTime UtcNow { get; } Property Value DateTime UtcNowOffset Current UTC DateTimeOffset. DateTimeOffset UtcNowOffset { get; } Property Value DateTimeOffset Methods ConvertFromUtc(DateTime) Converts UTC DateTime to local region time. DateTime ConvertFromUtc(DateTime utcDateTime) Parameters utcDateTime DateTime Returns DateTime ConvertFromUtc(DateTimeOffset) Converts UTC DateTimeOffset to local region time. DateTimeOffset ConvertFromUtc(DateTimeOffset utcDateTime) Parameters utcDateTime DateTimeOffset Returns DateTimeOffset ConvertToUtc(DateTime) Converts local DateTime to UTC. DateTime ConvertToUtc(DateTime localDateTime) Parameters localDateTime DateTime Returns DateTime ConvertToUtc(DateTimeOffset) Converts local DateTimeOffset to UTC. DateTimeOffset ConvertToUtc(DateTimeOffset localDateTime) Parameters localDateTime DateTimeOffset Returns DateTimeOffset"
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.SystemDateTimeService.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.SystemDateTimeService.html",
    "title": "Class SystemDateTimeService | Nuv Tools Framework Docs",
    "summary": "Class SystemDateTimeService Namespace NuvTools.Common.Dates Assembly NuvTools.Common.dll Default implementation of IDateTimeService using TimeZoneExtensions. public class SystemDateTimeService : IDateTimeService Inheritance object SystemDateTimeService Implements IDateTimeService Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Constructors SystemDateTimeService(TimeZoneRegion) Default implementation of IDateTimeService using TimeZoneExtensions. public SystemDateTimeService(TimeZoneRegion region = TimeZoneRegion.Brasilia) Parameters region TimeZoneRegion Properties Now Current local DateTime based on configured region. public DateTime Now { get; } Property Value DateTime NowOffset Current local DateTimeOffset based on configured region. public DateTimeOffset NowOffset { get; } Property Value DateTimeOffset Region Configured timezone region. public TimeZoneRegion Region { get; } Property Value TimeZoneRegion UtcNow Current UTC DateTime. public DateTime UtcNow { get; } Property Value DateTime UtcNowOffset Current UTC DateTimeOffset. public DateTimeOffset UtcNowOffset { get; } Property Value DateTimeOffset Methods ConvertFromUtc(DateTime) Converts UTC DateTime to local region time. public DateTime ConvertFromUtc(DateTime utcDateTime) Parameters utcDateTime DateTime Returns DateTime ConvertFromUtc(DateTimeOffset) Converts UTC DateTimeOffset to local region time. public DateTimeOffset ConvertFromUtc(DateTimeOffset utcDateTime) Parameters utcDateTime DateTimeOffset Returns DateTimeOffset ConvertToUtc(DateTime) Converts local DateTime to UTC. public DateTime ConvertToUtc(DateTime localDateTime) Parameters localDateTime DateTime Returns DateTime ConvertToUtc(DateTimeOffset) Converts local DateTimeOffset to UTC. public DateTimeOffset ConvertToUtc(DateTimeOffset localDateTime) Parameters localDateTime DateTimeOffset Returns DateTimeOffset"
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.TimeZoneExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.TimeZoneExtensions.html",
    "title": "Class TimeZoneExtensions | Nuv Tools Framework Docs",
    "summary": "Class TimeZoneExtensions Namespace NuvTools.Common.Dates Assembly NuvTools.Common.dll Provides helper methods for timezone conversions. public static class TimeZoneExtensions Inheritance object TimeZoneExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods DateParseToUtc(string, string, TimeZoneRegion, int?) Converts a string date to UTC DateTime using either a region or a custom offset. public static DateTime DateParseToUtc(this string value, string format = \"dd-MM-yyyy HH:mm:ss\", TimeZoneRegion fromTimeZoneRegion = TimeZoneRegion.Brasilia, int? offsetMinutes = null) Parameters value string format string fromTimeZoneRegion TimeZoneRegion offsetMinutes int? Returns DateTime GetTimeZoneInfo(TimeZoneRegion) Returns the TimeZoneInfo for a given region, respecting the OS platform. public static TimeZoneInfo GetTimeZoneInfo(this TimeZoneRegion region) Parameters region TimeZoneRegion Returns TimeZoneInfo ToTimeZone(DateTime, TimeZoneRegion, UtcDirection, int?) Converts a DateTime to the specified timezone or offset. public static DateTime ToTimeZone(this DateTime value, TimeZoneRegion timeZoneRegion = TimeZoneRegion.Brasilia, UtcDirection utcDirection = UtcDirection.None, int? offsetMinutes = null) Parameters value DateTime The input datetime. timeZoneRegion TimeZoneRegion The target region (optional if using offset). utcDirection UtcDirection Whether to convert to or from UTC. offsetMinutes int? Manual offset in minutes (optional). Returns DateTime ToTimeZoneOffset(DateTimeOffset, TimeZoneRegion, int?) Converts a DateTimeOffset to the specified timezone region or offset. public static DateTimeOffset ToTimeZoneOffset(this DateTimeOffset value, TimeZoneRegion timeZoneRegion = TimeZoneRegion.Brasilia, int? offsetMinutes = null) Parameters value DateTimeOffset timeZoneRegion TimeZoneRegion offsetMinutes int? Returns DateTimeOffset"
  },
  "api/NuvTools.Common/NuvTools.Common.Dates.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Dates.html",
    "title": "Namespace NuvTools.Common.Dates | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Dates Classes DateTimeServiceCollectionExtensions Provides DI extensions for IDateTimeService. SystemDateTimeService Default implementation of IDateTimeService using TimeZoneExtensions. TimeZoneExtensions Provides helper methods for timezone conversions. Interfaces IDateTimeService Provides a timezone-aware abstraction for system date and time operations."
  },
  "api/NuvTools.Common/NuvTools.Common.Enums.Enumeration.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Enums.Enumeration.html",
    "title": "Class Enumeration | Nuv Tools Framework Docs",
    "summary": "Class Enumeration Namespace NuvTools.Common.Enums Assembly NuvTools.Common.dll Helpers to interact with the Enumerations. public static class Enumeration Inheritance object Enumeration Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetEnum(Type, object) Returns the typed value according with the input value or name of enum. public static Enum GetEnum(Type enumType, object value) Parameters enumType Type Enum type. value object Enum value. Returns Enum Enum item from value. GetEnumByDescription<TEnum>(string) Returns the value of enum by description. Work with DisplayAttribute or DescriptionAttribute. public static TEnum GetEnumByDescription<TEnum>(string value) where TEnum : Enum Parameters value string Description used in annotation. Returns TEnum Enum value Type Parameters TEnum Enum type. GetEnumByName<TEnum>(string) Returns the value of enum by name. Work with DisplayAttribute. public static TEnum GetEnumByName<TEnum>(string value) where TEnum : Enum Parameters value string Name used in annotation. Returns TEnum Enum value Type Parameters TEnum Enum type. GetEnumByShortName<TEnum>(string) Returns the value of enum by short name. Work with DisplayAttribute. public static TEnum GetEnumByShortName<TEnum>(string value) where TEnum : Enum Parameters value string Short name used in annotation. Returns TEnum Enum value Type Parameters TEnum Enum type. GetEnum<TEnum>(int) Returns the typed value according with the input value or name of enum. public static TEnum GetEnum<TEnum>(int value) where TEnum : Enum Parameters value int Enum value. Returns TEnum Enum item from value. Type Parameters TEnum Enum type. GetEnum<TEnum>(string) Returns the typed value according with the input value or name of enum. public static TEnum GetEnum<TEnum>(string value) where TEnum : Enum Parameters value string Enum value. Returns TEnum Enum item from value. Type Parameters TEnum Enum type. GetEnum<TEnum, TUEnum>(TUEnum) Returns the typed value according with the input value or name of enum. public static TEnum GetEnum<TEnum, TUEnum>(TUEnum value) where TEnum : Enum where TUEnum : IEquatable<TUEnum> Parameters value TUEnum Enum value. Returns TEnum Enum item from value. Type Parameters TEnum Enum type. TUEnum Underlyting enum type. GetListValues<TEnum>() public static List<TEnum> GetListValues<TEnum>() where TEnum : Enum Returns List<TEnum> Type Parameters TEnum GetList<TEnum, TClass>(string, string) Returns a typed list with the enum values at the fields informed. public static List<TClass> GetList<TEnum, TClass>(string idField, string descriptionField) where TEnum : Enum where TClass : class Parameters idField string The list's field which will be filled with the enumerator's item id. descriptionField string The list's field which will be filled with the enumerator's item description. Returns List<TClass> List with the enum values filled. Type Parameters TEnum Enum type from which information will be retrieved. TClass Type list to be filled and returned. GetList<TEnum, TClass, TKey>(string, string) Returns a typed list with the enum values at the fields informed. public static List<TClass> GetList<TEnum, TClass, TKey>(string idField, string descriptionField) where TEnum : Enum where TClass : class where TKey : IEquatable<TKey> Parameters idField string The list's field which will be filled with the enumerator's item id. descriptionField string The list's field which will be filled with the enumerator's item description. Returns List<TClass> List with the enum values filled. Type Parameters TEnum Enum type from which information will be retrieved. TClass Type list to be filled and returned. TKey Id type. ToEnumDescriptor(IEnumDescriptor<int>) public static IEnumDescriptor ToEnumDescriptor(this IEnumDescriptor<int> descriptor) Parameters descriptor IEnumDescriptor<int> Returns IEnumDescriptor ToList<T>(bool) Convert the enumerator into a generic list. public static List<IEnumDescriptor> ToList<T>(bool sortByDescription = false) where T : Enum Parameters sortByDescription bool Sort the list using the description field. Returns List<IEnumDescriptor> Generic list corresponding to the enumerator. Type Parameters T Enumerator type. ToList<T, TKey>(bool) Convert the enumerator into a generic list. public static List<IEnumDescriptor<TKey>> ToList<T, TKey>(bool sortByDescription = false) where T : Enum where TKey : IEquatable<TKey> Parameters sortByDescription bool Sort the list using the description field. Returns List<IEnumDescriptor<TKey>> Generic list corresponding to the enumerator. Type Parameters T Enumerator type. TKey Id type that should be the same as enum underlyting type. Exceptions InvalidCastException"
  },
  "api/NuvTools.Common/NuvTools.Common.Enums.EnumerationExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Enums.EnumerationExtensions.html",
    "title": "Class EnumerationExtensions | Nuv Tools Framework Docs",
    "summary": "Class EnumerationExtensions Namespace NuvTools.Common.Enums Assembly NuvTools.Common.dll Helpers to interact with the Enumerations. public static class EnumerationExtensions Inheritance object EnumerationExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetDescription(Enum) Returns the description of enum item. Work with DisplayAttribute or DescriptionAttribute. public static string GetDescription(this Enum value) Parameters value Enum Enum item. Returns string Enum item description. GetDisplayAttributes(Enum) public static DisplayAttribute[]? GetDisplayAttributes(this Enum value) Parameters value Enum Returns DisplayAttribute[] GetEnumerator<TUEnum>(Enum) Returns the enum item description. public static IEnumDescriptor<TUEnum> GetEnumerator<TUEnum>(this Enum value) where TUEnum : IEquatable<TUEnum> Parameters value Enum Enum item. Returns IEnumDescriptor<TUEnum> Enum item description. Type Parameters TUEnum Id type that should be the same as enum underlyting type. Exceptions ArgumentNullException InvalidCastException GetGroupName(Enum) Returns the group name of enum item. Work with DisplayAttribute. public static string GetGroupName(this Enum value) Parameters value Enum Enum item. Returns string Enum item description. GetName(Enum) Returns the name of enum item. Work with DisplayAttribute. public static string GetName(this Enum value) Parameters value Enum Enum item. Returns string Enum item description. GetOrder(Enum) Returns the Order value from DisplayAttribute. public static int? GetOrder(this Enum value) Parameters value Enum Enum with DisplayAttribute. Returns int? GetPrompt(Enum) Returns the Order value from DisplayAttribute. public static string? GetPrompt(this Enum value) Parameters value Enum Enum with DisplayAttribute. Returns string GetShortName(Enum) Returns the short name of enum item. Work with DisplayAttribute. public static string GetShortName(this Enum value) Parameters value Enum Enum item. Returns string Enum item description. GetValueAsString(Enum) Returns the enum value as string. public static string GetValueAsString(this Enum value) Parameters value Enum Enum item. Returns string Enum value as string. IsInGroup(Enum, string) Checks whether the value belongs to a group. public static bool IsInGroup(this Enum value, string groupName) Parameters value Enum Enum item. groupName string Group name. Returns bool ToListEnumFromSeparatorDelimited(string, Type, char) Returns the enum list from string with separators. public static IEnumerable<Enum> ToListEnumFromSeparatorDelimited(this string value, Type enumType, char separator) Parameters value string Value string with enums values separated by delimited char. enumType Type Enum type separator char Item separator. Returns IEnumerable<Enum> Enum list. ToListEnumFromSeparatorDelimited<TEnum>(string, char) Returns the enum list from string with separators. public static IEnumerable<TEnum> ToListEnumFromSeparatorDelimited<TEnum>(this string value, char separator) where TEnum : Enum Parameters value string Value string with enums values separated by delimited char. separator char Item separator. Returns IEnumerable<TEnum> Enum list. Type Parameters TEnum Enum type. ToStringSeparatorDelimited<TEnum>(IEnumerable<TEnum>, char) Returns the enum list as string with separators. public static string ToStringSeparatorDelimited<TEnum>(this IEnumerable<TEnum> list, char separator) where TEnum : Enum Parameters list IEnumerable<TEnum> Enumerate list separator char Item separator Returns string List as string with separators. Type Parameters TEnum Enum type"
  },
  "api/NuvTools.Common/NuvTools.Common.Enums.IEnumDescriptor-1.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Enums.IEnumDescriptor-1.html",
    "title": "Interface IEnumDescriptor<TKey> | Nuv Tools Framework Docs",
    "summary": "Interface IEnumDescriptor<TKey> Namespace NuvTools.Common.Enums Assembly NuvTools.Common.dll public interface IEnumDescriptor<TKey> where TKey : IEquatable<TKey> Type Parameters TKey Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Properties Description string? Description { get; } Property Value string EnumeratorType [JsonIgnore] Type? EnumeratorType { get; } Property Value Type GroupName string? GroupName { get; } Property Value string Id TKey Id { get; } Property Value TKey Name string? Name { get; } Property Value string Order int? Order { get; } Property Value int? ShortName string? ShortName { get; } Property Value string"
  },
  "api/NuvTools.Common/NuvTools.Common.Enums.IEnumDescriptor.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Enums.IEnumDescriptor.html",
    "title": "Interface IEnumDescriptor | Nuv Tools Framework Docs",
    "summary": "Interface IEnumDescriptor Namespace NuvTools.Common.Enums Assembly NuvTools.Common.dll public interface IEnumDescriptor : IEnumDescriptor<int> Inherited Members IEnumDescriptor<int>.Id IEnumDescriptor<int>.ShortName IEnumDescriptor<int>.Name IEnumDescriptor<int>.Description IEnumDescriptor<int>.GroupName IEnumDescriptor<int>.Order IEnumDescriptor<int>.EnumeratorType Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Enumeration.ToEnumDescriptor(IEnumDescriptor<int>)"
  },
  "api/NuvTools.Common/NuvTools.Common.Enums.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Enums.html",
    "title": "Namespace NuvTools.Common.Enums | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Enums Classes Enumeration Helpers to interact with the Enumerations. EnumerationExtensions Helpers to interact with the Enumerations. Interfaces IEnumDescriptor IEnumDescriptor<TKey>"
  },
  "api/NuvTools.Common/NuvTools.Common.Exceptions.ExceptionExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Exceptions.ExceptionExtensions.html",
    "title": "Class ExceptionExtensions | Nuv Tools Framework Docs",
    "summary": "Class ExceptionExtensions Namespace NuvTools.Common.Exceptions Assembly NuvTools.Common.dll public static class ExceptionExtensions Inheritance object ExceptionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AggregateExceptionMessages(Exception, short) public static string AggregateExceptionMessages(this Exception exception, short level = 0) Parameters exception Exception level short Returns string"
  },
  "api/NuvTools.Common/NuvTools.Common.Exceptions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Exceptions.html",
    "title": "Namespace NuvTools.Common.Exceptions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Exceptions Classes ExceptionExtensions"
  },
  "api/NuvTools.Common/NuvTools.Common.IO.File.ContentTypes.Enumeration.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.IO.File.ContentTypes.Enumeration.html",
    "title": "Enum ContentTypes.Enumeration | Nuv Tools Framework Docs",
    "summary": "Enum ContentTypes.Enumeration Namespace NuvTools.Common.IO.File Assembly NuvTools.Common.dll Enumeration using DisplayAttribute. Each enum contains the title (Name property), extension (ShortName property) and content type information (Description property). Recommended to use the extensions methods like GetExtension(Enumeration), GetContentType(Enumeration) or GetFriendlyNameExtension(Enumeration) public enum ContentTypes.Enumeration Extension Methods ContentTypes.GetContentType(ContentTypes.Enumeration) ContentTypes.GetExtension(ContentTypes.Enumeration) ContentTypes.GetFriendlyNameExtension(ContentTypes.Enumeration) ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) EnumerationExtensions.GetDescription(Enum) EnumerationExtensions.GetDisplayAttributes(Enum) EnumerationExtensions.GetEnumerator<TUEnum>(Enum) EnumerationExtensions.GetGroupName(Enum) EnumerationExtensions.GetName(Enum) EnumerationExtensions.GetOrder(Enum) EnumerationExtensions.GetPrompt(Enum) EnumerationExtensions.GetShortName(Enum) EnumerationExtensions.GetValueAsString(Enum) EnumerationExtensions.IsInGroup(Enum, string) Fields [Display(Name = \"CSV\", ShortName = \"csv\", Description = \"text/csv\")] Csv = 3 [Display(Name = \"Icon\", ShortName = \"ico\", Description = \"imagem/x-icon\")] Icon = 5 [Display(Name = \"PDF\", ShortName = \"pdf\", Description = \"application/pdf\")] Pdf = 1 [Display(Name = \"Plain Text\", ShortName = \"txt\", Description = \"text/plain\")] PlainText = 2 [Display(Name = \"PNG\", ShortName = \"png\", Description = \"data:application/octet-stream;base64\")] Png = 8 [Display(Name = \"SVG\", ShortName = \"svg\", Description = \"image/svg+xml\")] Svg = 6 [Display(Name = \"Excel 98/2000\", ShortName = \"xls\", Description = \"application/vnd.ms-excel\")] Xls = 4 [Display(Name = \"Excel\", ShortName = \"xlsx\", Description = \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,\")] Xlsx = 7"
  },
  "api/NuvTools.Common/NuvTools.Common.IO.File.ContentTypes.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.IO.File.ContentTypes.html",
    "title": "Class ContentTypes | Nuv Tools Framework Docs",
    "summary": "Class ContentTypes Namespace NuvTools.Common.IO.File Assembly NuvTools.Common.dll public static class ContentTypes Inheritance object ContentTypes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetContentType(Enumeration) Gets the content type (e.g., text/csv, application/vnd.ms-excel) from ContentType enumeration. public static string GetContentType(this ContentTypes.Enumeration enumeration) Parameters enumeration ContentTypes.Enumeration ContentType enumeration. Returns string GetExtension(Enumeration) Gets the extension (e.g., pdf, png) from ContentType enumeration. public static string GetExtension(this ContentTypes.Enumeration enumeration) Parameters enumeration ContentTypes.Enumeration ContentType enumeration. Returns string GetFriendlyNameExtension(Enumeration) Gets the friendly name (e.g., Excel, PNG, PDF) from ContentType enumeration. public static string GetFriendlyNameExtension(this ContentTypes.Enumeration enumeration) Parameters enumeration ContentTypes.Enumeration ContentType enumeration. Returns string"
  },
  "api/NuvTools.Common/NuvTools.Common.IO.File.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.IO.File.html",
    "title": "Namespace NuvTools.Common.IO.File | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.IO.File Classes ContentTypes Enums ContentTypes.Enumeration Enumeration using DisplayAttribute. Each enum contains the title (Name property), extension (ShortName property) and content type information (Description property). Recommended to use the extensions methods like GetExtension(Enumeration), GetContentType(Enumeration) or GetFriendlyNameExtension(Enumeration)"
  },
  "api/NuvTools.Common/NuvTools.Common.IO.StreamExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.IO.StreamExtensions.html",
    "title": "Class StreamExtensions | Nuv Tools Framework Docs",
    "summary": "Class StreamExtensions Namespace NuvTools.Common.IO Assembly NuvTools.Common.dll public static class StreamExtensions Inheritance object StreamExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ToByteList(Stream) public static byte[] ToByteList(this Stream value) Parameters value Stream Returns byte[] ToByteListAsync(Stream) public static Task<byte[]> ToByteListAsync(this Stream value) Parameters value Stream Returns Task<byte[]>"
  },
  "api/NuvTools.Common/NuvTools.Common.IO.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.IO.html",
    "title": "Namespace NuvTools.Common.IO | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.IO Classes StreamExtensions"
  },
  "api/NuvTools.Common/NuvTools.Common.Numbers.NumbersExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Numbers.NumbersExtensions.html",
    "title": "Class NumbersExtensions | Nuv Tools Framework Docs",
    "summary": "Class NumbersExtensions Namespace NuvTools.Common.Numbers Assembly NuvTools.Common.dll public static class NumbersExtensions Inheritance object NumbersExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ParseToDecimalOrNull(string, bool) Parses the string to decimal or null. public static decimal? ParseToDecimalOrNull(this string value, bool returnZeroIsNull = false) Parameters value string Value to parsed. returnZeroIsNull bool Returns zero whether the value is null. Returns decimal? Returns decimal or null. ParseToIntOrNull(string, bool) Parses the string to int or null. public static int? ParseToIntOrNull(this string value, bool returnZeroIsNull = false) Parameters value string Value to parsed. returnZeroIsNull bool Returns zero whether the value is null. Returns int? Returns int or null. ParseToLongOrNull(string, bool) Parses the string to long or null. public static long? ParseToLongOrNull(this string value, bool returnZeroIsNull = false) Parameters value string Value to parsed. returnZeroIsNull bool Returns zero whether the value is null. Returns long? Returns long or null. ParseToShortOrNull(string, bool) Parses the string to short or null. public static short? ParseToShortOrNull(this string value, bool returnZeroIsNull = false) Parameters value string Value to parsed. returnZeroIsNull bool Returns zero whether the value is null. Returns short? Returns long or null."
  },
  "api/NuvTools.Common/NuvTools.Common.Numbers.Portuguese.NumberToWords.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Numbers.Portuguese.NumberToWords.html",
    "title": "Class NumberToWords | Nuv Tools Framework Docs",
    "summary": "Class NumberToWords Namespace NuvTools.Common.Numbers.Portuguese Assembly NuvTools.Common.dll Extensions's class to convert numbers to words. public static class NumberToWords Inheritance object NumberToWords Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ToWords(decimal) public static string ToWords(decimal value) Parameters value decimal Returns string"
  },
  "api/NuvTools.Common/NuvTools.Common.Numbers.Portuguese.NumberToWordsExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Numbers.Portuguese.NumberToWordsExtensions.html",
    "title": "Class NumberToWordsExtensions | Nuv Tools Framework Docs",
    "summary": "Class NumberToWordsExtensions Namespace NuvTools.Common.Numbers.Portuguese Assembly NuvTools.Common.dll Extensions's class to convert numbers to words. public static class NumberToWordsExtensions Inheritance object NumberToWordsExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ToWords(decimal) public static string ToWords(this decimal value) Parameters value decimal Returns string ToWords(int) public static string ToWords(this int value) Parameters value int Returns string"
  },
  "api/NuvTools.Common/NuvTools.Common.Numbers.Portuguese.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Numbers.Portuguese.html",
    "title": "Namespace NuvTools.Common.Numbers.Portuguese | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Numbers.Portuguese Classes NumberToWords Extensions's class to convert numbers to words. NumberToWordsExtensions Extensions's class to convert numbers to words."
  },
  "api/NuvTools.Common/NuvTools.Common.Numbers.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Numbers.html",
    "title": "Namespace NuvTools.Common.Numbers | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Numbers Classes NumbersExtensions"
  },
  "api/NuvTools.Common/NuvTools.Common.Reflection.AssemblyExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Reflection.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | Nuv Tools Framework Docs",
    "summary": "Class AssemblyExtensions Namespace NuvTools.Common.Reflection Assembly NuvTools.Common.dll public static class AssemblyExtensions Inheritance object AssemblyExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Description(Assembly) public static string? Description(this Assembly assembly) Parameters assembly Assembly Returns string ListComponent(Assembly, bool) public static List<string>? ListComponent(this Assembly assembly, bool fullName = false) Parameters assembly Assembly fullName bool Returns List<string> Name(Assembly) public static string? Name(this Assembly assembly) Parameters assembly Assembly Returns string ProgramInfo(Assembly) public static IProgramInfo ProgramInfo(this Assembly assembly) Parameters assembly Assembly Returns IProgramInfo Resource(Assembly, string) Returns a Embedded Resource from assembly. public static Stream? Resource(this Assembly assembly, string name) Parameters assembly Assembly The assembly instance which from resource will be retrevied. name string The resource name. Returns Stream Version(Assembly) public static string? Version(this Assembly assembly) Parameters assembly Assembly Returns string"
  },
  "api/NuvTools.Common/NuvTools.Common.Reflection.AssemblyHelper.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Reflection.AssemblyHelper.html",
    "title": "Class AssemblyHelper | Nuv Tools Framework Docs",
    "summary": "Class AssemblyHelper Namespace NuvTools.Common.Reflection Assembly NuvTools.Common.dll public static class AssemblyHelper Inheritance object AssemblyHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ResourceByName(string, string) public static Stream? ResourceByName(string resourceName, string assemblyName) Parameters resourceName string assemblyName string Returns Stream"
  },
  "api/NuvTools.Common/NuvTools.Common.Reflection.IProgramInfo.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Reflection.IProgramInfo.html",
    "title": "Interface IProgramInfo | Nuv Tools Framework Docs",
    "summary": "Interface IProgramInfo Namespace NuvTools.Common.Reflection Assembly NuvTools.Common.dll public interface IProgramInfo Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Properties Components List<string>? Components { get; } Property Value List<string> Description string? Description { get; } Property Value string Name string Name { get; } Property Value string Version string? Version { get; } Property Value string"
  },
  "api/NuvTools.Common/NuvTools.Common.Reflection.VersionException.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Reflection.VersionException.html",
    "title": "Class VersionException | Nuv Tools Framework Docs",
    "summary": "Class VersionException Namespace NuvTools.Common.Reflection Assembly NuvTools.Common.dll public class VersionException : Exception, ISerializable Inheritance object Exception VersionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetType() Exception.TargetSite Exception.Message Exception.Data Exception.InnerException Exception.HelpLink Exception.Source Exception.HResult Exception.StackTrace Exception.SerializeObjectState object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) ExceptionExtensions.AggregateExceptionMessages(Exception, short) Constructors VersionException() public VersionException() VersionException(Exception) public VersionException(Exception innerException) Parameters innerException Exception VersionException(string) public VersionException(string message) Parameters message string VersionException(string, Exception) public VersionException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/NuvTools.Common/NuvTools.Common.Reflection.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Reflection.html",
    "title": "Namespace NuvTools.Common.Reflection | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Reflection Classes AssemblyExtensions AssemblyHelper VersionException Interfaces IProgramInfo"
  },
  "api/NuvTools.Common/NuvTools.Common.RegularExpressions.RegexExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.RegularExpressions.RegexExtensions.html",
    "title": "Class RegexExtensions | Nuv Tools Framework Docs",
    "summary": "Class RegexExtensions Namespace NuvTools.Common.RegularExpressions Assembly NuvTools.Common.dll Provides extension methods for simplifying common Regex operations on string values. public static class RegexExtensions Inheritance object RegexExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods IsMatch(string?, string, RegexOptions) Determines whether the specified regular expression finds a match in the input string. public static bool IsMatch(this string? value, string pattern, RegexOptions options = RegexOptions.IgnoreCase) Parameters value string The input string to search. If null, returns false. pattern string The regular expression pattern to match. options RegexOptions Optional RegexOptions to modify the search behavior. Default is IgnoreCase. Returns bool true if the regular expression finds a match; otherwise, false. Exceptions ArgumentException Thrown if pattern is null or empty. Match(string?, string, RegexOptions) Searches the specified input string for the first occurrence of a regular expression pattern. public static Match Match(this string? value, string pattern, RegexOptions options = RegexOptions.None) Parameters value string The input string to search. If null, returns an empty Match(string?, string, RegexOptions). pattern string The regular expression pattern to match. options RegexOptions Optional RegexOptions to modify the search behavior. Default is None. Returns Match A Match(string?, string, RegexOptions) object containing information about the first match found in value. If value is null, returns an empty match. Exceptions ArgumentException Thrown if pattern is null or empty. ReplacePattern(string?, string, string, RegexOptions) Replaces all occurrences of a specified regular expression pattern in the input string with a replacement string. public static string? ReplacePattern(this string? value, string pattern, string newValue, RegexOptions options = RegexOptions.None) Parameters value string The input string to modify. If null, returns an empty string. pattern string The regular expression pattern to match. newValue string The replacement string. If null, it is treated as an empty string. options RegexOptions Optional RegexOptions to modify the search behavior. Default is None. Returns string A new string that is identical to the input string except that all instances of pattern have been replaced with newValue. Exceptions ArgumentException Thrown if pattern is null or empty."
  },
  "api/NuvTools.Common/NuvTools.Common.RegularExpressions.RegexPattern.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.RegularExpressions.RegexPattern.html",
    "title": "Class RegexPattern | Nuv Tools Framework Docs",
    "summary": "Class RegexPattern Namespace NuvTools.Common.RegularExpressions Assembly NuvTools.Common.dll Regex patterns class. public static class RegexPattern Inheritance object RegexPattern Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Base64File Regex to validate and extract informations (type, extension and content) from base64 file. public const string Base64File = \"data:(?<type>.+?/(?<extension>.+?));(?<base>.+),(?<content>.+)\" Field Value string"
  },
  "api/NuvTools.Common/NuvTools.Common.RegularExpressions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.RegularExpressions.html",
    "title": "Namespace NuvTools.Common.RegularExpressions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.RegularExpressions Classes RegexExtensions Provides extension methods for simplifying common Regex operations on string values. RegexPattern Regex patterns class."
  },
  "api/NuvTools.Common/NuvTools.Common.Resources.Messages.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Resources.Messages.html",
    "title": "Class Messages | Nuv Tools Framework Docs",
    "summary": "Class Messages Namespace NuvTools.Common.Resources Assembly NuvTools.Common.dll A strongly-typed resource class, for looking up localized strings, etc. public class Messages Inheritance object Messages Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Properties CannotConvertNullToNonNullableTypeX Looks up a localized string similar to Cannot convert null to non-nullable type {0}.. public static string CannotConvertNullToNonNullableTypeX { get; } Property Value string Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo ExpectedDateString Looks up a localized string similar to Expected a date string.. public static string ExpectedDateString { get; } Property Value string MaxDepthMustBeGreaterThanZero Looks up a localized string similar to MaxDepth must be greater than zero.. public static string MaxDepthMustBeGreaterThanZero { get; } Property Value string ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager TheJSONDataMustBeAnObjectAtTheRoot Looks up a localized string similar to The JSON data must be an object at the root.. public static string TheJSONDataMustBeAnObjectAtTheRoot { get; } Property Value string UnsupportedTypeX Looks up a localized string similar to Unsupported type {0}. public static string UnsupportedTypeX { get; } Property Value string ValueOutsideRange Looks up a localized string similar to Value outside range. public static string ValueOutsideRange { get; } Property Value string"
  },
  "api/NuvTools.Common/NuvTools.Common.Resources.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Resources.html",
    "title": "Namespace NuvTools.Common.Resources | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Resources Classes Messages A strongly-typed resource class, for looking up localized strings, etc."
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Enumerations.ResultType.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Enumerations.ResultType.html",
    "title": "Enum ResultType | Nuv Tools Framework Docs",
    "summary": "Enum ResultType Namespace NuvTools.Common.ResultWrapper.Enumerations Assembly NuvTools.Common.dll Represents the result type of an operation, indicating its outcome. public enum ResultType Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) EnumerationExtensions.GetDescription(Enum) EnumerationExtensions.GetDisplayAttributes(Enum) EnumerationExtensions.GetEnumerator<TUEnum>(Enum) EnumerationExtensions.GetGroupName(Enum) EnumerationExtensions.GetName(Enum) EnumerationExtensions.GetOrder(Enum) EnumerationExtensions.GetPrompt(Enum) EnumerationExtensions.GetShortName(Enum) EnumerationExtensions.GetValueAsString(Enum) EnumerationExtensions.IsInGroup(Enum, string) Fields Error = 1 Success = 0 ValidationError = 2 Remarks This enumeration is used to classify the result of an operation into one of the predefined categories: Success, Error, or ValidationError."
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Enumerations.Severity.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Enumerations.Severity.html",
    "title": "Enum Severity | Nuv Tools Framework Docs",
    "summary": "Enum Severity Namespace NuvTools.Common.ResultWrapper.Enumerations Assembly NuvTools.Common.dll Represents the severity level of an event or message. public enum Severity Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) EnumerationExtensions.GetDescription(Enum) EnumerationExtensions.GetDisplayAttributes(Enum) EnumerationExtensions.GetEnumerator<TUEnum>(Enum) EnumerationExtensions.GetGroupName(Enum) EnumerationExtensions.GetName(Enum) EnumerationExtensions.GetOrder(Enum) EnumerationExtensions.GetPrompt(Enum) EnumerationExtensions.GetShortName(Enum) EnumerationExtensions.GetValueAsString(Enum) EnumerationExtensions.IsInGroup(Enum, string) Fields Critical = 3 Error = 0 Information = 2 Warning = 1 Remarks This enumeration is commonly used to categorize the importance or urgency of events, such as log messages or application alerts. The severity levels range from informational messages to critical errors."
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Enumerations.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Enumerations.html",
    "title": "Namespace NuvTools.Common.ResultWrapper.Enumerations | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.ResultWrapper.Enumerations Enums ResultType Represents the result type of an operation, indicating its outcome. Severity Represents the severity level of an event or message."
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.IResult-1.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.IResult-1.html",
    "title": "Interface IResult<T> | Nuv Tools Framework Docs",
    "summary": "Interface IResult<T> Namespace NuvTools.Common.ResultWrapper Assembly NuvTools.Common.dll Defines the generic contract for an operation result that includes a data payload. public interface IResult<out T> : IResult Type Parameters T The type of the data returned by the operation. Inherited Members IResult.Messages IResult.MessageDetail IResult.Message IResult.Succeeded IResult.ContainsNotFound IResult.ResultType Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Examples Example usage: IResult<UserDto> result = await _userService.GetUserByIdAsync(1); if (result.Succeeded) { Console.WriteLine($\"User: {result.Data!.Name}\"); } else { Console.WriteLine($\"Error: {result.Message}\"); } Remarks This interface extends IResult by including a strongly-typed Data property. It allows returning both status information and operation results in a unified, consistent structure. Properties Data The data returned by the operation, if applicable. T? Data { get; } Property Value T"
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.IResult.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.IResult.html",
    "title": "Interface IResult | Nuv Tools Framework Docs",
    "summary": "Interface IResult Namespace NuvTools.Common.ResultWrapper Assembly NuvTools.Common.dll Defines the base contract for an operation result, representing the outcome of a business or system process along with contextual messages. public interface IResult Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Examples Example usage: IResult result = Result.Success(\"Operation completed successfully.\"); if (!result.Succeeded) { logger.LogError(result.Message); } Remarks This interface provides a consistent structure for handling success and error results throughout the application. Implementations usually include information such as: Whether the operation succeeded (Succeeded) The result classification (ResultType) Messages providing feedback or error details (Messages) It is commonly implemented by Result and Result<T> classes. Properties ContainsNotFound Indicates whether the result represents a \"Not Found\" condition. Useful for distinguishing between empty results and missing resources. bool ContainsNotFound { get; } Property Value bool Message A simplified or aggregated version of the main message, typically derived from Title. string? Message { get; } Property Value string MessageDetail The primary message detail, typically the first or most relevant message from the Messages collection. MessageDetail? MessageDetail { get; } Property Value MessageDetail Messages A collection of messages associated with the operation result. Each MessageDetail contains structured information about the outcome (e.g., warnings, validation errors, or success messages). List<MessageDetail> Messages { get; } Property Value List<MessageDetail> ResultType Specifies the type or classification of the result, such as Success, Error, or ValidationError. ResultType ResultType { get; } Property Value ResultType Succeeded Indicates whether the operation completed successfully. bool Succeeded { get; } Property Value bool"
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.MessageDetail.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.MessageDetail.html",
    "title": "Class MessageDetail | Nuv Tools Framework Docs",
    "summary": "Class MessageDetail Namespace NuvTools.Common.ResultWrapper Assembly NuvTools.Common.dll Represents a detailed message related to an operation result, such as informational, success, warning, or error messages. public record MessageDetail : IEquatable<MessageDetail> Inheritance object MessageDetail Implements IEquatable<MessageDetail> Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Examples Example usage: var message = new MessageDetail( Title: \"Validation failed\", Detail: \"The email address format is invalid.\", Code: \"VAL001\", Severity: Severity.Warning ); Remarks The MessageDetail record is typically used as part of a Result or Result<T> object to provide structured feedback about an operation. It allows developers to capture human-readable messages along with metadata such as message code and severity. Constructors MessageDetail(MessageDetail) protected MessageDetail(MessageDetail original) Parameters original MessageDetail MessageDetail(string, string?, string?, Severity?) Represents a detailed message related to an operation result, such as informational, success, warning, or error messages. public MessageDetail(string Title, string? Detail = null, string? Code = null, Severity? Severity = null) Parameters Title string The short, human-readable message summarizing the event or result. Detail string An optional detailed description that provides more context or technical information about the message. Code string An optional identifier that uniquely represents the message type or category, useful for localization, logging, or client-side handling. Severity Severity? The severity level of the message (e.g., Information, Warning, Error). Examples Example usage: var message = new MessageDetail( Title: \"Validation failed\", Detail: \"The email address format is invalid.\", Code: \"VAL001\", Severity: Severity.Warning ); Remarks The MessageDetail record is typically used as part of a Result or Result<T> object to provide structured feedback about an operation. It allows developers to capture human-readable messages along with metadata such as message code and severity. Properties Code An optional identifier that uniquely represents the message type or category, useful for localization, logging, or client-side handling. public string? Code { get; init; } Property Value string Detail An optional detailed description that provides more context or technical information about the message. public string? Detail { get; init; } Property Value string EqualityContract protected virtual Type EqualityContract { get; } Property Value Type Severity The severity level of the message (e.g., Information, Warning, Error). public Severity? Severity { get; init; } Property Value Severity? Title The short, human-readable message summarizing the event or result. public string Title { get; init; } Property Value string Methods Deconstruct(out string, out string?, out string?, out Severity?) public void Deconstruct(out string Title, out string? Detail, out string? Code, out Severity? Severity) Parameters Title string Detail string Code string Severity Severity? Equals(MessageDetail?) public virtual bool Equals(MessageDetail? other) Parameters other MessageDetail Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int PrintMembers(StringBuilder) protected virtual bool PrintMembers(StringBuilder builder) Parameters builder StringBuilder Returns bool ToString() public override string ToString() Returns string Operators operator ==(MessageDetail?, MessageDetail?) public static bool operator ==(MessageDetail? left, MessageDetail? right) Parameters left MessageDetail right MessageDetail Returns bool operator !=(MessageDetail?, MessageDetail?) public static bool operator !=(MessageDetail? left, MessageDetail? right) Parameters left MessageDetail right MessageDetail Returns bool"
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Result-1.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Result-1.html",
    "title": "Class Result<T> | Nuv Tools Framework Docs",
    "summary": "Class Result<T> Namespace NuvTools.Common.ResultWrapper Assembly NuvTools.Common.dll Represents a generic operation result that carries a data payload along with success status and message details. public class Result<T> : ResultBase, IResult<T>, IResult Type Parameters T The type of data returned by the operation. Inheritance object ResultBase Result<T> Implements IResult<T> IResult Inherited Members ResultBase.Log(List<MessageDetail>, ILogger) ResultBase.ConvertToMessageDetail(IEnumerable<string>) ResultBase.CreateResult<T>(ResultType, T, List<MessageDetail>, ILogger) ResultBase.Succeeded ResultBase.ContainsNotFound ResultBase.ResultType ResultBase.Messages ResultBase.MessageDetail ResultBase.Message object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Examples Example usage: IResult<UserDto> result = await _userService.GetUserByIdAsync(1); if (result.Succeeded) { Console.WriteLine($\"User: {result.Data!.Name}\"); } else { logger.LogWarning(result.Message); } Remarks This class provides a unified and type-safe way to return both data and status information from service or repository operations. Constructors Result() public Result() Properties Data The data returned by the operation, if applicable. public T? Data { get; set; } Property Value T Methods Fail(MessageDetail, T?, ILogger?) Creates an error result from a single MessageDetail. public static IResult<T> Fail(MessageDetail message, T? data = default, ILogger? logger = null) Parameters message MessageDetail data T logger ILogger Returns IResult<T> Fail(List<MessageDetail>?, T?, ILogger?) Creates an error result with optional messages and data. public static IResult<T> Fail(List<MessageDetail>? messages = null, T? data = default, ILogger? logger = null) Parameters messages List<MessageDetail> data T logger ILogger Returns IResult<T> Fail(List<string>, T?, ILogger?) Creates an error result from a list of simple message strings. public static IResult<T> Fail(List<string> messages, T? data = default, ILogger? logger = null) Parameters messages List<string> data T logger ILogger Returns IResult<T> Fail(Exception, short, T?, ILogger?) Creates an error result from an exception, with optional data and logging. public static IResult<T> Fail(Exception exception, short level = 1, T? data = default, ILogger? logger = null) Parameters exception Exception level short data T logger ILogger Returns IResult<T> Fail(string, T?, ILogger?) Creates an error result from a single message string. public static IResult<T> Fail(string message, T? data = default, ILogger? logger = null) Parameters message string data T logger ILogger Returns IResult<T> FailNotFound(string) Creates a \"Not Found\" failure result with code \"404\". public static IResult<T> FailNotFound(string message) Parameters message string Returns IResult<T> Success(MessageDetail?) Creates a successful operation result containing only a message. public static IResult<T> Success(MessageDetail? message) Parameters message MessageDetail Returns IResult<T> Success(string) Creates a successful operation result with a simple message string. public static IResult<T> Success(string message) Parameters message string Returns IResult<T> Success(T?, MessageDetail?) Creates a successful operation result containing optional data and message. public static IResult<T> Success(T? data = default, MessageDetail? message = null) Parameters data T message MessageDetail Returns IResult<T> Success(T?, string) Creates a successful operation result containing data and a message string. public static IResult<T> Success(T? data, string message) Parameters data T message string Returns IResult<T> ValidationFail(MessageDetail, T?, ILogger?) Creates a validation failure result from a single MessageDetail. public static IResult<T> ValidationFail(MessageDetail message, T? data = default, ILogger? logger = null) Parameters message MessageDetail data T logger ILogger Returns IResult<T> ValidationFail(List<MessageDetail>, T?, ILogger?) Creates a validation failure result with message details. public static IResult<T> ValidationFail(List<MessageDetail> messages, T? data = default, ILogger? logger = null) Parameters messages List<MessageDetail> data T logger ILogger Returns IResult<T> ValidationFail(List<string>, T?, ILogger?) Creates a validation failure result from a list of message strings. public static IResult<T> ValidationFail(List<string> messages, T? data = default, ILogger? logger = null) Parameters messages List<string> data T logger ILogger Returns IResult<T> ValidationFail(string, T?, ILogger?) Creates a validation failure result from a simple message string. public static IResult<T> ValidationFail(string message, T? data = default, ILogger? logger = null) Parameters message string data T logger ILogger Returns IResult<T>"
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Result.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.Result.html",
    "title": "Class Result | Nuv Tools Framework Docs",
    "summary": "Class Result Namespace NuvTools.Common.ResultWrapper Assembly NuvTools.Common.dll Represents a non-generic operation result, containing the outcome of an operation, associated messages, and status information. public class Result : ResultBase, IResult Inheritance object ResultBase Result Implements IResult Inherited Members ResultBase.Log(List<MessageDetail>, ILogger) ResultBase.ConvertToMessageDetail(IEnumerable<string>) ResultBase.CreateResult<T>(ResultType, T, List<MessageDetail>, ILogger) ResultBase.Succeeded ResultBase.ContainsNotFound ResultBase.ResultType ResultBase.Messages ResultBase.MessageDetail ResultBase.Message object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Examples Example usage: IResult result = Result.Success(\"Operation completed successfully.\"); if (!result.Succeeded) { logger.LogError(result.Message); } Remarks This class is used to represent the result of operations that do not return data. It provides static factory methods to easily create success, validation failure, or error results, optionally with message details and logging support. Constructors Result() public Result() Methods Fail(MessageDetail, ILogger?) Creates an error result from a single MessageDetail instance. public static IResult Fail(MessageDetail message, ILogger? logger = null) Parameters message MessageDetail The message describing the failure. logger ILogger An optional ILogger to log the failure. Returns IResult Fail(List<MessageDetail>?, ILogger?) Creates an error result with optional message details and logging. public static IResult Fail(List<MessageDetail>? messages = null, ILogger? logger = null) Parameters messages List<MessageDetail> A list of MessageDetail objects providing error information. logger ILogger An optional ILogger to log the failure. Returns IResult Fail(List<string>, ILogger?) Creates an error result from a list of simple message strings. public static IResult Fail(List<string> messages, ILogger? logger = null) Parameters messages List<string> A list of message strings describing the failure. logger ILogger An optional ILogger to log the failure. Returns IResult Fail(Exception, short, ILogger?) Creates an error result based on an exception, optionally logging it. public static IResult Fail(Exception exception, short level = 1, ILogger? logger = null) Parameters exception Exception The exception that caused the failure. level short Specifies how many inner exception levels should be aggregated. logger ILogger An optional ILogger to log the exception. Returns IResult Fail(string, ILogger?) Creates an error result from a single message string. public static IResult Fail(string message, ILogger? logger = null) Parameters message string A short message describing the failure. logger ILogger An optional ILogger to log the failure. Returns IResult FailNotFound(string) Creates a failure result representing a \"Not Found\" condition (HTTP 404). public static IResult FailNotFound(string message) Parameters message string The message describing the missing resource. Returns IResult Success(MessageDetail?) Creates a successful operation result, optionally with a message. public static IResult Success(MessageDetail? message = null) Parameters message MessageDetail An optional message describing the success. Returns IResult Success(string) Creates a successful operation result with a simple message string. public static IResult Success(string message) Parameters message string Returns IResult ValidationFail(MessageDetail, ILogger?) Creates a validation failure result from a single MessageDetail. public static IResult ValidationFail(MessageDetail message, ILogger? logger = null) Parameters message MessageDetail logger ILogger Returns IResult ValidationFail(List<MessageDetail>, ILogger?) Creates a validation failure result with detailed validation messages. public static IResult ValidationFail(List<MessageDetail> messages, ILogger? logger = null) Parameters messages List<MessageDetail> A list of validation error messages. logger ILogger An optional ILogger for logging the validation errors. Returns IResult ValidationFail(List<string>, ILogger?) Creates a validation failure result from a list of message strings. public static IResult ValidationFail(List<string> messages, ILogger? logger = null) Parameters messages List<string> logger ILogger Returns IResult ValidationFail(string, ILogger?) Creates a validation failure result from a single message string. public static IResult ValidationFail(string message, ILogger? logger = null) Parameters message string logger ILogger Returns IResult"
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.ResultBase.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.ResultBase.html",
    "title": "Class ResultBase | Nuv Tools Framework Docs",
    "summary": "Class ResultBase Namespace NuvTools.Common.ResultWrapper Assembly NuvTools.Common.dll Base class for operation results, containing shared properties and logic. public abstract class ResultBase Inheritance object ResultBase Derived Result Result<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Constructors ResultBase() protected ResultBase() Properties ContainsNotFound Indicates whether the result contains a \"not found\" message. public bool ContainsNotFound { get; set; } Property Value bool Message Returns a formatted string with the first message (e.g., \"Title - Detail\"). Ignored in JSON serialization to prevent duplication. [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Message { get; } Property Value string MessageDetail Returns the first message detail (usually the main one). Ignored during JSON serialization to avoid redundancy. [JsonIgnore] public MessageDetail? MessageDetail { get; } Property Value MessageDetail Messages List of message details returned by the operation. public List<MessageDetail> Messages { get; set; } Property Value List<MessageDetail> ResultType Represents the type of the result (Success, Error, ValidationError, etc.). public ResultType ResultType { get; set; } Property Value ResultType Succeeded Indicates whether the operation succeeded. public bool Succeeded { get; set; } Property Value bool Methods ConvertToMessageDetail(IEnumerable<string>) Converts a list of strings into a list of message details. protected static List<MessageDetail> ConvertToMessageDetail(IEnumerable<string> value) Parameters value IEnumerable<string> Returns List<MessageDetail> CreateResult<T>(ResultType, T, List<MessageDetail>?, ILogger?) Creates a new instance of a result. protected static T CreateResult<T>(ResultType resultType, T instance, List<MessageDetail>? messages = null, ILogger? logger = null) where T : ResultBase Parameters resultType ResultType instance T messages List<MessageDetail> logger ILogger Returns T Type Parameters T Log(List<MessageDetail>?, ILogger?) Logs all message details using the specified logger. protected static void Log(List<MessageDetail>? messages, ILogger? logger) Parameters messages List<MessageDetail> logger ILogger"
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.ResultExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.ResultExtensions.html",
    "title": "Class ResultExtensions | Nuv Tools Framework Docs",
    "summary": "Class ResultExtensions Namespace NuvTools.Common.ResultWrapper Assembly NuvTools.Common.dll Extension methods to convert HttpResponseMessage into IResult or IResult<T>. Handles both success and error responses (e.g., 404, 500) that may contain a serialized Result. public static class ResultExtensions Inheritance object ResultExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ToResultAsync(HttpResponseMessage, CancellationToken) Converts an HttpResponseMessage into a non-generic IResult. Always returns a valid IResult (never null), even for non-successful responses or invalid bodies. public static Task<IResult> ToResultAsync(this HttpResponseMessage response, CancellationToken cancellationToken = default) Parameters response HttpResponseMessage cancellationToken CancellationToken Returns Task<IResult> ToResultAsync<T>(HttpResponseMessage, CancellationToken) Converts an HttpResponseMessage into a strongly typed IResult<T>. Always returns a valid IResult<T> (never null), even for non-successful responses or invalid bodies. public static Task<IResult<T>> ToResultAsync<T>(this HttpResponseMessage response, CancellationToken cancellationToken = default) Parameters response HttpResponseMessage cancellationToken CancellationToken Returns Task<IResult<T>> Type Parameters T"
  },
  "api/NuvTools.Common/NuvTools.Common.ResultWrapper.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.ResultWrapper.html",
    "title": "Namespace NuvTools.Common.ResultWrapper | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.ResultWrapper Classes MessageDetail Represents a detailed message related to an operation result, such as informational, success, warning, or error messages. Result Represents a non-generic operation result, containing the outcome of an operation, associated messages, and status information. ResultBase Base class for operation results, containing shared properties and logic. ResultExtensions Extension methods to convert HttpResponseMessage into IResult or IResult<T>. Handles both success and error responses (e.g., 404, 500) that may contain a serialized Result. Result<T> Represents a generic operation result that carries a data payload along with success status and message details. Interfaces IResult Defines the base contract for an operation result, representing the outcome of a business or system process along with contextual messages. IResult<T> Defines the generic contract for an operation result that includes a data payload."
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.DateTimeJsonConverter-1.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.DateTimeJsonConverter-1.html",
    "title": "Class DateTimeJsonConverter<T> | Nuv Tools Framework Docs",
    "summary": "Class DateTimeJsonConverter<T> Namespace NuvTools.Common.Serialization.Json.Converters Assembly NuvTools.Common.dll public class DateTimeJsonConverter<T> : JsonConverter<T> where T : struct Type Parameters T Inheritance object JsonConverter JsonConverter<T> DateTimeJsonConverter<T> Inherited Members JsonConverter<T>.CanConvert(Type) JsonConverter<T>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<T>.WriteAsPropertyName(Utf8JsonWriter, T, JsonSerializerOptions) JsonConverter<T>.HandleNull JsonConverter<T>.Type object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Constructors DateTimeJsonConverter(string) public DateTimeJsonConverter(string format) Parameters format string Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) public override T Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader typeToConvert Type options JsonSerializerOptions Returns T Write(Utf8JsonWriter, T, JsonSerializerOptions) public override void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter value T options JsonSerializerOptions"
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.DateTimeJsonConverterAttribute.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.DateTimeJsonConverterAttribute.html",
    "title": "Class DateTimeJsonConverterAttribute | Nuv Tools Framework Docs",
    "summary": "Class DateTimeJsonConverterAttribute Namespace NuvTools.Common.Serialization.Json.Converters Assembly NuvTools.Common.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = false)] public class DateTimeJsonConverterAttribute : JsonConverterAttribute Inheritance object Attribute JsonAttribute JsonConverterAttribute DateTimeJsonConverterAttribute Inherited Members JsonConverterAttribute.ConverterType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Constructors DateTimeJsonConverterAttribute(string) public DateTimeJsonConverterAttribute(string format) Parameters format string Methods CreateConverter(Type) public override JsonConverter CreateConverter(Type typeToConvert) Parameters typeToConvert Type Returns JsonConverter"
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.MaxDepthJsonConverter-1.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.MaxDepthJsonConverter-1.html",
    "title": "Class MaxDepthJsonConverter<T> | Nuv Tools Framework Docs",
    "summary": "Class MaxDepthJsonConverter<T> Namespace NuvTools.Common.Serialization.Json.Converters Assembly NuvTools.Common.dll public class MaxDepthJsonConverter<T> : JsonConverter<T> Type Parameters T Inheritance object JsonConverter JsonConverter<T> MaxDepthJsonConverter<T> Inherited Members JsonConverter<T>.CanConvert(Type) JsonConverter<T>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<T>.WriteAsPropertyName(Utf8JsonWriter, T, JsonSerializerOptions) JsonConverter<T>.HandleNull JsonConverter<T>.Type object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Constructors MaxDepthJsonConverter(int) public MaxDepthJsonConverter(int maxDepth) Parameters maxDepth int Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) public override T? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader typeToConvert Type options JsonSerializerOptions Returns T Write(Utf8JsonWriter, T, JsonSerializerOptions) public override void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter value T options JsonSerializerOptions"
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.Json.Converters.html",
    "title": "Namespace NuvTools.Common.Serialization.Json.Converters | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Serialization.Json.Converters Classes DateTimeJsonConverterAttribute DateTimeJsonConverter<T> MaxDepthJsonConverter<T>"
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.Json.ObjectExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.Json.ObjectExtensions.html",
    "title": "Class ObjectExtensions | Nuv Tools Framework Docs",
    "summary": "Class ObjectExtensions Namespace NuvTools.Common.Serialization.Json Assembly NuvTools.Common.dll public static class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Clone<T>(T, int) Clone the value using serialization and deserialization aproach. public static T? Clone<T>(this T value, int totalLevel = 1) Parameters value T Value to be copied. totalLevel int Quantity of levels to be copied. Returns T Type Parameters T Deserialize<T>(string, int) Deserializes the Json string. public static T? Deserialize<T>(this string serializedValue, int totalLevel = 0) Parameters serializedValue string Serialized string (Json) to be deserialized. totalLevel int Quantity of levels to be deserialized. Default: 0 - Will returns all levels. Returns T Type Parameters T Serialize<T>(T, int) Serialize the value. public static string Serialize<T>(this T value, int totalLevel = 1) Parameters value T Value to be serialized. totalLevel int Quantity of levels to be serialized. Returns string Type Parameters T"
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.Json.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.Json.html",
    "title": "Namespace NuvTools.Common.Serialization.Json | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Serialization.Json Classes ObjectExtensions"
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.SerializationHelper.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.SerializationHelper.html",
    "title": "Class SerializationHelper | Nuv Tools Framework Docs",
    "summary": "Class SerializationHelper Namespace NuvTools.Common.Serialization Assembly NuvTools.Common.dll public static class SerializationHelper Inheritance object SerializationHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods IsList(Type) Verify if the value type is some kind of list (IEnumerable). public static bool IsList(this Type valueType) Parameters valueType Type Type to be verified. Returns bool IsSimple(Type) Verify if the value type is simple. public static bool IsSimple(this Type valueType) Parameters valueType Type Type to be verified. Returns bool"
  },
  "api/NuvTools.Common/NuvTools.Common.Serialization.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Serialization.html",
    "title": "Namespace NuvTools.Common.Serialization | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Serialization Classes SerializationHelper"
  },
  "api/NuvTools.Common/NuvTools.Common.Strings.StringExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Strings.StringExtensions.html",
    "title": "Class StringExtensions | Nuv Tools Framework Docs",
    "summary": "Class StringExtensions Namespace NuvTools.Common.Strings Assembly NuvTools.Common.dll public static class StringExtensions Inheritance object StringExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Format(string, Dictionary<string, object?>, IFormatProvider?) Replaces the format item in a specified string with the string representation of a corresponding object by the key in the Dictionary. public static string Format(this string template, Dictionary<string, object?> args, IFormatProvider? provider = null) Parameters template string A composite format string. args Dictionary<string, object> A Dictionary that contains zero or more values to format by the key. provider IFormatProvider An object that supplies culture-specific formatting information. Returns string A copy of format in which the format items have been replaced by the string representation of the corresponding values in Dictionary. Exceptions ArgumentNullException Format(string, IFormatProvider?, params object?[]) Replaces the format item in a specified string with the string representation of a corresponding object by the key in the Dictionary. public static string Format(this string template, IFormatProvider? provider, params object?[] args) Parameters template string A composite format string. provider IFormatProvider An object that supplies culture-specific formatting information. args object[] A string array that contains zero or more objects to format. Returns string A copy of format in which the format items have been replaced by the string representation of the corresponding strings in args. Exceptions ArgumentNullException Format(string, params object?[]) Replaces the format item in a specified string with the string representation of a corresponding object by the key in the Dictionary. public static string Format(this string template, params object?[] args) Parameters template string A composite format string. args object[] A string array that contains zero or more objects to format. Returns string A copy of format in which the format items have been replaced by the string representation of the corresponding strings in args. Exceptions ArgumentNullException FormatJson(string) Format the string to pretty-format Json. public static string FormatJson(this string value) Parameters value string Json content. Returns string GetNumbersOnly(string) public static string GetNumbersOnly(this string value) Parameters value string Returns string IsValidJson(string) Checks whether the text is a valid Json. public static bool IsValidJson(this string value) Parameters value string Returns bool Left(string?, int) Gets the first characters from string. public static string? Left(this string? value, int length) Parameters value string String that contains the characters to be extracted. length int The number of characters to be extracted. Returns string Exceptions ArgumentNullException RemoveDiacritics(string?) Remove a sign, such as an accent or cedill. By Blair Conrad See also here. public static string? RemoveDiacritics(this string? value) Parameters value string The text with sign, accent or cedill to remove. Returns string RemoveSpecialCharacters(string?) Removes the special characters from text. public static string? RemoveSpecialCharacters(this string? value) Parameters value string Text content. Returns string Right(string?, int) Gets the last characters from string. public static string? Right(this string? value, int length) Parameters value string String that contains the characters to be extracted. length int The number of characters to be extracted. Returns string Exceptions ArgumentNullException"
  },
  "api/NuvTools.Common/NuvTools.Common.Strings.StringHelper.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Strings.StringHelper.html",
    "title": "Class StringHelper | Nuv Tools Framework Docs",
    "summary": "Class StringHelper Namespace NuvTools.Common.Strings Assembly NuvTools.Common.dll public class StringHelper Inheritance object StringHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods ObjectExtensions.Clone<T>(T, int) ObjectExtensions.Serialize<T>(T, int) ObjectExtensions.GetQueryString<T>(T, string?) Constructors StringHelper() public StringHelper() Methods RandomAlphaNumericString(int) public static string RandomAlphaNumericString(int length) Parameters length int Returns string"
  },
  "api/NuvTools.Common/NuvTools.Common.Strings.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Strings.html",
    "title": "Namespace NuvTools.Common.Strings | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Strings Classes StringExtensions StringHelper"
  },
  "api/NuvTools.Common/NuvTools.Common.Web.ObjectExtensions.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Web.ObjectExtensions.html",
    "title": "Class ObjectExtensions | Nuv Tools Framework Docs",
    "summary": "Class ObjectExtensions Namespace NuvTools.Common.Web Assembly NuvTools.Common.dll public static class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetQueryString<T>(T, string?) Gets the query string url from the object and uriBase. Only simple/primitives/lists types are converted. public static string GetQueryString<T>(this T obj, string? uriBase = null) where T : class Parameters obj T Object source to generate QueryString uriBase string Uri base address Returns string Type Parameters T ParseQueryString(string) Gets the dictionary from QueryString. public static Dictionary<string, object> ParseQueryString(this string queryString) Parameters queryString string QueryString to parse Returns Dictionary<string, object>"
  },
  "api/NuvTools.Common/NuvTools.Common.Web.html": {
    "href": "api/NuvTools.Common/NuvTools.Common.Web.html",
    "title": "Namespace NuvTools.Common.Web | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Common.Web Classes ObjectExtensions"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.DbContextBase.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.DbContextBase.html",
    "title": "Class DbContextBase | Nuv Tools Framework Docs",
    "summary": "Class DbContextBase Namespace NuvTools.Data.EntityFrameworkCore.Context Assembly NuvTools.Data.EntityFrameworkCore.dll public abstract class DbContextBase : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable, IDbContextCommands, IDbContextWithListCommands Inheritance object DbContext DbContextBase Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable IDbContextCommands IDbContextWithListCommands Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods DbContextExtensions.AddAndSaveAsync<TEntity, TKey>(DbContext, TEntity, CancellationToken) DbContextExtensions.AddAndSaveWithCompositeKeyAsync<TEntity>(DbContext, TEntity, CancellationToken) DbContextExtensions.ExecuteWithStrategyAsync(DbContext, Func<CancellationToken, Task>, CancellationToken) DbContextExtensions.ExecuteWithStrategyAsync<T>(DbContext, Func<CancellationToken, Task<T>>, CancellationToken) DbContextExtensions.FindPrimaryKeyValues<TEntity>(DbContext, TEntity) DbContextExtensions.RemoveAndSaveAsync<TEntity>(DbContext, params object[]) DbContextExtensions.RemoveAndSaveAsync<TEntity>(DbContext, object[], CancellationToken) DbContextExtensions.UpdateAndSaveAsync<TEntity>(DbContext, TEntity, params object[]) DbContextExtensions.UpdateAndSaveAsync<TEntity>(DbContext, TEntity, object[], CancellationToken) DbContextWithListExtensions.AddOrRemoveFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) DbContextWithListExtensions.AddOrUpdateFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) DbContextWithListExtensions.SyncFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Constructors DbContextBase() protected DbContextBase() DbContextBase(DbContextOptions) protected DbContextBase(DbContextOptions options) Parameters options DbContextOptions Properties CurrentTransaction public IDbContextTransaction? CurrentTransaction { get; } Property Value IDbContextTransaction Methods AddAndSaveAsync<TEntity, TKey>(TEntity, CancellationToken) public Task<IResult<TKey>> AddAndSaveAsync<TEntity, TKey>(TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity cancellationToken CancellationToken Returns Task<IResult<TKey>> Type Parameters TEntity TKey AddAndSaveWithCompositeKeyAsync<TEntity>(TEntity, CancellationToken) public Task<IResult<object[]>> AddAndSaveWithCompositeKeyAsync<TEntity>(TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity cancellationToken CancellationToken Returns Task<IResult<object[]>> Type Parameters TEntity AddOrRemoveFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or removing entities, without updating any entities. public Task<IResult> AddOrRemoveFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrRemoveFromListAsync( updatedOrders, o => o.OrderId, o => o.IsPending ); Remarks This method adds entities in the list that are not in the database and removes entities in the database that are not in the list. It does not update any entities. AddOrUpdateFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or updating entities, without removing any entities. public Task<IResult> AddOrUpdateFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrUpdateFromListAsync( updatedProducts, p => p.ProductCode, p => p.IsActive ); Remarks This method adds entities in the list that are not in the database and updates entities that exist in both. It does not remove any entities from the database. BeginTransactionAsync(CancellationToken) public Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IDbContextTransaction> CommitTransactionAsync(CancellationToken) public Task CommitTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task ExecuteWithStrategyAsync(Func<CancellationToken, Task>, CancellationToken) public Task ExecuteWithStrategyAsync(Func<CancellationToken, Task> action, CancellationToken cancellationToken = default) Parameters action Func<CancellationToken, Task> cancellationToken CancellationToken Returns Task ExecuteWithStrategyAsync<T>(Func<CancellationToken, Task<T>>, CancellationToken) public Task<T> ExecuteWithStrategyAsync<T>(Func<CancellationToken, Task<T>> action, CancellationToken cancellationToken = default) Parameters action Func<CancellationToken, Task<T>> cancellationToken CancellationToken Returns Task<T> Type Parameters T RemoveAndSaveAsync<TEntity>(params object[]) public Task<IResult> RemoveAndSaveAsync<TEntity>(params object[] keyValues) where TEntity : class Parameters keyValues object[] Returns Task<IResult> Type Parameters TEntity RemoveAndSaveAsync<TEntity>(object[], CancellationToken) public Task<IResult> RemoveAndSaveAsync<TEntity>(object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity RollbackTransactionAsync(CancellationToken) public Task RollbackTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task SyncFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding, updating, or removing entities. public Task<IResult> SyncFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.SyncFromListAsync( updatedEmployees, e => e.Id, e => e.IsActive ); Remarks This method adds entities in the list that are not in the database, updates entities that exist in both, and removes entities in the database that are not in the list. UpdateAndSaveAsync<TEntity>(TEntity, params object[]) public Task<IResult> UpdateAndSaveAsync<TEntity>(TEntity entity, params object[] keyValues) where TEntity : class Parameters entity TEntity keyValues object[] Returns Task<IResult> Type Parameters TEntity UpdateAndSaveAsync<TEntity>(TEntity, object[], CancellationToken) public Task<IResult> UpdateAndSaveAsync<TEntity>(TEntity entity, object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.IDbContextCommands.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.IDbContextCommands.html",
    "title": "Interface IDbContextCommands | Nuv Tools Framework Docs",
    "summary": "Interface IDbContextCommands Namespace NuvTools.Data.EntityFrameworkCore.Context Assembly NuvTools.Data.EntityFrameworkCore.dll public interface IDbContextCommands Properties CurrentTransaction IDbContextTransaction? CurrentTransaction { get; } Property Value IDbContextTransaction Methods AddAndSaveAsync<TEntity, TKey>(TEntity, CancellationToken) Task<IResult<TKey>> AddAndSaveAsync<TEntity, TKey>(TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity cancellationToken CancellationToken Returns Task<IResult<TKey>> Type Parameters TEntity TKey AddAndSaveWithCompositeKeyAsync<TEntity>(TEntity, CancellationToken) Task<IResult<object[]>> AddAndSaveWithCompositeKeyAsync<TEntity>(TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity cancellationToken CancellationToken Returns Task<IResult<object[]>> Type Parameters TEntity BeginTransactionAsync(CancellationToken) Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IDbContextTransaction> CommitTransactionAsync(CancellationToken) Task CommitTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task ExecuteWithStrategyAsync(Func<CancellationToken, Task>, CancellationToken) Task ExecuteWithStrategyAsync(Func<CancellationToken, Task> action, CancellationToken cancellationToken = default) Parameters action Func<CancellationToken, Task> cancellationToken CancellationToken Returns Task ExecuteWithStrategyAsync<T>(Func<CancellationToken, Task<T>>, CancellationToken) Task<T> ExecuteWithStrategyAsync<T>(Func<CancellationToken, Task<T>> action, CancellationToken cancellationToken = default) Parameters action Func<CancellationToken, Task<T>> cancellationToken CancellationToken Returns Task<T> Type Parameters T RemoveAndSaveAsync<TEntity>(params object[]) Task<IResult> RemoveAndSaveAsync<TEntity>(params object[] keyValues) where TEntity : class Parameters keyValues object[] Returns Task<IResult> Type Parameters TEntity RemoveAndSaveAsync<TEntity>(object[], CancellationToken) Task<IResult> RemoveAndSaveAsync<TEntity>(object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity RollbackTransactionAsync(CancellationToken) Task RollbackTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task SaveChangesAsync(CancellationToken) Task<int> SaveChangesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<int> UpdateAndSaveAsync<TEntity>(TEntity, params object[]) Task<IResult> UpdateAndSaveAsync<TEntity>(TEntity entity, params object[] keyValues) where TEntity : class Parameters entity TEntity keyValues object[] Returns Task<IResult> Type Parameters TEntity UpdateAndSaveAsync<TEntity>(TEntity, object[], CancellationToken) Task<IResult> UpdateAndSaveAsync<TEntity>(TEntity entity, object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.IDbContextWithListCommands.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.IDbContextWithListCommands.html",
    "title": "Interface IDbContextWithListCommands | Nuv Tools Framework Docs",
    "summary": "Interface IDbContextWithListCommands Namespace NuvTools.Data.EntityFrameworkCore.Context Assembly NuvTools.Data.EntityFrameworkCore.dll public interface IDbContextWithListCommands Methods AddOrRemoveFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or removing entities, without updating any entities. Task<IResult> AddOrRemoveFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrRemoveFromListAsync( updatedOrders, o => o.OrderId, o => o.IsPending ); Remarks This method adds entities in the list that are not in the database and removes entities in the database that are not in the list. It does not update any entities. AddOrUpdateFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or updating entities, without removing any entities. Task<IResult> AddOrUpdateFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrUpdateFromListAsync( updatedProducts, p => p.ProductCode, p => p.IsActive ); Remarks This method adds entities in the list that are not in the database and updates entities that exist in both. It does not remove any entities from the database. SyncFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding, updating, or removing entities. Task<IResult> SyncFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.SyncFromListAsync( updatedEmployees, e => e.Id, e => e.IsActive ); Remarks This method adds entities in the list that are not in the database, updates entities that exist in both, and removes entities in the database that are not in the list."
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Context.html",
    "title": "Namespace NuvTools.Data.EntityFrameworkCore.Context | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.EntityFrameworkCore.Context Classes DbContextBase Interfaces IDbContextCommands IDbContextWithListCommands"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Design.DesignTimeDbContextFactoryBase-1.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Design.DesignTimeDbContextFactoryBase-1.html",
    "title": "Class DesignTimeDbContextFactoryBase<TContext> | Nuv Tools Framework Docs",
    "summary": "Class DesignTimeDbContextFactoryBase<TContext> Namespace NuvTools.Data.EntityFrameworkCore.Design Assembly NuvTools.Data.EntityFrameworkCore.dll public abstract class DesignTimeDbContextFactoryBase<TContext> : IDesignTimeDbContextFactory<TContext> where TContext : DbContext Type Parameters TContext Inheritance object DesignTimeDbContextFactoryBase<TContext> Implements IDesignTimeDbContextFactory<TContext> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors DesignTimeDbContextFactoryBase() protected DesignTimeDbContextFactoryBase() Properties Configuration Contains the configuration settings loaded from files. InitializeConfiguration(params JsonConfigurationSource[]) protected IConfiguration? Configuration { get; } Property Value IConfiguration Methods CreateDbContext(string[]) Creates a new instance of a derived context. public TContext CreateDbContext(string[] args) Parameters args string[] Arguments provided by the design-time service. Returns TContext An instance of TContext. CreateNewInstance(DbContextOptionsBuilder<TContext>) protected abstract TContext CreateNewInstance(DbContextOptionsBuilder<TContext> optionsBuilder) Parameters optionsBuilder DbContextOptionsBuilder<TContext> Returns TContext InitializeConfiguration(params JsonConfigurationSource[]) Allows initialize the Configuration settings for later use. protected void InitializeConfiguration(params JsonConfigurationSource[] files) Parameters files JsonConfigurationSource[] Json file to be added into Configuration settings. Note: The base path is set to the current directory application."
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Design.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Design.html",
    "title": "Namespace NuvTools.Data.EntityFrameworkCore.Design | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.EntityFrameworkCore.Design Classes DesignTimeDbContextFactoryBase<TContext>"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Extensions.DbContextExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Extensions.DbContextExtensions.html",
    "title": "Class DbContextExtensions | Nuv Tools Framework Docs",
    "summary": "Class DbContextExtensions Namespace NuvTools.Data.EntityFrameworkCore.Extensions Assembly NuvTools.Data.EntityFrameworkCore.dll public static class DbContextExtensions Inheritance object DbContextExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddAndSaveAsync<TEntity, TKey>(DbContext, TEntity, CancellationToken) public static Task<IResult<TKey>> AddAndSaveAsync<TEntity, TKey>(this DbContext context, TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters context DbContext entity TEntity cancellationToken CancellationToken Returns Task<IResult<TKey>> Type Parameters TEntity TKey AddAndSaveWithCompositeKeyAsync<TEntity>(DbContext, TEntity, CancellationToken) public static Task<IResult<object[]>> AddAndSaveWithCompositeKeyAsync<TEntity>(this DbContext context, TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters context DbContext entity TEntity cancellationToken CancellationToken Returns Task<IResult<object[]>> Type Parameters TEntity ExecuteWithStrategyAsync(DbContext, Func<CancellationToken, Task>, CancellationToken) Executes the provided action within the execution strategy of the DbContext. https://docs.microsoft.com/en-us/ef/core/miscellaneous/connection-resiliency public static Task ExecuteWithStrategyAsync(this DbContext context, Func<CancellationToken, Task> action, CancellationToken cancellationToken = default) Parameters context DbContext The DbContext instance. action Func<CancellationToken, Task> The action to execute. cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task A Task representing the asynchronous operation. ExecuteWithStrategyAsync<T>(DbContext, Func<CancellationToken, Task<T>>, CancellationToken) Executes the provided action within the execution strategy of the DbContext and returns a result. https://docs.microsoft.com/en-us/ef/core/miscellaneous/connection-resiliency public static Task<T> ExecuteWithStrategyAsync<T>(this DbContext context, Func<CancellationToken, Task<T>> action, CancellationToken cancellationToken = default) Parameters context DbContext The DbContext instance. action Func<CancellationToken, Task<T>> The action to execute. cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<T> A Task representing the asynchronous operation, with a result of type T. Type Parameters T The type of the result. FindPrimaryKeyValues<TEntity>(DbContext, TEntity) public static object[] FindPrimaryKeyValues<TEntity>(this DbContext context, TEntity entity) where TEntity : class Parameters context DbContext entity TEntity Returns object[] Type Parameters TEntity RemoveAndSaveAsync<TEntity>(DbContext, params object[]) public static Task<IResult> RemoveAndSaveAsync<TEntity>(this DbContext context, params object[] keyValues) where TEntity : class Parameters context DbContext keyValues object[] Returns Task<IResult> Type Parameters TEntity RemoveAndSaveAsync<TEntity>(DbContext, object[], CancellationToken) public static Task<IResult> RemoveAndSaveAsync<TEntity>(this DbContext context, object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters context DbContext keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity UpdateAndSaveAsync<TEntity>(DbContext, TEntity, params object[]) public static Task<IResult> UpdateAndSaveAsync<TEntity>(this DbContext context, TEntity entity, params object[] keyValues) where TEntity : class Parameters context DbContext entity TEntity keyValues object[] Returns Task<IResult> Type Parameters TEntity UpdateAndSaveAsync<TEntity>(DbContext, TEntity, object[], CancellationToken) public static Task<IResult> UpdateAndSaveAsync<TEntity>(this DbContext context, TEntity entity, object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters context DbContext entity TEntity keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.html",
    "title": "Class DbContextWithListExtensions | Nuv Tools Framework Docs",
    "summary": "Class DbContextWithListExtensions Namespace NuvTools.Data.EntityFrameworkCore.Extensions Assembly NuvTools.Data.EntityFrameworkCore.dll public static class DbContextWithListExtensions Inheritance object DbContextWithListExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddOrRemoveFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or removing entities, without updating any entities. public static Task<IResult> AddOrRemoveFromListAsync<TEntity, TKey>(this DbContext context, IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters context DbContext The DbContext instance to operate on. entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrRemoveFromListAsync( updatedOrders, o => o.OrderId, o => o.IsPending ); Remarks This method adds entities in the list that are not in the database and removes entities in the database that are not in the list. It does not update any entities. AddOrUpdateFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or updating entities, without removing any entities. public static Task<IResult> AddOrUpdateFromListAsync<TEntity, TKey>(this DbContext context, IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters context DbContext The DbContext instance to operate on. entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrUpdateFromListAsync( updatedProducts, p => p.ProductCode, p => p.IsActive ); Remarks This method adds entities in the list that are not in the database and updates entities that exist in both. It does not remove any entities from the database. SyncFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding, updating, or removing entities. public static Task<IResult> SyncFromListAsync<TEntity, TKey>(this DbContext context, IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters context DbContext The DbContext instance to operate on. entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.SyncFromListAsync( updatedEmployees, e => e.Id, e => e.IsActive ); Remarks This method adds entities in the list that are not in the database, updates entities that exist in both, and removes entities in the database that are not in the list."
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Extensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Extensions.html",
    "title": "Namespace NuvTools.Data.EntityFrameworkCore.Extensions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.EntityFrameworkCore.Extensions Classes DbContextExtensions DbContextWithListExtensions"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Paging.PagingExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Paging.PagingExtensions.html",
    "title": "Class PagingExtensions | Nuv Tools Framework Docs",
    "summary": "Class PagingExtensions Namespace NuvTools.Data.EntityFrameworkCore.Paging Assembly NuvTools.Data.EntityFrameworkCore.dll public static class PagingExtensions Inheritance object PagingExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods PagingWrapAsync<T>(IQueryable<T>, int, int, CancellationToken) public static Task<PagingWithQueryableList<T>> PagingWrapAsync<T>(this IQueryable<T> list, int pageNumber = 1, int pageSize = 30, CancellationToken cancellationToken = default) Parameters list IQueryable<T> pageNumber int pageSize int cancellationToken CancellationToken Returns Task<PagingWithQueryableList<T>> Type Parameters T PagingWrapWithEnumerableListAsync<T>(IQueryable<T>, int, int, CancellationToken) public static Task<PagingWithEnumerableList<T>> PagingWrapWithEnumerableListAsync<T>(this IQueryable<T> list, int pageNumber = 1, int pageSize = 30, CancellationToken cancellationToken = default) Parameters list IQueryable<T> pageNumber int pageSize int cancellationToken CancellationToken Returns Task<PagingWithEnumerableList<T>> Type Parameters T ToPagingWithEnumerableListAsync<T>(PagingWithQueryableList<T>, CancellationToken) public static Task<PagingWithEnumerableList<T>> ToPagingWithEnumerableListAsync<T>(this PagingWithQueryableList<T> paging, CancellationToken cancellationToken = default) Parameters paging PagingWithQueryableList<T> cancellationToken CancellationToken Returns Task<PagingWithEnumerableList<T>> Type Parameters T"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Paging.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.Paging.html",
    "title": "Namespace NuvTools.Data.EntityFrameworkCore.Paging | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.EntityFrameworkCore.Paging Classes PagingExtensions"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions.ModelBuilderExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions.ModelBuilderExtensions.html",
    "title": "Class ModelBuilderExtensions | Nuv Tools Framework Docs",
    "summary": "Class ModelBuilderExtensions Namespace NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions Assembly NuvTools.Data.EntityFrameworkCore.PostgreSQL.dll public static class ModelBuilderExtensions Inheritance object ModelBuilderExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods UseSnakeCaseNamingConvention(ModelBuilder) public static void UseSnakeCaseNamingConvention(this ModelBuilder builder) Parameters builder ModelBuilder"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions.ServiceCollectionExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Nuv Tools Framework Docs",
    "summary": "Class ServiceCollectionExtensions Namespace NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions Assembly NuvTools.Data.EntityFrameworkCore.PostgreSQL.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddDatabaseByConnectionName<TContext>(IServiceCollection, IConfiguration, string, Action<NpgsqlDbContextOptionsBuilder>?, ServiceLifetime) public static IServiceCollection AddDatabaseByConnectionName<TContext>(this IServiceCollection services, IConfiguration configuration, string connectionName, Action<NpgsqlDbContextOptionsBuilder>? npgsqlOptionsAction = null, ServiceLifetime contextLifetime = ServiceLifetime.Scoped) where TContext : DbContext Parameters services IServiceCollection configuration IConfiguration connectionName string npgsqlOptionsAction Action<NpgsqlDbContextOptionsBuilder> contextLifetime ServiceLifetime Returns IServiceCollection Type Parameters TContext AddDatabaseByConnectionName<TContext>(IServiceCollection, string, string, Action<NpgsqlDbContextOptionsBuilder>?, ServiceLifetime) public static IServiceCollection AddDatabaseByConnectionName<TContext>(this IServiceCollection services, string connectionName, string settingsFileName = \"appsettings.json\", Action<NpgsqlDbContextOptionsBuilder>? npgsqlOptionsAction = null, ServiceLifetime contextLifetime = ServiceLifetime.Scoped) where TContext : DbContext Parameters services IServiceCollection connectionName string settingsFileName string npgsqlOptionsAction Action<NpgsqlDbContextOptionsBuilder> contextLifetime ServiceLifetime Returns IServiceCollection Type Parameters TContext AddDatabase<TContext>(IServiceCollection, string?, Action<NpgsqlDbContextOptionsBuilder>?, ServiceLifetime) public static IServiceCollection AddDatabase<TContext>(this IServiceCollection services, string? connectionString, Action<NpgsqlDbContextOptionsBuilder>? npgsqlOptionsAction = null, ServiceLifetime contextLifetime = ServiceLifetime.Scoped) where TContext : DbContext Parameters services IServiceCollection connectionString string npgsqlOptionsAction Action<NpgsqlDbContextOptionsBuilder> contextLifetime ServiceLifetime Returns IServiceCollection Type Parameters TContext"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions.html",
    "title": "Namespace NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.EntityFrameworkCore.PostgreSQL.Extensions Classes ModelBuilderExtensions ServiceCollectionExtensions"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.SqlServer.Extensions.ServiceCollectionExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.SqlServer.Extensions.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Nuv Tools Framework Docs",
    "summary": "Class ServiceCollectionExtensions Namespace NuvTools.Data.EntityFrameworkCore.SqlServer.Extensions Assembly NuvTools.Data.EntityFrameworkCore.SqlServer.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddDatabaseByConnectionName<TContext>(IServiceCollection, IConfiguration, string, Action<SqlServerDbContextOptionsBuilder>?, ServiceLifetime) public static IServiceCollection AddDatabaseByConnectionName<TContext>(this IServiceCollection services, IConfiguration configuration, string connectionName, Action<SqlServerDbContextOptionsBuilder>? sqlServerOptionsAction = null, ServiceLifetime contextLifetime = ServiceLifetime.Scoped) where TContext : DbContext Parameters services IServiceCollection configuration IConfiguration connectionName string sqlServerOptionsAction Action<SqlServerDbContextOptionsBuilder> contextLifetime ServiceLifetime Returns IServiceCollection Type Parameters TContext AddDatabaseByConnectionName<TContext>(IServiceCollection, string, string, Action<SqlServerDbContextOptionsBuilder>?, ServiceLifetime) public static IServiceCollection AddDatabaseByConnectionName<TContext>(this IServiceCollection services, string connectionName, string settingsFileName = \"appsettings.json\", Action<SqlServerDbContextOptionsBuilder>? sqlServerOptionsAction = null, ServiceLifetime contextLifetime = ServiceLifetime.Scoped) where TContext : DbContext Parameters services IServiceCollection connectionName string settingsFileName string sqlServerOptionsAction Action<SqlServerDbContextOptionsBuilder> contextLifetime ServiceLifetime Returns IServiceCollection Type Parameters TContext AddDatabase<TContext>(IServiceCollection, string?, Action<SqlServerDbContextOptionsBuilder>?, ServiceLifetime) public static IServiceCollection AddDatabase<TContext>(this IServiceCollection services, string? connectionString, Action<SqlServerDbContextOptionsBuilder>? sqlServerOptionsAction = null, ServiceLifetime contextLifetime = ServiceLifetime.Scoped) where TContext : DbContext Parameters services IServiceCollection connectionString string sqlServerOptionsAction Action<SqlServerDbContextOptionsBuilder> contextLifetime ServiceLifetime Returns IServiceCollection Type Parameters TContext"
  },
  "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.SqlServer.Extensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.EntityFrameworkCore.SqlServer.Extensions.html",
    "title": "Namespace NuvTools.Data.EntityFrameworkCore.SqlServer.Extensions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.EntityFrameworkCore.SqlServer.Extensions Classes ServiceCollectionExtensions"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.PagingBase-2.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.PagingBase-2.html",
    "title": "Class PagingBase<T, R> | Nuv Tools Framework Docs",
    "summary": "Class PagingBase<T, R> Namespace NuvTools.Data.Paging Assembly NuvTools.Data.dll public abstract class PagingBase<T, R> where T : IEnumerable<R> Type Parameters T R Inheritance object PagingBase<T, R> Derived PagingWithEnumerableList<T> PagingWithQueryableList<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PagingBase() protected PagingBase() Properties List public required T List { get; set; } Property Value T PageNumber public required int PageNumber { get; set; } Property Value int Total public required int Total { get; set; } Property Value int"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.PagingExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.PagingExtensions.html",
    "title": "Class PagingExtensions | Nuv Tools Framework Docs",
    "summary": "Class PagingExtensions Namespace NuvTools.Data.Paging Assembly NuvTools.Data.dll public static class PagingExtensions Inheritance object PagingExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods PagingWrap<T>(IEnumerable<T>, int, int) public static PagingWithEnumerableList<T> PagingWrap<T>(this IEnumerable<T> list, int pageNumber = 1, int pageSize = 50) Parameters list IEnumerable<T> pageNumber int pageSize int Returns PagingWithEnumerableList<T> Type Parameters T Paging<T>(IEnumerable<T>, int, int) public static IEnumerable<T> Paging<T>(this IEnumerable<T> list, int pageNumber = 1, int pageSize = 50) Parameters list IEnumerable<T> pageNumber int pageSize int Returns IEnumerable<T> Type Parameters T Paging<T>(IQueryable<T>, int, int) public static IQueryable<T> Paging<T>(this IQueryable<T> list, int pageNumber = 1, int pageSize = 50) Parameters list IQueryable<T> pageNumber int pageSize int Returns IQueryable<T> Type Parameters T ToPagingEnumerable<T>(PagingWithQueryableList<T>) public static PagingWithEnumerableList<T> ToPagingEnumerable<T>(this PagingWithQueryableList<T> paging) Parameters paging PagingWithQueryableList<T> Returns PagingWithEnumerableList<T> Type Parameters T"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.PagingFilter-1.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.PagingFilter-1.html",
    "title": "Class PagingFilter<T> | Nuv Tools Framework Docs",
    "summary": "Class PagingFilter<T> Namespace NuvTools.Data.Paging Assembly NuvTools.Data.dll Filter for paging purpose. public class PagingFilter<T> : PagingFilter where T : Enum Type Parameters T Enum type with column option to sort. Inheritance object PagingFilter PagingFilter<T> Inherited Members PagingFilter.PageNumber PagingFilter.PageSize object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PagingFilter() public PagingFilter() Properties SortColumn public required T SortColumn { get; set; } Property Value T SortDirection public SortDirection SortDirection { get; set; } Property Value SortDirection"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.PagingFilter.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.PagingFilter.html",
    "title": "Class PagingFilter | Nuv Tools Framework Docs",
    "summary": "Class PagingFilter Namespace NuvTools.Data.Paging Assembly NuvTools.Data.dll Filter for paging purpose. public class PagingFilter Inheritance object PagingFilter Derived PagingFilter<T> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PagingFilter() public PagingFilter() Properties PageNumber public int PageNumber { get; set; } Property Value int PageSize public int PageSize { get; set; } Property Value int"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.PagingHelper.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.PagingHelper.html",
    "title": "Class PagingHelper | Nuv Tools Framework Docs",
    "summary": "Class PagingHelper Namespace NuvTools.Data.Paging Assembly NuvTools.Data.dll public static class PagingHelper Inheritance object PagingHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetPageNumber(int, int, int) public static int GetPageNumber(int index, int pageSize, int total) Parameters index int pageSize int total int Returns int"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.PagingWithEnumerableList-1.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.PagingWithEnumerableList-1.html",
    "title": "Class PagingWithEnumerableList<T> | Nuv Tools Framework Docs",
    "summary": "Class PagingWithEnumerableList<T> Namespace NuvTools.Data.Paging Assembly NuvTools.Data.dll public class PagingWithEnumerableList<T> : PagingBase<IEnumerable<T>, T> Type Parameters T Inheritance object PagingBase<IEnumerable<T>, T> PagingWithEnumerableList<T> Inherited Members PagingBase<IEnumerable<T>, T>.PageNumber PagingBase<IEnumerable<T>, T>.Total PagingBase<IEnumerable<T>, T>.List object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors PagingWithEnumerableList() public PagingWithEnumerableList()"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.PagingWithQueryableList-1.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.PagingWithQueryableList-1.html",
    "title": "Class PagingWithQueryableList<T> | Nuv Tools Framework Docs",
    "summary": "Class PagingWithQueryableList<T> Namespace NuvTools.Data.Paging Assembly NuvTools.Data.dll public class PagingWithQueryableList<T> : PagingBase<IQueryable<T>, T> Type Parameters T Inheritance object PagingBase<IQueryable<T>, T> PagingWithQueryableList<T> Inherited Members PagingBase<IQueryable<T>, T>.PageNumber PagingBase<IQueryable<T>, T>.Total PagingBase<IQueryable<T>, T>.List object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods PagingExtensions.ToPagingEnumerable<T>(PagingWithQueryableList<T>) Constructors PagingWithQueryableList() public PagingWithQueryableList()"
  },
  "api/NuvTools.Data/NuvTools.Data.Paging.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Paging.html",
    "title": "Namespace NuvTools.Data.Paging | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.Paging Classes PagingBase<T, R> PagingExtensions PagingFilter Filter for paging purpose. PagingFilter<T> Filter for paging purpose. PagingHelper PagingWithEnumerableList<T> PagingWithQueryableList<T>"
  },
  "api/NuvTools.Data/NuvTools.Data.Sorting.Enumerations.SortDirection.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Sorting.Enumerations.SortDirection.html",
    "title": "Enum SortDirection | Nuv Tools Framework Docs",
    "summary": "Enum SortDirection Namespace NuvTools.Data.Sorting.Enumerations Assembly NuvTools.Data.dll public enum SortDirection Fields ASC = 0 DESC = 1"
  },
  "api/NuvTools.Data/NuvTools.Data.Sorting.Enumerations.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Sorting.Enumerations.html",
    "title": "Namespace NuvTools.Data.Sorting.Enumerations | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.Sorting.Enumerations Enums SortDirection"
  },
  "api/NuvTools.Data/NuvTools.Data.Sorting.SortingExtensions.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Sorting.SortingExtensions.html",
    "title": "Class SortingExtensions | Nuv Tools Framework Docs",
    "summary": "Class SortingExtensions Namespace NuvTools.Data.Sorting Assembly NuvTools.Data.dll public static class SortingExtensions Inheritance object SortingExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Sort<T, TKey>(IEnumerable<T>, Func<T, TKey>, SortDirection) public static IOrderedEnumerable<T> Sort<T, TKey>(this IEnumerable<T> list, Func<T, TKey> property, SortDirection direction = SortDirection.ASC) Parameters list IEnumerable<T> property Func<T, TKey> direction SortDirection Returns IOrderedEnumerable<T> Type Parameters T TKey Sort<T, TKey>(IQueryable<T>, Expression<Func<T, TKey>>, SortDirection) public static IOrderedQueryable<T> Sort<T, TKey>(this IQueryable<T> list, Expression<Func<T, TKey>> property, SortDirection direction = SortDirection.ASC) Parameters list IQueryable<T> property Expression<Func<T, TKey>> direction SortDirection Returns IOrderedQueryable<T> Type Parameters T TKey ThenSort<T, TKey>(IOrderedEnumerable<T>, Func<T, TKey>, SortDirection) public static IOrderedEnumerable<T> ThenSort<T, TKey>(this IOrderedEnumerable<T> list, Func<T, TKey> property, SortDirection direction = SortDirection.ASC) Parameters list IOrderedEnumerable<T> property Func<T, TKey> direction SortDirection Returns IOrderedEnumerable<T> Type Parameters T TKey ThenSort<T, TKey>(IOrderedQueryable<T>, Expression<Func<T, TKey>>, SortDirection) public static IOrderedQueryable<T> ThenSort<T, TKey>(this IOrderedQueryable<T> list, Expression<Func<T, TKey>> property, SortDirection direction = SortDirection.ASC) Parameters list IOrderedQueryable<T> property Expression<Func<T, TKey>> direction SortDirection Returns IOrderedQueryable<T> Type Parameters T TKey"
  },
  "api/NuvTools.Data/NuvTools.Data.Sorting.html": {
    "href": "api/NuvTools.Data/NuvTools.Data.Sorting.html",
    "title": "Namespace NuvTools.Data.Sorting | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Data.Sorting Classes SortingExtensions"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.Configuration.MailConfigurationSection.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.Configuration.MailConfigurationSection.html",
    "title": "Class MailConfigurationSection | Nuv Tools Framework Docs",
    "summary": "Class MailConfigurationSection Namespace NuvTools.Notification.Mail.Configuration Assembly NuvTools.Notification.Mail.dll Contains the mail configuration that should be loaded from appsettings file. The default section name is \"NuvTools.Notification.Mail\" public class MailConfigurationSection Inheritance object MailConfigurationSection Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MailConfigurationSection() public MailConfigurationSection() Properties DisplayName public string? DisplayName { get; set; } Property Value string From public string? From { get; set; } Property Value string Host public required string Host { get; set; } Property Value string Password public required string Password { get; set; } Property Value string Port public int Port { get; set; } Property Value int UserName public required string UserName { get; set; } Property Value string"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.Configuration.ServiceCollectionExtensions.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.Configuration.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Nuv Tools Framework Docs",
    "summary": "Class ServiceCollectionExtensions Namespace NuvTools.Notification.Mail.Configuration Assembly NuvTools.Notification.Mail.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddMailConfiguration(IServiceCollection, IConfiguration, string) Configures mail section (MailConfigurationSection) to use with TOptions injection. public static IServiceCollection AddMailConfiguration(this IServiceCollection services, IConfiguration configuration, string sectionName = \"NuvTools.Notification.Mail\") Parameters services IServiceCollection configuration IConfiguration sectionName string Just in case to use another section instead the default one. Returns IServiceCollection"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.Configuration.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.Configuration.html",
    "title": "Namespace NuvTools.Notification.Mail.Configuration | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Notification.Mail.Configuration Classes MailConfigurationSection Contains the mail configuration that should be loaded from appsettings file. The default section name is \"NuvTools.Notification.Mail\" ServiceCollectionExtensions"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.IMailService.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.IMailService.html",
    "title": "Interface IMailService | Nuv Tools Framework Docs",
    "summary": "Interface IMailService Namespace NuvTools.Notification.Mail Assembly NuvTools.Notification.Mail.dll public interface IMailService Methods SendAsync(MailMessage) Send mail based on selected infraestructure. Task SendAsync(MailMessage mailMessage) Parameters mailMessage MailMessage Message abstraction containg the content and its recipients. Returns Task"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.MailAddress.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.MailAddress.html",
    "title": "Class MailAddress | Nuv Tools Framework Docs",
    "summary": "Class MailAddress Namespace NuvTools.Notification.Mail Assembly NuvTools.Notification.Mail.dll public class MailAddress Inheritance object MailAddress Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MailAddress() public MailAddress() Properties Address public required string Address { get; set; } Property Value string DisplayName public string? DisplayName { get; set; } Property Value string"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.MailMessage.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.MailMessage.html",
    "title": "Class MailMessage | Nuv Tools Framework Docs",
    "summary": "Class MailMessage Namespace NuvTools.Notification.Mail Assembly NuvTools.Notification.Mail.dll public class MailMessage Inheritance object MailMessage Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MailMessage() public MailMessage() Properties Body public required string Body { get; set; } Property Value string From public required MailAddress From { get; set; } Property Value MailAddress Parts public List<MailPart>? Parts { get; set; } Property Value List<MailPart> Subject public required string Subject { get; set; } Property Value string To public required List<MailAddress> To { get; set; } Property Value List<MailAddress>"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.MailPart.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.MailPart.html",
    "title": "Class MailPart | Nuv Tools Framework Docs",
    "summary": "Class MailPart Namespace NuvTools.Notification.Mail Assembly NuvTools.Notification.Mail.dll public class MailPart Inheritance object MailPart Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors MailPart() public MailPart() Properties Content public required Stream Content { get; set; } Property Value Stream MediaExtension public required string MediaExtension { get; set; } Property Value string MediaType public required string MediaType { get; set; } Property Value string"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.Smtp.SMTPMailService.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.Smtp.SMTPMailService.html",
    "title": "Class SMTPMailService | Nuv Tools Framework Docs",
    "summary": "Class SMTPMailService Namespace NuvTools.Notification.Mail.Smtp Assembly NuvTools.Notification.Mail.Smtp.dll public class SMTPMailService : IMailService Inheritance object SMTPMailService Implements IMailService Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SMTPMailService(IOptions<MailConfigurationSection>) public SMTPMailService(IOptions<MailConfigurationSection> appMailConfiguration) Parameters appMailConfiguration IOptions<MailConfigurationSection> Methods SendAsync(MailMessage) Send mail based on selected infraestructure. public Task SendAsync(MailMessage request) Parameters request MailMessage Returns Task"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.Smtp.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.Smtp.html",
    "title": "Namespace NuvTools.Notification.Mail.Smtp | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Notification.Mail.Smtp Classes SMTPMailService"
  },
  "api/NuvTools.Notification/NuvTools.Notification.Mail.html": {
    "href": "api/NuvTools.Notification/NuvTools.Notification.Mail.html",
    "title": "Namespace NuvTools.Notification.Mail | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Notification.Mail Classes MailAddress MailMessage MailPart Interfaces IMailService"
  },
  "api/NuvTools.Report/NuvTools.Report.Pdf.Table.PdfExtension.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Pdf.Table.PdfExtension.html",
    "title": "Class PdfExtension | Nuv Tools Framework Docs",
    "summary": "Class PdfExtension Namespace NuvTools.Report.Pdf.Table Assembly NuvTools.Report.Pdf.dll public static class PdfExtension Inheritance object PdfExtension Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ExportFirstSheetToPdf(Document) public static string ExportFirstSheetToPdf(this Document document) Parameters document Document Returns string ExportSheetToPdf(Document) public static List<string> ExportSheetToPdf(this Document document) Parameters document Document Returns List<string> GeneratePdfAsString64(IDocument) public static string GeneratePdfAsString64(this IDocument document) Parameters document IDocument Returns string"
  },
  "api/NuvTools.Report/NuvTools.Report.Pdf.Table.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Pdf.Table.html",
    "title": "Namespace NuvTools.Report.Pdf.Table | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Report.Pdf.Table Classes PdfExtension"
  },
  "api/NuvTools.Report/NuvTools.Report.Pdf.Util.Pdf.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Pdf.Util.Pdf.html",
    "title": "Class Pdf | Nuv Tools Framework Docs",
    "summary": "Class Pdf Namespace NuvTools.Report.Pdf.Util Assembly NuvTools.Report.Pdf.dll public static class Pdf Inheritance object Pdf Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Merge(IEnumerable<byte[]>) public static byte[] Merge(IEnumerable<byte[]> pdfs) Parameters pdfs IEnumerable<byte[]> Returns byte[]"
  },
  "api/NuvTools.Report/NuvTools.Report.Pdf.Util.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Pdf.Util.html",
    "title": "Namespace NuvTools.Report.Pdf.Util | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Report.Pdf.Util Classes Pdf"
  },
  "api/NuvTools.Report/NuvTools.Report.Sheet.Extensions.CsvExtensions.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Sheet.Extensions.CsvExtensions.html",
    "title": "Class CsvExtensions | Nuv Tools Framework Docs",
    "summary": "Class CsvExtensions Namespace NuvTools.Report.Sheet.Extensions Assembly NuvTools.Report.Sheet.dll public static class CsvExtensions Inheritance object CsvExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ExportFirstSheetToCsv(Document) public static string ExportFirstSheetToCsv(this Document document) Parameters document Document Returns string ExportToCsv(Document) public static List<string> ExportToCsv(this Document document) Parameters document Document Returns List<string>"
  },
  "api/NuvTools.Report/NuvTools.Report.Sheet.Extensions.ExcelExtension.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Sheet.Extensions.ExcelExtension.html",
    "title": "Class ExcelExtension | Nuv Tools Framework Docs",
    "summary": "Class ExcelExtension Namespace NuvTools.Report.Sheet.Extensions Assembly NuvTools.Report.Sheet.dll public static class ExcelExtension Inheritance object ExcelExtension Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddWorksheet(XLWorkbook, Table, bool) public static void AddWorksheet(this XLWorkbook xlWbook, Table worksheet, bool includeHeader) Parameters xlWbook XLWorkbook worksheet Table includeHeader bool ExportToExcel(Document) Export document to Excel format. public static string ExportToExcel(this Document document) Parameters document Document Document data. Returns string Excel (.xlsx) file in base 64 string."
  },
  "api/NuvTools.Report/NuvTools.Report.Sheet.Extensions.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Sheet.Extensions.html",
    "title": "Namespace NuvTools.Report.Sheet.Extensions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Report.Sheet.Extensions Classes CsvExtensions ExcelExtension"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Body.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Body.html",
    "title": "Class Body | Nuv Tools Framework Docs",
    "summary": "Class Body Namespace NuvTools.Report.Table.Models.Components Assembly NuvTools.Report.dll public class Body Inheritance object Body Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Body() public Body() Properties Header public Header Header { get; set; } Property Value Header Rows public List<Row> Rows { get; set; } Property Value List<Row>"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Cell.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Cell.html",
    "title": "Class Cell | Nuv Tools Framework Docs",
    "summary": "Class Cell Namespace NuvTools.Report.Table.Models.Components Assembly NuvTools.Report.dll public class Cell Inheritance object Cell Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Cell() public Cell() Properties Column public Column Column { get; set; } Property Value Column Value public string Value { get; set; } Property Value string"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Column.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Column.html",
    "title": "Class Column | Nuv Tools Framework Docs",
    "summary": "Class Column Namespace NuvTools.Report.Table.Models.Components Assembly NuvTools.Report.dll public class Column Inheritance object Column Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Column() public Column() Properties Format public string Format { get; set; } Property Value string Label public string Label { get; set; } Property Value string Name public string Name { get; set; } Property Value string Order public short Order { get; set; } Property Value short"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Header.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Header.html",
    "title": "Class Header | Nuv Tools Framework Docs",
    "summary": "Class Header Namespace NuvTools.Report.Table.Models.Components Assembly NuvTools.Report.dll public class Header Inheritance object Header Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Header() public Header() Properties Columns public List<Column> Columns { get; set; } Property Value List<Column>"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Row.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.Row.html",
    "title": "Class Row | Nuv Tools Framework Docs",
    "summary": "Class Row Namespace NuvTools.Report.Table.Models.Components Assembly NuvTools.Report.dll public class Row Inheritance object Row Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Row() public Row() Properties Cells public List<Cell> Cells { get; set; } Property Value List<Cell> Order public short Order { get; set; } Property Value short"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Components.html",
    "title": "Namespace NuvTools.Report.Table.Models.Components | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Report.Table.Models.Components Classes Body Cell Column Header Row"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Document.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Document.html",
    "title": "Class Document | Nuv Tools Framework Docs",
    "summary": "Class Document Namespace NuvTools.Report.Table.Models Assembly NuvTools.Report.dll public class Document Inheritance object Document Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Document() public Document() Properties BackgroundDocumentHeaderColor public string BackgroundDocumentHeaderColor { get; set; } Property Value string Tables public List<Table> Tables { get; set; } Property Value List<Table>"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Info.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Info.html",
    "title": "Class Info | Nuv Tools Framework Docs",
    "summary": "Class Info Namespace NuvTools.Report.Table.Models Assembly NuvTools.Report.dll public class Info Inheritance object Info Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Info() public Info() Properties CompanyAbbreviation public string CompanyAbbreviation { get; set; } Property Value string CompanyUrl public string CompanyUrl { get; set; } Property Value string FilterDescription public string FilterDescription { get; set; } Property Value string IssueDate public DateTime IssueDate { get; set; } Property Value DateTime IssueUser public string IssueUser { get; set; } Property Value string LogoImage public string LogoImage { get; set; } Property Value string Name public string Name { get; set; } Property Value string Order public short Order { get; set; } Property Value short Title public string Title { get; set; } Property Value string"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Style.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Style.html",
    "title": "Class Style | Nuv Tools Framework Docs",
    "summary": "Class Style Namespace NuvTools.Report.Table.Models Assembly NuvTools.Report.dll public class Style Inheritance object Style Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Style() public Style() Properties BackgroundHeaderColor public string BackgroundHeaderColor { get; set; } Property Value string BackgroundLineGray public bool? BackgroundLineGray { get; set; } Property Value bool? Bold public bool? Bold { get; set; } Property Value bool? FontHeaderColor public string FontHeaderColor { get; set; } Property Value string FontSize public double? FontSize { get; set; } Property Value double?"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.Table.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.Table.html",
    "title": "Class Table | Nuv Tools Framework Docs",
    "summary": "Class Table Namespace NuvTools.Report.Table.Models Assembly NuvTools.Report.dll public class Table Inheritance object Table Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Table() public Table() Properties Content public required Body Content { get; set; } Property Value Body Info public required Info Info { get; set; } Property Value Info Style public Style? Style { get; set; } Property Value Style Methods SetRows<T>(List<Column>, List<T>) public void SetRows<T>(List<Column> columns, List<T> objList) Parameters columns List<Column> objList List<T> Type Parameters T"
  },
  "api/NuvTools.Report/NuvTools.Report.Table.Models.html": {
    "href": "api/NuvTools.Report/NuvTools.Report.Table.Models.html",
    "title": "Namespace NuvTools.Report.Table.Models | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Report.Table.Models Classes Document Info Style Table"
  },
  "api/NuvTools.Resources/NuvTools.Resources.DynamicFields.html": {
    "href": "api/NuvTools.Resources/NuvTools.Resources.DynamicFields.html",
    "title": "Class DynamicFields | Nuv Tools Framework Docs",
    "summary": "Class DynamicFields Namespace NuvTools.Resources Assembly NuvTools.Resources.dll A strongly-typed resource class, for looking up localized strings, etc. public class DynamicFields Inheritance object DynamicFields Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager RowsPerPageInfoFormat Looks up a localized string similar to {first_item}-{last_item} of {all_items}. public static string RowsPerPageInfoFormat { get; } Property Value string"
  },
  "api/NuvTools.Resources/NuvTools.Resources.DynamicFluentValidationMessages.html": {
    "href": "api/NuvTools.Resources/NuvTools.Resources.DynamicFluentValidationMessages.html",
    "title": "Class DynamicFluentValidationMessages | Nuv Tools Framework Docs",
    "summary": "Class DynamicFluentValidationMessages Namespace NuvTools.Resources Assembly NuvTools.Resources.dll A strongly-typed resource class, for looking up localized strings, etc. public class DynamicFluentValidationMessages Inheritance object DynamicFluentValidationMessages Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager XInvalid Looks up a localized string similar to {PropertyName} is invalid.. public static string XInvalid { get; } Property Value string XMustBeEqualY Looks up a localized string similar to The {PropertyName} must be equal {ComparisonProperty}.. public static string XMustBeEqualY { get; } Property Value string XMustContainAtLeastYCharacters Looks up a localized string similar to The {PropertyName} must contain at least {MinLength} character(s).. public static string XMustContainAtLeastYCharacters { get; } Property Value string XMustContainBetweenYandZCharacters Looks up a localized string similar to The {PropertyName} must contain between {From} and {To} characters.. public static string XMustContainBetweenYandZCharacters { get; } Property Value string XMustContainYCharacters Looks up a localized string similar to The {PropertyName} must contain {MinLength} character(s).. public static string XMustContainYCharacters { get; } Property Value string XMustHaveUpToYCharacters Looks up a localized string similar to The {PropertyName} must be up to {MaxLength} character(s).. public static string XMustHaveUpToYCharacters { get; } Property Value string XRequired Looks up a localized string similar to {PropertyName} is required.. public static string XRequired { get; } Property Value string"
  },
  "api/NuvTools.Resources/NuvTools.Resources.DynamicMessages.html": {
    "href": "api/NuvTools.Resources/NuvTools.Resources.DynamicMessages.html",
    "title": "Class DynamicMessages | Nuv Tools Framework Docs",
    "summary": "Class DynamicMessages Namespace NuvTools.Resources Assembly NuvTools.Resources.dll A strongly-typed resource class, for looking up localized strings, etc. public class DynamicMessages Inheritance object DynamicMessages Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo EmailConfirmationContentWithLinkX Looks up a localized string similar to Please confirm your account by <a href='{0}'>clicking here</a>.. public static string EmailConfirmationContentWithLinkX { get; } Property Value string PasswordResetEmailContentWithLinkX Looks up a localized string similar to Please reset your password by <a href='{0}'>clicking here</a>.. public static string PasswordResetEmailContentWithLinkX { get; } Property Value string ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager ThereIsNoXRegisteredSoFar Looks up a localized string similar to There is no {0} registered so far.. public static string ThereIsNoXRegisteredSoFar { get; } Property Value string WelcomeX Looks up a localized string similar to Welcome {0}.. public static string WelcomeX { get; } Property Value string XAlreadyExists Looks up a localized string similar to {0} already exists.. public static string XAlreadyExists { get; } Property Value string XMustBeEqualY Looks up a localized string similar to The {0} must be equal {1}.. public static string XMustBeEqualY { get; } Property Value string XMustBeGreaterThanY Looks up a localized string similar to {0} must be greater than {1}.. public static string XMustBeGreaterThanY { get; } Property Value string XMustBeLessThanY Looks up a localized string similar to {0} must be less than {1}.. public static string XMustBeLessThanY { get; } Property Value string XNotFound Looks up a localized string similar to {0} not found.. public static string XNotFound { get; } Property Value string"
  },
  "api/NuvTools.Resources/NuvTools.Resources.DynamicValidationMessages.html": {
    "href": "api/NuvTools.Resources/NuvTools.Resources.DynamicValidationMessages.html",
    "title": "Class DynamicValidationMessages | Nuv Tools Framework Docs",
    "summary": "Class DynamicValidationMessages Namespace NuvTools.Resources Assembly NuvTools.Resources.dll A strongly-typed resource class, for looking up localized strings, etc. public class DynamicValidationMessages Inheritance object DynamicValidationMessages Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties AtLeastOneTheseParametersShoudBeFilledX Looks up a localized string similar to At least one of these parameters should be filled: {0}.. public static string AtLeastOneTheseParametersShoudBeFilledX { get; } Property Value string Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo DateXMustBeAfterDateY Looks up a localized string similar to Date {0} must be after date {1}.. public static string DateXMustBeAfterDateY { get; } Property Value string EmailXAlreadyTaken Looks up a localized string similar to E-mail {0} is already taken.. public static string EmailXAlreadyTaken { get; } Property Value string ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager XInvalid Looks up a localized string similar to {0} is invalid.. public static string XInvalid { get; } Property Value string XMustBeEqualY Looks up a localized string similar to The {0} must be equal {1}.. public static string XMustBeEqualY { get; } Property Value string XMustContainAtLeastYCapitalLetters Looks up a localized string similar to The {0} must contain at least {1} capital letter(s).. public static string XMustContainAtLeastYCapitalLetters { get; } Property Value string XMustContainAtLeastYDigits Looks up a localized string similar to The {0} must contain at least {1} digit(s).. public static string XMustContainAtLeastYDigits { get; } Property Value string XMustContainAtLeastYLowerCaseLetters Looks up a localized string similar to The {0} must contain at least {1} lower case letter(s).. public static string XMustContainAtLeastYLowerCaseLetters { get; } Property Value string XMustContainBetweenYandZCharacters Looks up a localized string similar to The {0} must contain between {1} and {2} character(s).. public static string XMustContainBetweenYandZCharacters { get; } Property Value string XMustHaveAtLeastYCharacters Looks up a localized string similar to The {0} must have at least {1} character(s).. public static string XMustHaveAtLeastYCharacters { get; } Property Value string XMustHaveUpToYCharacters Looks up a localized string similar to The {0} must have up to {1} character(s).. public static string XMustHaveUpToYCharacters { get; } Property Value string XRequired Looks up a localized string similar to {0} is required.. public static string XRequired { get; } Property Value string"
  },
  "api/NuvTools.Resources/NuvTools.Resources.Fields.html": {
    "href": "api/NuvTools.Resources/NuvTools.Resources.Fields.html",
    "title": "Class Fields | Nuv Tools Framework Docs",
    "summary": "Class Fields Namespace NuvTools.Resources Assembly NuvTools.Resources.dll A strongly-typed resource class, for looking up localized strings, etc. public class Fields Inheritance object Fields Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties Account Looks up a localized string similar to Account. public static string Account { get; } Property Value string AccountDetails Looks up a localized string similar to Account Details. public static string AccountDetails { get; } Property Value string Actions Looks up a localized string similar to Actions. public static string Actions { get; } Property Value string ActivateUserQuestion Looks up a localized string similar to Activate user?. public static string ActivateUserQuestion { get; } Property Value string Active Looks up a localized string similar to Active. public static string Active { get; } Property Value string Add Looks up a localized string similar to Add. public static string Add { get; } Property Value string Address Looks up a localized string similar to Address. public static string Address { get; } Property Value string AlreadyHaveAnAccountQuestion Looks up a localized string similar to Already have an account?. public static string AlreadyHaveAnAccountQuestion { get; } Property Value string AutoConfirmEmailQuestion Looks up a localized string similar to Auto confirm e-mail?. public static string AutoConfirmEmailQuestion { get; } Property Value string Back Looks up a localized string similar to Back. public static string Back { get; } Property Value string BirthDate Looks up a localized string similar to Birth Date. public static string BirthDate { get; } Property Value string BirthdayDate Looks up a localized string similar to Birthday Date. public static string BirthdayDate { get; } Property Value string Brand Looks up a localized string similar to Brand. public static string Brand { get; } Property Value string CNPJ Looks up a localized string similar to CNPJ. public static string CNPJ { get; } Property Value string CPF Looks up a localized string similar to CPF. public static string CPF { get; } Property Value string CRM Looks up a localized string similar to CRM. public static string CRM { get; } Property Value string Cancel Looks up a localized string similar to Cancel. public static string Cancel { get; } Property Value string CancelInclusion Looks up a localized string similar to Cancel inclusion. public static string CancelInclusion { get; } Property Value string ChangePassword Looks up a localized string similar to Change Password. public static string ChangePassword { get; } Property Value string City Looks up a localized string similar to City. public static string City { get; } Property Value string Client Looks up a localized string similar to Client. public static string Client { get; } Property Value string Clients Looks up a localized string similar to Clients. public static string Clients { get; } Property Value string Close Looks up a localized string similar to Close. public static string Close { get; } Property Value string Code Looks up a localized string similar to Code. public static string Code { get; } Property Value string Company Looks up a localized string similar to Company. public static string Company { get; } Property Value string CompanyName Looks up a localized string similar to Company Name. public static string CompanyName { get; } Property Value string Complement Looks up a localized string similar to Complement. public static string Complement { get; } Property Value string Confirm Looks up a localized string similar to Confirm. public static string Confirm { get; } Property Value string ConfirmInclusion Looks up a localized string similar to Confirm inclusion. public static string ConfirmInclusion { get; } Property Value string ConfirmNewPassword Looks up a localized string similar to Confirm New Password. public static string ConfirmNewPassword { get; } Property Value string Content Looks up a localized string similar to Conteúdo. public static string Content { get; } Property Value string Contract Looks up a localized string similar to Contract. public static string Contract { get; } Property Value string ContractNumber Looks up a localized string similar to Contract number. public static string ContractNumber { get; } Property Value string Contracts Looks up a localized string similar to Contracts. public static string Contracts { get; } Property Value string Country Looks up a localized string similar to Country. public static string Country { get; } Property Value string Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo DarkMode Looks up a localized string similar to Dark Mode. public static string DarkMode { get; } Property Value string Dashboard Looks up a localized string similar to Dashboard. public static string Dashboard { get; } Property Value string Date Looks up a localized string similar to Date. public static string Date { get; } Property Value string DateTime Looks up a localized string similar to Date/Time. public static string DateTime { get; } Property Value string DateTimeSent Looks up a localized string similar to Data e Hora de Envio. public static string DateTimeSent { get; } Property Value string Day Looks up a localized string similar to Day. public static string Day { get; } Property Value string Delete Looks up a localized string similar to Delete. public static string Delete { get; } Property Value string Description Looks up a localized string similar to Description. public static string Description { get; } Property Value string DetailedDescription Looks up a localized string similar to Detailed Description. public static string DetailedDescription { get; } Property Value string District Looks up a localized string similar to District. public static string District { get; } Property Value string DontHaveAnAccountQuestion Looks up a localized string similar to Don't have an account?. public static string DontHaveAnAccountQuestion { get; } Property Value string Edit Looks up a localized string similar to Edit. public static string Edit { get; } Property Value string Elevation Looks up a localized string similar to Elevation. public static string Elevation { get; } Property Value string Email Looks up a localized string similar to E-mail. public static string Email { get; } Property Value string EmailConfirm Looks up a localized string similar to E-mail confirm. public static string EmailConfirm { get; } Property Value string EnableDisable Looks up a localized string similar to Enable/Disable. public static string EnableDisable { get; } Property Value string EndDate Looks up a localized string similar to End Date. public static string EndDate { get; } Property Value string Ending Looks up a localized string similar to End. public static string Ending { get; } Property Value string EnterEmailAndNewPassword Looks up a localized string similar to Enter your e-mail and new password. public static string EnterEmailAndNewPassword { get; } Property Value string EnterEmailForPasswordReset Looks up a localized string similar to Enter the email address linked to your account and you will recieve an email containing a link to reset your password. public static string EnterEmailForPasswordReset { get; } Property Value string EnterPersonName Looks up a localized string similar to Enter person's name. public static string EnterPersonName { get; } Property Value string EnterWithYourCredentials Looks up a localized string similar to Login with your Credentials.. public static string EnterWithYourCredentials { get; } Property Value string ExpireAt Looks up a localized string similar to Expire At. public static string ExpireAt { get; } Property Value string File Looks up a localized string similar to File. public static string File { get; } Property Value string FileIdentifier Looks up a localized string similar to File Identifier. public static string FileIdentifier { get; } Property Value string FillAdministratorCredentials Looks up a localized string similar to Fill Administrator Credentials. public static string FillAdministratorCredentials { get; } Property Value string FillBasicUserCredentials Looks up a localized string similar to Fill Basic User Credentials. public static string FillBasicUserCredentials { get; } Property Value string ForgotPasswordQuestion Looks up a localized string similar to Forgot password?. public static string ForgotPasswordQuestion { get; } Property Value string Gender Looks up a localized string similar to Gender. public static string Gender { get; } Property Value string Home Looks up a localized string similar to Home. public static string Home { get; } Property Value string HomePhone Looks up a localized string similar to Home Phone. public static string HomePhone { get; } Property Value string Hour Looks up a localized string similar to Hour. public static string Hour { get; } Property Value string Identification Looks up a localized string similar to Identiication. public static string Identification { get; } Property Value string Identifier Looks up a localized string similar to Identifier. public static string Identifier { get; } Property Value string Image Looks up a localized string similar to Image. public static string Image { get; } Property Value string Include Looks up a localized string similar to Include. public static string Include { get; } Property Value string Initials Looks up a localized string similar to Initials. public static string Initials { get; } Property Value string Input Looks up a localized string similar to Input. public static string Input { get; } Property Value string IssuedIn Looks up a localized string similar to Issued In. public static string IssuedIn { get; } Property Value string Language Looks up a localized string similar to Language. public static string Language { get; } Property Value string Latitude Looks up a localized string similar to Latitude. public static string Latitude { get; } Property Value string Locality Looks up a localized string similar to Localidade. public static string Locality { get; } Property Value string Localization Looks up a localized string similar to Localization. public static string Localization { get; } Property Value string Logout Looks up a localized string similar to Logout. public static string Logout { get; } Property Value string Longitude Looks up a localized string similar to Longitude. public static string Longitude { get; } Property Value string Maintenance Looks up a localized string similar to Maintenance. public static string Maintenance { get; } Property Value string Manage Looks up a localized string similar to Manage. public static string Manage { get; } Property Value string ManagePermission Looks up a localized string similar to Manage Permission. public static string ManagePermission { get; } Property Value string ManageUsers Looks up a localized string similar to Manage Users. public static string ManageUsers { get; } Property Value string Message Looks up a localized string similar to Mensagem. public static string Message { get; } Property Value string Minute Looks up a localized string similar to Minute. public static string Minute { get; } Property Value string MobilePhone Looks up a localized string similar to Mobile Phone. public static string MobilePhone { get; } Property Value string Month Looks up a localized string similar to Month. public static string Month { get; } Property Value string MothersName Looks up a localized string similar to Mother's Name. public static string MothersName { get; } Property Value string Name Looks up a localized string similar to Name. public static string Name { get; } Property Value string New Looks up a localized string similar to New. public static string New { get; } Property Value string NewObject Looks up a localized string similar to New Object. public static string NewObject { get; } Property Value string NewPassword Looks up a localized string similar to New Password. public static string NewPassword { get; } Property Value string Nickname Looks up a localized string similar to Nickname. public static string Nickname { get; } Property Value string Note Looks up a localized string similar to Note. public static string Note { get; } Property Value string Number Looks up a localized string similar to Number. public static string Number { get; } Property Value string OldObject Looks up a localized string similar to Old Object. public static string OldObject { get; } Property Value string Operational Looks up a localized string similar to Operational. public static string Operational { get; } Property Value string Ordination Looks up a localized string similar to Ordination. public static string Ordination { get; } Property Value string Organization Looks up a localized string similar to Organization. public static string Organization { get; } Property Value string Organizations Looks up a localized string similar to Organizations. public static string Organizations { get; } Property Value string Participant Looks up a localized string similar to Participant. public static string Participant { get; } Property Value string Participants Looks up a localized string similar to Participants. public static string Participants { get; } Property Value string Password Looks up a localized string similar to Password. public static string Password { get; } Property Value string PasswordConfirm Looks up a localized string similar to Password Confirm. public static string PasswordConfirm { get; } Property Value string Permission Looks up a localized string similar to Permission. public static string Permission { get; } Property Value string Permissions Looks up a localized string similar to Permissions. public static string Permissions { get; } Property Value string Phone Looks up a localized string similar to Phone. public static string Phone { get; } Property Value string Photo Looks up a localized string similar to Photo. public static string Photo { get; } Property Value string Profile Looks up a localized string similar to Profile. public static string Profile { get; } Property Value string Queue Looks up a localized string similar to Queue. public static string Queue { get; } Property Value string Radius Looks up a localized string similar to Radius. public static string Radius { get; } Property Value string Register Looks up a localized string similar to Register. public static string Register { get; } Property Value string RegisterHere Looks up a localized string similar to Register here. public static string RegisterHere { get; } Property Value string Reload Looks up a localized string similar to Reload. public static string Reload { get; } Property Value string RememberMeQuestion Looks up a localized string similar to Remember me?. public static string RememberMeQuestion { get; } Property Value string Replicate Looks up a localized string similar to Replicate. public static string Replicate { get; } Property Value string ResetPassword Looks up a localized string similar to Reset Password. public static string ResetPassword { get; } Property Value string ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager Role Looks up a localized string similar to Role. public static string Role { get; } Property Value string Roles Looks up a localized string similar to Roles. public static string Roles { get; } Property Value string RowsPerPage Looks up a localized string similar to Rows per page. public static string RowsPerPage { get; } Property Value string Save Looks up a localized string similar to Save. public static string Save { get; } Property Value string Search Looks up a localized string similar to Search. public static string Search { get; } Property Value string Security Looks up a localized string similar to Security. public static string Security { get; } Property Value string Show Looks up a localized string similar to Show. public static string Show { get; } Property Value string SignIn Looks up a localized string similar to Sign In. public static string SignIn { get; } Property Value string Start Looks up a localized string similar to Start. public static string Start { get; } Property Value string StartDate Looks up a localized string similar to Start Date. public static string StartDate { get; } Property Value string State Looks up a localized string similar to State. public static string State { get; } Property Value string States Looks up a localized string similar to States. public static string States { get; } Property Value string Status Looks up a localized string similar to Status. public static string Status { get; } Property Value string StatusDate Looks up a localized string similar to Status date. public static string StatusDate { get; } Property Value string Subject Looks up a localized string similar to Subject. public static string Subject { get; } Property Value string Surname Looks up a localized string similar to Surname. public static string Surname { get; } Property Value string Transaction Looks up a localized string similar to Transaction. public static string Transaction { get; } Property Value string Type Looks up a localized string similar to Type. public static string Type { get; } Property Value string UF Looks up a localized string similar to UF. public static string UF { get; } Property Value string Update Looks up a localized string similar to Update. public static string Update { get; } Property Value string UpdatedAt Looks up a localized string similar to Alterado em. public static string UpdatedAt { get; } Property Value string UpdatedBy Looks up a localized string similar to Alterado por. public static string UpdatedBy { get; } Property Value string Url Looks up a localized string similar to Url. public static string Url { get; } Property Value string User Looks up a localized string similar to User. public static string User { get; } Property Value string UserType Looks up a localized string similar to User type. public static string UserType { get; } Property Value string Users Looks up a localized string similar to Users. public static string Users { get; } Property Value string Value Looks up a localized string similar to Value. public static string Value { get; } Property Value string Welcome Looks up a localized string similar to Welcome. public static string Welcome { get; } Property Value string Year Looks up a localized string similar to Year. public static string Year { get; } Property Value string ZipCode Looks up a localized string similar to Zip code. public static string ZipCode { get; } Property Value string"
  },
  "api/NuvTools.Resources/NuvTools.Resources.Messages.html": {
    "href": "api/NuvTools.Resources/NuvTools.Resources.Messages.html",
    "title": "Class Messages | Nuv Tools Framework Docs",
    "summary": "Class Messages Namespace NuvTools.Resources Assembly NuvTools.Resources.dll A strongly-typed resource class, for looking up localized strings, etc. public class Messages Inheritance object Messages Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Properties CancelDeletion Looks up a localized string similar to Cancel deletion. public static string CancelDeletion { get; } Property Value string CancelInclusion Looks up a localized string similar to Cancel inclusion. public static string CancelInclusion { get; } Property Value string ConfirmDeletion Looks up a localized string similar to Confirm the deletion?. public static string ConfirmDeletion { get; } Property Value string ConfirmInclusion Looks up a localized string similar to Confirm inclusion. public static string ConfirmInclusion { get; } Property Value string ConfirmRegistration Looks up a localized string similar to Confirm registration. public static string ConfirmRegistration { get; } Property Value string Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo DeleteConfirmation Looks up a localized string similar to Delete Confirmation. public static string DeleteConfirmation { get; } Property Value string DoYouReallyLogout Looks up a localized string similar to Do you really logout?. public static string DoYouReallyLogout { get; } Property Value string EmailConfirmed Looks up a localized string similar to E-mail confirmed.. public static string EmailConfirmed { get; } Property Value string EnterYourSearch Looks up a localized string similar to Enter your search. public static string EnterYourSearch { get; } Property Value string GoHome Looks up a localized string similar to Go home. public static string GoHome { get; } Property Value string InvalidEmail Looks up a localized string similar to Invalid e-mail.. public static string InvalidEmail { get; } Property Value string InvalidValue Looks up a localized string similar to Invalid value.. public static string InvalidValue { get; } Property Value string LogoutConfirmation Looks up a localized string similar to Logout Confirmation. public static string LogoutConfirmation { get; } Property Value string NoneParameterInformed Looks up a localized string similar to None parameter informed.. public static string NoneParameterInformed { get; } Property Value string NotAllowed Looks up a localized string similar to Not Allowed.. public static string NotAllowed { get; } Property Value string OperationPerformedSuccessfully Looks up a localized string similar to Operation performed successfully.. public static string OperationPerformedSuccessfully { get; } Property Value string PasswordResetMailWasSent Looks up a localized string similar to Password Reset Mail was sent.. public static string PasswordResetMailWasSent { get; } Property Value string PasswordResetSuccessful Looks up a localized string similar to Password Reset Successful!. public static string PasswordResetSuccessful { get; } Property Value string ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager RoleAlreadyExists Looks up a localized string similar to Role already exists.. public static string RoleAlreadyExists { get; } Property Value string RolesRegistered Looks up a localized string similar to Roles registered. public static string RolesRegistered { get; } Property Value string TheOperationCouldNotBePerformed Looks up a localized string similar to The operation could not be performed.. public static string TheOperationCouldNotBePerformed { get; } Property Value string ThePageYouWereLookingForDoesntExist Looks up a localized string similar to The page you were looking for doesn't exist.. public static string ThePageYouWereLookingForDoesntExist { get; } Property Value string ToConfirmDeletion Looks up a localized string similar to Confirm deletion. public static string ToConfirmDeletion { get; } Property Value string TokenNotFound Looks up a localized string similar to Token not found.. public static string TokenNotFound { get; } Property Value string UserNotFound Looks up a localized string similar to User not found.. public static string UserNotFound { get; } Property Value string UsersRegistered Looks up a localized string similar to Users registered. public static string UsersRegistered { get; } Property Value string ValidationProblemsFound Looks up a localized string similar to Validation problems were found.. public static string ValidationProblemsFound { get; } Property Value string ValueOutsideRange Looks up a localized string similar to Value outside range. public static string ValueOutsideRange { get; } Property Value string"
  },
  "api/NuvTools.Resources/NuvTools.Resources.html": {
    "href": "api/NuvTools.Resources/NuvTools.Resources.html",
    "title": "Namespace NuvTools.Resources | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Resources Classes DynamicFields A strongly-typed resource class, for looking up localized strings, etc. DynamicFluentValidationMessages A strongly-typed resource class, for looking up localized strings, etc. DynamicMessages A strongly-typed resource class, for looking up localized strings, etc. DynamicValidationMessages A strongly-typed resource class, for looking up localized strings, etc. Fields A strongly-typed resource class, for looking up localized strings, etc. Messages A strongly-typed resource class, for looking up localized strings, etc."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.html",
    "title": "Class RoleManagerExtensions | Nuv Tools Framework Docs",
    "summary": "Class RoleManagerExtensions Namespace NuvTools.Security.Identity.AspNetCore.Extensions Assembly NuvTools.Security.Identity.AspNetCore.dll Provides extension methods for the RoleManager<TRole> class to simplify the management of claims, particularly permission-based claims, associated with roles. public static class RoleManagerExtensions Inheritance object RoleManagerExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddClaimAsync<TRole>(RoleManager<TRole>, TRole, string, string) Adds a single claim to a role if it does not already exist. public static Task AddClaimAsync<TRole>(this RoleManager<TRole> roleManager, TRole role, string type, string value) where TRole : class Parameters roleManager RoleManager<TRole> The RoleManager<TRole> instance used to manage roles. role TRole The role to which the claim should be added. type string The claim type. value string The claim value. Returns Task A task representing the asynchronous operation. Type Parameters TRole The type representing the application role. Exceptions ArgumentNullException Thrown when roleManager, role, type, or value is null or empty. AddClaimsAsync<TRole>(RoleManager<TRole>, TRole, IEnumerable<Claim>) Adds multiple claims to a role. public static Task AddClaimsAsync<TRole>(this RoleManager<TRole> roleManager, TRole role, IEnumerable<Claim> claims) where TRole : class Parameters roleManager RoleManager<TRole> The RoleManager<TRole> instance used to manage roles. role TRole The role to which claims should be added. claims IEnumerable<Claim> A collection of claims to add. Returns Task A task representing the asynchronous operation. Type Parameters TRole The type representing the application role. Exceptions ArgumentNullException Thrown when roleManager, role, or claims is null. AddPermissionClaim<TRole>(RoleManager<TRole>, TRole, string) Adds a single permission claim to a role. public static Task AddPermissionClaim<TRole>(this RoleManager<TRole> roleManager, TRole role, string value) where TRole : class Parameters roleManager RoleManager<TRole> The RoleManager<TRole> instance used to manage roles. role TRole The role to which the permission claim should be added. value string The permission value. Returns Task A task representing the asynchronous operation. Type Parameters TRole The type representing the application role. Remarks This method uses the Permission claim type. Exceptions ArgumentNullException Thrown when roleManager, role, or value is null or empty. AddPermissionClaims<TRole>(RoleManager<TRole>, TRole, params string[]) Adds multiple permission claims to a role. public static Task AddPermissionClaims<TRole>(this RoleManager<TRole> roleManager, TRole role, params string[] values) where TRole : class Parameters roleManager RoleManager<TRole> The RoleManager<TRole> instance used to manage roles. role TRole The role to which permission claims should be added. values string[] An array of permission values to add as claims. Returns Task A task representing the asynchronous operation. Type Parameters TRole The type representing the application role. Exceptions ArgumentNullException Thrown when roleManager, role, or values is null or empty."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Extensions.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Extensions.html",
    "title": "Namespace NuvTools.Security.Identity.AspNetCore.Extensions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Identity.AspNetCore.Extensions Classes RoleManagerExtensions Provides extension methods for the RoleManager<TRole> class to simplify the management of claims, particularly permission-based claims, associated with roles."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html",
    "title": "Class UserServiceBase<TUser, TRole, TKey> | Nuv Tools Framework Docs",
    "summary": "Class UserServiceBase<TUser, TRole, TKey> Namespace NuvTools.Security.Identity.AspNetCore.Services Assembly NuvTools.Security.Identity.AspNetCore.dll Provides a base service for user management operations, built upon UserManager<TUser>. public abstract class UserServiceBase<TUser, TRole, TKey> where TUser : UserBase<TKey> where TRole : IdentityRole<TKey> where TKey : IEquatable<TKey> Type Parameters TUser The user entity type. TRole The role entity type. TKey The type of the user's primary key. Inheritance object UserServiceBase<TUser, TRole, TKey> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This abstract base class consolidates common user-related actions such as creation, updates, password management, email confirmation, and role assignments. It standardizes the return model using IResult and IResult<T>. Constructors UserServiceBase(UserManager<TUser>) Provides a base service for user management operations, built upon UserManager<TUser>. protected UserServiceBase(UserManager<TUser> userManager) Parameters userManager UserManager<TUser> Remarks This abstract base class consolidates common user-related actions such as creation, updates, password management, email confirmation, and role assignments. It standardizes the return model using IResult and IResult<T>. Methods ChangeEmailAsync(TKey, string, string) Applies an email change using a confirmation token. public Task<IResult> ChangeEmailAsync(TKey id, string email, string token) Parameters id TKey email string token string Returns Task<IResult> ChangePasswordAsync(TKey, string, string) Changes the user's password. public Task<IResult> ChangePasswordAsync(TKey id, string password, string newPassword) Parameters id TKey password string newPassword string Returns Task<IResult> ConfirmEmailAsync(TKey, string) Confirms a user's email address. public Task<IResult> ConfirmEmailAsync(TKey id, string token) Parameters id TKey token string Returns Task<IResult> CreateAsync(TUser) Creates a new user in the system. public Task<IResult<TKey>> CreateAsync(TUser value) Parameters value TUser Returns Task<IResult<TKey>> CreateWithRolesAsync(TUser, params string[]) Creates a new user and assigns one or more roles. public Task<IResult<TKey>> CreateWithRolesAsync(TUser value, params string[] roles) Parameters value TUser roles string[] Returns Task<IResult<TKey>> DeleteAsync(TKey) Deletes a user by identifier. public Task<IResult> DeleteAsync(TKey id) Parameters id TKey Returns Task<IResult> GenerateEmailConfirmationTokenAsync(TUser) Generates a base64-encoded token used for email confirmation. public Task<string> GenerateEmailConfirmationTokenAsync(TUser user) Parameters user TUser Returns Task<string> GenerateEmailConfirmationUriAsync(TUser, string, string) Generates a verification URL for confirming the user's email. public Task<string> GenerateEmailConfirmationUriAsync(TUser user, string origin, string route = \"login\") Parameters user TUser origin string route string Returns Task<string> GetAllAsync() Gets all users as an IQueryable<T> queryable collection. public IQueryable<TUser> GetAllAsync() Returns IQueryable<TUser> GetAsync(TKey) Retrieves a user by their unique identifier. public Task<TUser?> GetAsync(TKey id) Parameters id TKey Returns Task<TUser> GetByEmailAsync(string) Retrieves a user by their email address. public Task<TUser?> GetByEmailAsync(string email) Parameters email string Returns Task<TUser> GetRolesAsync(TKey) Retrieves all role names assigned to a user. public Task<IList<string>?> GetRolesAsync(TKey id) Parameters id TKey Returns Task<IList<string>> RequestChangeEmailUrlAsync(string, string, string, string) Generates a URL for confirming an email change request. public Task<IResult<string>> RequestChangeEmailUrlAsync(string email, string newEmail, string origin, string route = \"security/change-email\") Parameters email string newEmail string origin string route string Returns Task<IResult<string>> RequestResetPasswordUrlAsync(string, string, string) Generates a password reset URL for a user with a confirmed email. public Task<IResult<string>> RequestResetPasswordUrlAsync(string email, string origin, string route = \"security/reset-password\") Parameters email string origin string route string Returns Task<IResult<string>> ResetPasswordAsync(string, string, string) Resets the user's password using a reset token. public Task<IResult> ResetPasswordAsync(string email, string newPassword, string token) Parameters email string newPassword string token string Returns Task<IResult> ToggleUserStatusAsync(TKey) Toggles the user's active status. public virtual Task<IResult> ToggleUserStatusAsync(TKey id) Parameters id TKey Returns Task<IResult> UpdateAsync(TUser) Updates basic user information (name, surname, etc.). public Task<IResult> UpdateAsync(TUser value) Parameters value TUser Returns Task<IResult> UpdateRolesAsync(TKey, IList<string>) Replaces all roles of a user with a new set of roles. public Task<IResult> UpdateRolesAsync(TKey id, IList<string> roles) Parameters id TKey roles IList<string> Returns Task<IResult>"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Services.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.AspNetCore.Services.html",
    "title": "Namespace NuvTools.Security.Identity.AspNetCore.Services | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Identity.AspNetCore.Services Classes UserServiceBase<TUser, TRole, TKey> Provides a base service for user management operations, built upon UserManager<TUser>."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.EntityFrameworkCore.IdentityDbContextBase-3.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.EntityFrameworkCore.IdentityDbContextBase-3.html",
    "title": "Class IdentityDbContextBase<TUser, TRole, TIdentityKey> | Nuv Tools Framework Docs",
    "summary": "Class IdentityDbContextBase<TUser, TRole, TIdentityKey> Namespace NuvTools.Security.Identity.EntityFrameworkCore Assembly NuvTools.Security.Identity.EntityFrameworkCore.dll public abstract class IdentityDbContextBase<TUser, TRole, TIdentityKey> : IdentityDbContext<TUser, TRole, TIdentityKey>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable, IDbContextCommands, IDbContextWithListCommands where TUser : IdentityUser<TIdentityKey> where TRole : IdentityRole<TIdentityKey> where TIdentityKey : IEquatable<TIdentityKey> Type Parameters TUser TRole TIdentityKey Inheritance object DbContext IdentityUserContext<TUser, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityUserToken<TIdentityKey>> IdentityDbContext<TUser, TRole, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserRole<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityRoleClaim<TIdentityKey>, IdentityUserToken<TIdentityKey>> IdentityDbContext<TUser, TRole, TIdentityKey> IdentityDbContextBase<TUser, TRole, TIdentityKey> Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable IDbContextCommands IDbContextWithListCommands Inherited Members IdentityDbContext<TUser, TRole, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserRole<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityRoleClaim<TIdentityKey>, IdentityUserToken<TIdentityKey>>.OnModelCreating(ModelBuilder) IdentityDbContext<TUser, TRole, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserRole<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityRoleClaim<TIdentityKey>, IdentityUserToken<TIdentityKey>>.UserRoles IdentityDbContext<TUser, TRole, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserRole<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityRoleClaim<TIdentityKey>, IdentityUserToken<TIdentityKey>>.Roles IdentityDbContext<TUser, TRole, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserRole<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityRoleClaim<TIdentityKey>, IdentityUserToken<TIdentityKey>>.RoleClaims IdentityUserContext<TUser, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityUserToken<TIdentityKey>>.OnModelCreating(ModelBuilder) IdentityUserContext<TUser, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityUserToken<TIdentityKey>>.Users IdentityUserContext<TUser, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityUserToken<TIdentityKey>>.UserClaims IdentityUserContext<TUser, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityUserToken<TIdentityKey>>.UserLogins IdentityUserContext<TUser, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityUserToken<TIdentityKey>>.UserTokens IdentityUserContext<TUser, TIdentityKey, IdentityUserClaim<TIdentityKey>, IdentityUserLogin<TIdentityKey>, IdentityUserToken<TIdentityKey>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors IdentityDbContextBase() protected IdentityDbContextBase() IdentityDbContextBase(DbContextOptions) protected IdentityDbContextBase(DbContextOptions options) Parameters options DbContextOptions Properties CurrentTransaction public IDbContextTransaction? CurrentTransaction { get; } Property Value IDbContextTransaction Methods AddAndSaveAsync<TEntity, TKey>(TEntity, CancellationToken) public Task<IResult<TKey>> AddAndSaveAsync<TEntity, TKey>(TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity cancellationToken CancellationToken Returns Task<IResult<TKey>> Type Parameters TEntity TKey AddAndSaveWithCompositeKeyAsync<TEntity>(TEntity, CancellationToken) public Task<IResult<object[]>> AddAndSaveWithCompositeKeyAsync<TEntity>(TEntity entity, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity cancellationToken CancellationToken Returns Task<IResult<object[]>> Type Parameters TEntity AddOrRemoveFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or removing entities, without updating any entities. public Task<IResult> AddOrRemoveFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrRemoveFromListAsync( updatedOrders, o => o.OrderId, o => o.IsPending ); Remarks This method adds entities in the list that are not in the database and removes entities in the database that are not in the list. It does not update any entities. AddOrUpdateFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding or updating entities, without removing any entities. public Task<IResult> AddOrUpdateFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.AddOrUpdateFromListAsync( updatedProducts, p => p.ProductCode, p => p.IsActive ); Remarks This method adds entities in the list that are not in the database and updates entities that exist in both. It does not remove any entities from the database. BeginTransactionAsync(CancellationToken) public Task<IDbContextTransaction> BeginTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<IDbContextTransaction> CommitTransactionAsync(CancellationToken) public Task CommitTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task ExecuteWithStrategyAsync(Func<CancellationToken, Task>, CancellationToken) public Task ExecuteWithStrategyAsync(Func<CancellationToken, Task> action, CancellationToken cancellationToken = default) Parameters action Func<CancellationToken, Task> cancellationToken CancellationToken Returns Task ExecuteWithStrategyAsync<T>(Func<CancellationToken, Task<T>>, CancellationToken) public Task<T> ExecuteWithStrategyAsync<T>(Func<CancellationToken, Task<T>> action, CancellationToken cancellationToken = default) Parameters action Func<CancellationToken, Task<T>> cancellationToken CancellationToken Returns Task<T> Type Parameters T RemoveAndSaveAsync<TEntity>(params object[]) public Task<IResult> RemoveAndSaveAsync<TEntity>(params object[] keyValues) where TEntity : class Parameters keyValues object[] Returns Task<IResult> Type Parameters TEntity RemoveAndSaveAsync<TEntity>(object[], CancellationToken) public Task<IResult> RemoveAndSaveAsync<TEntity>(object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity RollbackTransactionAsync(CancellationToken) public Task RollbackTransactionAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task SyncFromListAsync<TEntity, TKey>(IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?, CancellationToken) Synchronizes a DbSet with a provided list by adding, updating, or removing entities. public Task<IResult> SyncFromListAsync<TEntity, TKey>(IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null, CancellationToken cancellationToken = default) where TEntity : class where TKey : notnull Parameters entities IEnumerable<TEntity> The list of entities to synchronize with the database. keySelector Func<TEntity, TKey> A function to select the key for matching entities. filter Expression<Func<TEntity, bool>> An optional filter predicate to apply to the database entities. cancellationToken CancellationToken A token to monitor for cancellation requests. Returns Task<IResult> Type Parameters TEntity The type of the entity. TKey The type of the key used to uniquely identify entities. Examples await context.SyncFromListAsync( updatedEmployees, e => e.Id, e => e.IsActive ); Remarks This method adds entities in the list that are not in the database, updates entities that exist in both, and removes entities in the database that are not in the list. UpdateAndSaveAsync<TEntity>(TEntity, params object[]) public Task<IResult> UpdateAndSaveAsync<TEntity>(TEntity entity, params object[] keyValues) where TEntity : class Parameters entity TEntity keyValues object[] Returns Task<IResult> Type Parameters TEntity UpdateAndSaveAsync<TEntity>(TEntity, object[], CancellationToken) public Task<IResult> UpdateAndSaveAsync<TEntity>(TEntity entity, object[] keyValues, CancellationToken cancellationToken = default) where TEntity : class Parameters entity TEntity keyValues object[] cancellationToken CancellationToken Returns Task<IResult> Type Parameters TEntity"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.EntityFrameworkCore.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.EntityFrameworkCore.html",
    "title": "Namespace NuvTools.Security.Identity.EntityFrameworkCore | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Identity.EntityFrameworkCore Classes IdentityDbContextBase<TUser, TRole, TIdentityKey>"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Api.RefreshTokenRequest.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Api.RefreshTokenRequest.html",
    "title": "Class RefreshTokenRequest | Nuv Tools Framework Docs",
    "summary": "Class RefreshTokenRequest Namespace NuvTools.Security.Identity.Models.Api Assembly NuvTools.Security.Identity.Models.dll public class RefreshTokenRequest Inheritance object RefreshTokenRequest Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors RefreshTokenRequest() public RefreshTokenRequest() Properties RefreshToken public string? RefreshToken { get; set; } Property Value string Token public string? Token { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Api.TokenResponse.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Api.TokenResponse.html",
    "title": "Class TokenResponse | Nuv Tools Framework Docs",
    "summary": "Class TokenResponse Namespace NuvTools.Security.Identity.Models.Api Assembly NuvTools.Security.Identity.Models.dll public class TokenResponse Inheritance object TokenResponse Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors TokenResponse() public TokenResponse() Properties RefreshToken public string? RefreshToken { get; set; } Property Value string RefreshTokenExpiryTime public DateTime? RefreshTokenExpiryTime { get; set; } Property Value DateTime? Token public string? Token { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Api.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Api.html",
    "title": "Namespace NuvTools.Security.Identity.Models.Api | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Identity.Models.Api Classes RefreshTokenRequest TokenResponse"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.ChangePasswordForm.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.ChangePasswordForm.html",
    "title": "Class ChangePasswordForm | Nuv Tools Framework Docs",
    "summary": "Class ChangePasswordForm Namespace NuvTools.Security.Identity.Models.Form Assembly NuvTools.Security.Identity.Models.dll public class ChangePasswordForm Inheritance object ChangePasswordForm Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ChangePasswordForm() public ChangePasswordForm() Properties ConfirmNewPassword [Display(Name = \"ConfirmNewPassword\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [Compare(\"NewPassword\", ErrorMessageResourceName = \"XMustBeEqualY\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? ConfirmNewPassword { get; set; } Property Value string NewPassword [Display(Name = \"NewPassword\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(40, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MinLength(6, ErrorMessageResourceName = \"XMustHaveAtLeastYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? NewPassword { get; set; } Property Value string Password [Display(Name = \"Password\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(40, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MinLength(6, ErrorMessageResourceName = \"XMustHaveAtLeastYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Password { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.ForgotPasswordForm.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.ForgotPasswordForm.html",
    "title": "Class ForgotPasswordForm | Nuv Tools Framework Docs",
    "summary": "Class ForgotPasswordForm Namespace NuvTools.Security.Identity.Models.Form Assembly NuvTools.Security.Identity.Models.dll public class ForgotPasswordForm Inheritance object ForgotPasswordForm Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ForgotPasswordForm() public ForgotPasswordForm() Properties Email [Display(Name = \"Email\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [EmailAddress(ErrorMessageResourceName = \"InvalidEmail\", ErrorMessageResourceType = typeof(Messages))] public string? Email { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.LoginForm.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.LoginForm.html",
    "title": "Class LoginForm | Nuv Tools Framework Docs",
    "summary": "Class LoginForm Namespace NuvTools.Security.Identity.Models.Form Assembly NuvTools.Security.Identity.Models.dll public class LoginForm Inheritance object LoginForm Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors LoginForm() public LoginForm() Properties Email [Display(Name = \"Email\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [EmailAddress(ErrorMessageResourceName = \"InvalidEmail\", ErrorMessageResourceType = typeof(Messages))] public virtual string? Email { get; set; } Property Value string Password [Display(Name = \"Password\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Password { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.ResetPasswordForm.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.ResetPasswordForm.html",
    "title": "Class ResetPasswordForm | Nuv Tools Framework Docs",
    "summary": "Class ResetPasswordForm Namespace NuvTools.Security.Identity.Models.Form Assembly NuvTools.Security.Identity.Models.dll public class ResetPasswordForm Inheritance object ResetPasswordForm Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors ResetPasswordForm() public ResetPasswordForm() Properties Email public string? Email { get; set; } Property Value string Password public string? Password { get; set; } Property Value string Token public string? Token { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.UpdateProfileForm.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.UpdateProfileForm.html",
    "title": "Class UpdateProfileForm | Nuv Tools Framework Docs",
    "summary": "Class UpdateProfileForm Namespace NuvTools.Security.Identity.Models.Form Assembly NuvTools.Security.Identity.Models.dll public class UpdateProfileForm Inheritance object UpdateProfileForm Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UpdateProfileForm() public UpdateProfileForm() Properties Email public string? Email { get; set; } Property Value string Name [Display(Name = \"Name\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public string? Name { get; set; } Property Value string Surname [Display(Name = \"Surname\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public string? Surname { get; set; } Property Value string Token public string? Token { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.UserForm.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.UserForm.html",
    "title": "Class UserForm | Nuv Tools Framework Docs",
    "summary": "Class UserForm Namespace NuvTools.Security.Identity.Models.Form Assembly NuvTools.Security.Identity.Models.dll public class UserForm Inheritance object UserForm Derived UserWithPasswordForm Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UserForm() public UserForm() Properties Email [Display(Name = \"Email\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(100, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [EmailAddress(ErrorMessageResourceName = \"InvalidEmail\", ErrorMessageResourceType = typeof(Messages))] public virtual string? Email { get; set; } Property Value string EmailConfirmed public bool EmailConfirmed { get; set; } Property Value bool Id public int Id { get; set; } Property Value int Name [Display(Name = \"Name\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Name { get; set; } Property Value string Status [Display(Name = \"Status\", ResourceType = typeof(Fields))] public virtual bool Status { get; set; } Property Value bool Surname [Display(Name = \"Surname\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Surname { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.UserWithPasswordForm.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.UserWithPasswordForm.html",
    "title": "Class UserWithPasswordForm | Nuv Tools Framework Docs",
    "summary": "Class UserWithPasswordForm Namespace NuvTools.Security.Identity.Models.Form Assembly NuvTools.Security.Identity.Models.dll public class UserWithPasswordForm : UserForm Inheritance object UserForm UserWithPasswordForm Inherited Members UserForm.Id UserForm.Email UserForm.Name UserForm.Surname UserForm.Status UserForm.EmailConfirmed object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors UserWithPasswordForm() public UserWithPasswordForm() Properties ConfirmPassword [NotMapped] [Display(Name = \"PasswordConfirm\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [Compare(\"Password\", ErrorMessageResourceName = \"XMustBeEqualY\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? ConfirmPassword { get; set; } Property Value string Password [NotMapped] [Display(Name = \"Password\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(40, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MinLength(6, ErrorMessageResourceName = \"XMustHaveAtLeastYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Password { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.Form.html",
    "title": "Namespace NuvTools.Security.Identity.Models.Form | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Identity.Models.Form Classes ChangePasswordForm ForgotPasswordForm LoginForm ResetPasswordForm UpdateProfileForm UserForm UserWithPasswordForm"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.RoleBase-1.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.RoleBase-1.html",
    "title": "Class RoleBase<TKey> | Nuv Tools Framework Docs",
    "summary": "Class RoleBase<TKey> Namespace NuvTools.Security.Identity.Models Assembly NuvTools.Security.Identity.Models.dll Represents the base model for application roles within the identity system. public abstract class RoleBase<TKey> : IdentityRole<TKey> where TKey : IEquatable<TKey> Type Parameters TKey The type of the primary key used for the role (e.g., Guid or int). Inheritance object IdentityRole<TKey> RoleBase<TKey> Inherited Members IdentityRole<TKey>.ToString() IdentityRole<TKey>.Id IdentityRole<TKey>.NormalizedName IdentityRole<TKey>.ConcurrencyStamp object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This abstract class extends IdentityRole<TKey> to provide additional validation, display metadata, and support for storing associated claims in memory. Constructors RoleBase() Initializes a new instance of the RoleBase<TKey> class. protected RoleBase() RoleBase(string) Initializes a new instance of the RoleBase<TKey> class with the specified name. protected RoleBase(string name) Parameters name string The name of the role. Properties Claims Gets or sets the list of claims associated with this role. [NotMapped] public List<KeyValuePair<string, string>>? Claims { get; set; } Property Value List<KeyValuePair<string, string>> Remarks This property is marked as \"NotMapped\" since claims are managed through the RoleManager<TRole> API and are not persisted directly in the database. Name Gets or sets the display name of the role. [Display(Name = \"Name\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(30, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public override string? Name { get; set; } Property Value string Remarks This property overrides the base Name property to apply validation and localization-friendly display attributes."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.UserBase-1.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.UserBase-1.html",
    "title": "Class UserBase<TKey> | Nuv Tools Framework Docs",
    "summary": "Class UserBase<TKey> Namespace NuvTools.Security.Identity.Models Assembly NuvTools.Security.Identity.Models.dll Represents the base class for application users within the identity system. public abstract class UserBase<TKey> : IdentityUser<TKey> where TKey : IEquatable<TKey> Type Parameters TKey The type of the user's primary key (e.g., Guid or int). Inheritance object IdentityUser<TKey> UserBase<TKey> Inherited Members IdentityUser<TKey>.ToString() IdentityUser<TKey>.Id IdentityUser<TKey>.UserName IdentityUser<TKey>.NormalizedUserName IdentityUser<TKey>.NormalizedEmail IdentityUser<TKey>.EmailConfirmed IdentityUser<TKey>.PasswordHash IdentityUser<TKey>.SecurityStamp IdentityUser<TKey>.ConcurrencyStamp IdentityUser<TKey>.PhoneNumber IdentityUser<TKey>.PhoneNumberConfirmed IdentityUser<TKey>.TwoFactorEnabled IdentityUser<TKey>.LockoutEnd IdentityUser<TKey>.LockoutEnabled IdentityUser<TKey>.AccessFailedCount object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This abstract class extends IdentityUser<TKey> to include additional profile data and validation attributes for multilingual applications. It also introduces password and refresh token fields that are not persisted in the database. Constructors UserBase() protected UserBase() Properties Email Gets or sets the user's email address. [Display(Name = \"Email\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(100, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [EmailAddress(ErrorMessageResourceName = \"InvalidEmail\", ErrorMessageResourceType = typeof(Messages))] public override string? Email { get; set; } Property Value string Remarks This property overrides the base Email property to add localized display names and validation attributes. Name Gets or sets the user's first name. [Display(Name = \"Name\", ResourceType = typeof(Fields))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Name { get; set; } Property Value string Password Gets or sets the user's password. This property is not persisted in the database. [NotMapped] [Display(Name = \"Password\", ResourceType = typeof(Fields))] [Required(ErrorMessageResourceName = \"XRequired\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MaxLength(40, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] [MinLength(6, ErrorMessageResourceName = \"XMustHaveAtLeastYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Password { get; set; } Property Value string Remarks It is intended for use during user registration or password updates. The complexity attributes are enforced through NuvTools.Validation.Annotations. RefreshToken Gets or sets the refresh token used for renewing authentication sessions. [NotMapped] public string? RefreshToken { get; set; } Property Value string Remarks This property is not mapped to the database and is meant for temporary runtime storage. RefreshTokenExpiryTime Gets or sets the date and time when the refresh token expires. [NotMapped] public DateTime RefreshTokenExpiryTime { get; set; } Property Value DateTime Remarks This property is not persisted in the database. Status Gets or sets a value indicating whether the user account is active. [Display(Name = \"Status\", ResourceType = typeof(Fields))] public virtual bool Status { get; set; } Property Value bool Surname Gets or sets the user's last name or surname. [Display(Name = \"Surname\", ResourceType = typeof(Fields))] [MaxLength(50, ErrorMessageResourceName = \"XMustHaveUpToYCharacters\", ErrorMessageResourceType = typeof(DynamicValidationMessages))] public virtual string? Surname { get; set; } Property Value string"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.UserRoles.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.UserRoles.html",
    "title": "Class UserRoles | Nuv Tools Framework Docs",
    "summary": "Class UserRoles Namespace NuvTools.Security.Identity.Models Assembly NuvTools.Security.Identity.Models.dll Represents the association between a user and their assigned roles. public class UserRoles Inheritance object UserRoles Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This model is typically used for transferring or serializing role assignment data, for example in APIs or service layers that need to list or update user roles. It does not represent a database entity but rather a DTO (Data Transfer Object). Constructors UserRoles() public UserRoles() Properties Roles Gets or sets the list of role names assigned to the user. public IList<string>? Roles { get; set; } Property Value IList<string> Remarks Each string represents a role name. If no roles are assigned, this property may be null or an empty list. UserId Gets or sets the unique identifier of the user. public int UserId { get; set; } Property Value int Remarks The identifier type is defined as int by default"
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Models.html",
    "title": "Namespace NuvTools.Security.Identity.Models | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Identity.Models Classes RoleBase<TKey> Represents the base model for application roles within the identity system. UserBase<TKey> Represents the base class for application users within the identity system. UserRoles Represents the association between a user and their assigned roles."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.AuthorizationPermissionPolicyProvider.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.AuthorizationPermissionPolicyProvider.html",
    "title": "Class AuthorizationPermissionPolicyProvider | Nuv Tools Framework Docs",
    "summary": "Class AuthorizationPermissionPolicyProvider Namespace NuvTools.Security.Identity.Policy Assembly NuvTools.Security.Identity.dll Custom implementation of IAuthorizationPolicyProvider that dynamically generates authorization policies based on permission claims. public class AuthorizationPermissionPolicyProvider : IAuthorizationPolicyProvider Inheritance object AuthorizationPermissionPolicyProvider Implements IAuthorizationPolicyProvider Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This provider enables runtime creation of policies following a naming convention. If a policy name starts with Permission, it creates a policy that requires a PermissionRequirement with the corresponding value. Otherwise, it delegates to the default DefaultAuthorizationPolicyProvider. Constructors AuthorizationPermissionPolicyProvider(IOptions<AuthorizationOptions>) Custom implementation of IAuthorizationPolicyProvider that dynamically generates authorization policies based on permission claims. public AuthorizationPermissionPolicyProvider(IOptions<AuthorizationOptions> options) Parameters options IOptions<AuthorizationOptions> Remarks This provider enables runtime creation of policies following a naming convention. If a policy name starts with Permission, it creates a policy that requires a PermissionRequirement with the corresponding value. Otherwise, it delegates to the default DefaultAuthorizationPolicyProvider. Properties FallbackPolicyProvider The default fallback policy provider used for standard authorization policies. public DefaultAuthorizationPolicyProvider FallbackPolicyProvider { get; } Property Value DefaultAuthorizationPolicyProvider Methods GetDefaultPolicyAsync() Retrieves the default authorization policy. public Task<AuthorizationPolicy> GetDefaultPolicyAsync() Returns Task<AuthorizationPolicy> A Task<TResult> containing the default AuthorizationPolicy. GetFallbackPolicyAsync() Retrieves the fallback authorization policy, if defined. public Task<AuthorizationPolicy?> GetFallbackPolicyAsync() Returns Task<AuthorizationPolicy> Always returns null since this provider does not define a fallback policy. GetPolicyAsync(string) Retrieves an authorization policy based on the specified policy name. public Task<AuthorizationPolicy?> GetPolicyAsync(string policyName) Parameters policyName string The name of the policy to retrieve. Returns Task<AuthorizationPolicy> A Task<TResult> containing the AuthorizationPolicy, or null if none exists. Remarks If the policyName starts with Permission, a new policy will be built dynamically that enforces a PermissionRequirement. Otherwise, the request is delegated to the fallback provider."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.PermissionAuthorizationHandler.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.PermissionAuthorizationHandler.html",
    "title": "Class PermissionAuthorizationHandler | Nuv Tools Framework Docs",
    "summary": "Class PermissionAuthorizationHandler Namespace NuvTools.Security.Identity.Policy Assembly NuvTools.Security.Identity.dll Handles authorization based on permission claims. public class PermissionAuthorizationHandler : AuthorizationHandler<PermissionRequirement>, IAuthorizationHandler Inheritance object AuthorizationHandler<PermissionRequirement> PermissionAuthorizationHandler Implements IAuthorizationHandler Inherited Members AuthorizationHandler<PermissionRequirement>.HandleAsync(AuthorizationHandlerContext) object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This handler evaluates whether the current authenticated user possesses a required permission (represented by a claim of type Permission). If the user has the required permission, the authorization requirement is marked as succeeded. Constructors PermissionAuthorizationHandler() Initializes a new instance of the PermissionAuthorizationHandler class. public PermissionAuthorizationHandler() Methods HandleRequirementAsync(AuthorizationHandlerContext, PermissionRequirement) Handles authorization logic for the specified PermissionRequirement. protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, PermissionRequirement requirement) Parameters context AuthorizationHandlerContext The authorization context containing user information and requirements. requirement PermissionRequirement The permission requirement being evaluated. Returns Task A Task representing the asynchronous operation. Remarks The handler checks for a claim of type Permission that matches the required permission and has the issuer \"LOCAL AUTHORITY\"."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.PermissionRequirement.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.PermissionRequirement.html",
    "title": "Class PermissionRequirement | Nuv Tools Framework Docs",
    "summary": "Class PermissionRequirement Namespace NuvTools.Security.Identity.Policy Assembly NuvTools.Security.Identity.dll Represents an authorization requirement based on a specific permission. public class PermissionRequirement : IAuthorizationRequirement Inheritance object PermissionRequirement Implements IAuthorizationRequirement Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This requirement is evaluated by the PermissionAuthorizationHandler to determine whether the current user possesses a claim that grants the specified permission. Constructors PermissionRequirement(string) Represents an authorization requirement based on a specific permission. public PermissionRequirement(string permission) Parameters permission string Remarks This requirement is evaluated by the PermissionAuthorizationHandler to determine whether the current user possesses a claim that grants the specified permission. Properties Permission Gets the name or identifier of the permission required for authorization. public string Permission { get; } Property Value string Remarks This value typically corresponds to the Value of a claim of type ClaimTypes.Permission that must be present on the authenticated user."
  },
  "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.html": {
    "href": "api/NuvTools.Security.Identity/NuvTools.Security.Identity.Policy.html",
    "title": "Namespace NuvTools.Security.Identity.Policy | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Identity.Policy Classes AuthorizationPermissionPolicyProvider Custom implementation of IAuthorizationPolicyProvider that dynamically generates authorization policies based on permission claims. PermissionAuthorizationHandler Handles authorization based on permission claims. PermissionRequirement Represents an authorization requirement based on a specific permission."
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Blazor.ManualAuthenticationStateProvider.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Blazor.ManualAuthenticationStateProvider.html",
    "title": "Class ManualAuthenticationStateProvider | Nuv Tools Framework Docs",
    "summary": "Class ManualAuthenticationStateProvider Namespace NuvTools.Security.AspNetCore.Blazor Assembly NuvTools.Security.AspNetCore.Blazor.dll Provides a manual implementation of AuthenticationStateProvider that manages user authentication state using JWT tokens stored in browser local storage. public class ManualAuthenticationStateProvider : AuthenticationStateProvider Inheritance object AuthenticationStateProvider ManualAuthenticationStateProvider Inherited Members AuthenticationStateProvider.NotifyAuthenticationStateChanged(Task<AuthenticationState>) AuthenticationStateProvider.AuthenticationStateChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This provider enables custom authentication logic in Blazor applications, typically used when not relying on built-in authentication mechanisms like OpenID Connect or Azure AD. Constructors ManualAuthenticationStateProvider(ILocalStorageService) Provides a manual implementation of AuthenticationStateProvider that manages user authentication state using JWT tokens stored in browser local storage. public ManualAuthenticationStateProvider(ILocalStorageService storage) Parameters storage ILocalStorageService Remarks This provider enables custom authentication logic in Blazor applications, typically used when not relying on built-in authentication mechanisms like OpenID Connect or Azure AD. Properties CurrentUser Gets the current authenticated user. public ClaimsPrincipal? CurrentUser { get; } Property Value ClaimsPrincipal Methods GetAuthenticationStateAsync() Gets the current authentication state by reading the JWT token from local storage. public override Task<AuthenticationState> GetAuthenticationStateAsync() Returns Task<AuthenticationState> An AuthenticationState representing the current user or an anonymous identity if no valid token exists. SignInAsync(string) Signs the user in by validating the provided JWT token and updating the authentication state. public Task SignInAsync(string token) Parameters token string The JWT token used to authenticate the user. Returns Task Remarks If the token is expired or invalid, the user will be automatically signed out. Exceptions ArgumentNullException Thrown if token is null or empty. SignOutAsync() Signs the user out by removing the stored token and setting the authentication state to anonymous. public Task SignOutAsync() Returns Task"
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Blazor.OidcAuthenticationStateProvider.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Blazor.OidcAuthenticationStateProvider.html",
    "title": "Class OidcAuthenticationStateProvider | Nuv Tools Framework Docs",
    "summary": "Class OidcAuthenticationStateProvider Namespace NuvTools.Security.AspNetCore.Blazor Assembly NuvTools.Security.AspNetCore.Blazor.dll Provides an AuthenticationStateProvider implementation for Blazor WebAssembly applications that use OpenID Connect (OIDC) authentication. public class OidcAuthenticationStateProvider : AuthenticationStateProvider Inheritance object AuthenticationStateProvider OidcAuthenticationStateProvider Inherited Members AuthenticationStateProvider.NotifyAuthenticationStateChanged(Task<AuthenticationState>) AuthenticationStateProvider.AuthenticationStateChanged object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This provider retrieves and parses access tokens using an IAccessTokenProvider, enabling JWT-based user claims to be extracted and tracked for authorization. Constructors OidcAuthenticationStateProvider(IAccessTokenProvider) Provides an AuthenticationStateProvider implementation for Blazor WebAssembly applications that use OpenID Connect (OIDC) authentication. public OidcAuthenticationStateProvider(IAccessTokenProvider tokenProvider) Parameters tokenProvider IAccessTokenProvider Remarks This provider retrieves and parses access tokens using an IAccessTokenProvider, enabling JWT-based user claims to be extracted and tracked for authorization. Properties CurrentUser Gets the current authenticated user represented by a ClaimsPrincipal. public ClaimsPrincipal? CurrentUser { get; } Property Value ClaimsPrincipal Methods GetAuthenticationStateAsync() Asynchronously retrieves the current authentication state. public override Task<AuthenticationState> GetAuthenticationStateAsync() Returns Task<AuthenticationState> An AuthenticationState representing either the authenticated user or an anonymous identity if the token could not be obtained or is invalid. Remarks This method is called by the Blazor authorization infrastructure to determine the current user’s identity. If a valid access token is present, it will parse the claims from the JWT; otherwise, it returns an anonymous user."
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Blazor.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Blazor.html",
    "title": "Namespace NuvTools.Security.AspNetCore.Blazor | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.AspNetCore.Blazor Classes ManualAuthenticationStateProvider Provides a manual implementation of AuthenticationStateProvider that manages user authentication state using JWT tokens stored in browser local storage. OidcAuthenticationStateProvider Provides an AuthenticationStateProvider implementation for Blazor WebAssembly applications that use OpenID Connect (OIDC) authentication."
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Configurations.SecurityConfigurationSection.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Configurations.SecurityConfigurationSection.html",
    "title": "Class SecurityConfigurationSection | Nuv Tools Framework Docs",
    "summary": "Class SecurityConfigurationSection Namespace NuvTools.Security.AspNetCore.Configurations Assembly NuvTools.Security.AspNetCore.dll Contains the mail configuration that should be loaded from appsettings file. The default section name is \"NuvTools.Security\" public class SecurityConfigurationSection Inheritance object SecurityConfigurationSection Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors SecurityConfigurationSection() public SecurityConfigurationSection() Properties Audience public required string Audience { get; set; } Property Value string Issuer public required string Issuer { get; set; } Property Value string SecretKey public required string SecretKey { get; set; } Property Value string"
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Configurations.ServiceCollectionExtensions.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Configurations.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | Nuv Tools Framework Docs",
    "summary": "Class ServiceCollectionExtensions Namespace NuvTools.Security.AspNetCore.Configurations Assembly NuvTools.Security.AspNetCore.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddSecurityConfiguration(IServiceCollection, IConfiguration, string) Configures security section (SecurityConfigurationSection) to use with TOptions injection. public static IServiceCollection AddSecurityConfiguration(this IServiceCollection services, IConfiguration configuration, string sectionName = \"NuvTools.Security\") Parameters services IServiceCollection configuration IConfiguration sectionName string Just in case to use another section instead the default one. Returns IServiceCollection"
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Configurations.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Configurations.html",
    "title": "Namespace NuvTools.Security.AspNetCore.Configurations | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.AspNetCore.Configurations Classes SecurityConfigurationSection Contains the mail configuration that should be loaded from appsettings file. The default section name is \"NuvTools.Security\" ServiceCollectionExtensions"
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Services.CurrentUserService.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Services.CurrentUserService.html",
    "title": "Class CurrentUserService | Nuv Tools Framework Docs",
    "summary": "Class CurrentUserService Namespace NuvTools.Security.AspNetCore.Services Assembly NuvTools.Security.AspNetCore.dll Provides information about the currently authenticated user and their connection details within an ASP.NET Core application. public class CurrentUserService Inheritance object CurrentUserService Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Remarks This service is useful for retrieving user identity data (claims, identifiers, IP address, etc.) in controllers, Razor pages, or application services where dependency injection is available. Constructors CurrentUserService(IHttpContextAccessor) Provides information about the currently authenticated user and their connection details within an ASP.NET Core application. public CurrentUserService(IHttpContextAccessor httpContextAccessor) Parameters httpContextAccessor IHttpContextAccessor Remarks This service is useful for retrieving user identity data (claims, identifiers, IP address, etc.) in controllers, Razor pages, or application services where dependency injection is available. Properties Claims Gets all claims of the current authenticated user as a collection of key/value pairs. public IReadOnlyList<KeyValuePair<string, string>> Claims { get; } Property Value IReadOnlyList<KeyValuePair<string, string>> Remarks Each item represents a claim type and its corresponding value. FullRemoteAddress Gets a string combining the remote IP address and port number. public string FullRemoteAddress { get; } Property Value string Remarks If the remote address is unavailable, this property returns an empty string. NameIdentifier Gets the unique identifier (NameIdentifier claim) of the current authenticated user. public string? NameIdentifier { get; } Property Value string Remarks This typically corresponds to the sub claim in JWT-based authentication or the user ID in ASP.NET Identity. RemoteIpAddress Gets the remote IP address of the current HTTP request, if available. public string? RemoteIpAddress { get; } Property Value string RemotePort Gets the remote port of the current HTTP request, if available. public int? RemotePort { get; } Property Value int?"
  },
  "api/NuvTools.Security/NuvTools.Security.AspNetCore.Services.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.AspNetCore.Services.html",
    "title": "Namespace NuvTools.Security.AspNetCore.Services | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.AspNetCore.Services Classes CurrentUserService Provides information about the currently authenticated user and their connection details within an ASP.NET Core application."
  },
  "api/NuvTools.Security/NuvTools.Security.Extensions.ClaimExtensions.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Extensions.ClaimExtensions.html",
    "title": "Class ClaimExtensions | Nuv Tools Framework Docs",
    "summary": "Class ClaimExtensions Namespace NuvTools.Security.Extensions Assembly NuvTools.Security.dll public static class ClaimExtensions Inheritance object ClaimExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods AddByClass(List<Claim>, string, Type) public static void AddByClass(this List<Claim> claims, string claimType, Type classType) Parameters claims List<Claim> claimType string classType Type AddPermission(List<Claim>, string) public static void AddPermission(this List<Claim> claims, string value) Parameters claims List<Claim> value string AddPermissionByClass(List<Claim>, Type) public static void AddPermissionByClass(this List<Claim> claims, Type classType) Parameters claims List<Claim> classType Type"
  },
  "api/NuvTools.Security/NuvTools.Security.Extensions.ClaimsPrincipalExtensions.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Extensions.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | Nuv Tools Framework Docs",
    "summary": "Class ClaimsPrincipalExtensions Namespace NuvTools.Security.Extensions Assembly NuvTools.Security.dll public static class ClaimsPrincipalExtensions Inheritance object ClaimsPrincipalExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetCustomAttributeValues<T>(ClaimsPrincipal, string) public static IEnumerable<T>? GetCustomAttributeValues<T>(this ClaimsPrincipal user, string customAttributeName) Parameters user ClaimsPrincipal customAttributeName string Returns IEnumerable<T> Type Parameters T GetEmail(ClaimsPrincipal) public static string? GetEmail(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetFamilyName(ClaimsPrincipal) public static string? GetFamilyName(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetGivenName(ClaimsPrincipal) public static string? GetGivenName(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetId(ClaimsPrincipal) public static string GetId(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetName(ClaimsPrincipal) public static string? GetName(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetNameIdentifier(ClaimsPrincipal) public static string? GetNameIdentifier(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetPreferredUsername(ClaimsPrincipal) public static string? GetPreferredUsername(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetSub(ClaimsPrincipal) public static string? GetSub(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetSurname(ClaimsPrincipal) public static string? GetSurname(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetUniqueName(ClaimsPrincipal) public static string? GetUniqueName(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetUpn(ClaimsPrincipal) public static string? GetUpn(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string HasValue<T>(ClaimsPrincipal, string, T) public static bool HasValue<T>(this ClaimsPrincipal user, string customAttriuteName, T value) Parameters user ClaimsPrincipal customAttriuteName string value T Returns bool Type Parameters T"
  },
  "api/NuvTools.Security/NuvTools.Security.Extensions.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Extensions.html",
    "title": "Namespace NuvTools.Security.Extensions | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Extensions Classes ClaimExtensions ClaimsPrincipalExtensions"
  },
  "api/NuvTools.Security/NuvTools.Security.Helpers.CryptographyHelper.HashAlgorithmType.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Helpers.CryptographyHelper.HashAlgorithmType.html",
    "title": "Enum CryptographyHelper.HashAlgorithmType | Nuv Tools Framework Docs",
    "summary": "Enum CryptographyHelper.HashAlgorithmType Namespace NuvTools.Security.Helpers Assembly NuvTools.Security.dll Supported hashing algorithms. public enum CryptographyHelper.HashAlgorithmType Fields SHA256 = 0 SHA512 = 1"
  },
  "api/NuvTools.Security/NuvTools.Security.Helpers.CryptographyHelper.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Helpers.CryptographyHelper.html",
    "title": "Class CryptographyHelper | Nuv Tools Framework Docs",
    "summary": "Class CryptographyHelper Namespace NuvTools.Security.Helpers Assembly NuvTools.Security.dll Provides helper methods for computing cryptographic hashes. public static class CryptographyHelper Inheritance object CryptographyHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods ComputeHash(string?, HashAlgorithmType) Computes the cryptographic hash of a string using the specified algorithm. public static string ComputeHash(string? value, CryptographyHelper.HashAlgorithmType algorithm = HashAlgorithmType.SHA256) Parameters value string The input string to be hashed. If null or empty, an empty string is returned. algorithm CryptographyHelper.HashAlgorithmType The hash algorithm to use. Defaults to SHA256. Returns string A lowercase hexadecimal representation of the computed hash. ComputeSHA256Hash(string?) Computes a SHA-256 hash for the given string. public static string ComputeSHA256Hash(string? value) Parameters value string Returns string ComputeSHA512Hash(string?) Computes a SHA-512 hash for the given string. public static string ComputeSHA512Hash(string? value) Parameters value string Returns string"
  },
  "api/NuvTools.Security/NuvTools.Security.Helpers.JwtHelper.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Helpers.JwtHelper.html",
    "title": "Class JwtHelper | Nuv Tools Framework Docs",
    "summary": "Class JwtHelper Namespace NuvTools.Security.Helpers Assembly NuvTools.Security.dll Provides helper methods for generating, parsing, and validating JSON Web Tokens (JWTs). public static class JwtHelper Inheritance object JwtHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Generate(string, string, string, IEnumerable<Claim>, DateTime?) Generates a signed JWT token. public static string Generate(string key, string issuer, string audience, IEnumerable<Claim> claims, DateTime? expires = null) Parameters key string The secret key used for signing the token. issuer string The token issuer (usually your API or authentication service). audience string The intended audience for the token. claims IEnumerable<Claim> The claims to include in the token payload. expires DateTime? The optional expiration date and time for the token. Returns string A signed JWT as a string. GenerateRefreshToken() Generates a secure random refresh token as a Base64 string. public static string GenerateRefreshToken() Returns string GetPrincipalFromExpiredToken(string, string) Extracts the ClaimsPrincipal from an expired JWT without validating its expiration. public static ClaimsPrincipal GetPrincipalFromExpiredToken(string token, string key) Parameters token string The expired JWT. key string The signing key used to validate the token signature. Returns ClaimsPrincipal A ClaimsPrincipal representing the token subject. Exceptions SecurityTokenException Thrown if the token signature or algorithm is invalid. IsTokenExpired(string) Determines whether a JWT has expired based on its \"exp\" claim. public static bool IsTokenExpired(string jwt) Parameters jwt string Returns bool ParseClaimsFromJwt(string) Parses claims directly from a JWT string without signature validation. public static IReadOnlyList<Claim> ParseClaimsFromJwt(string jwt) Parameters jwt string The JWT string. Returns IReadOnlyList<Claim> A list of Claim parsed from the token payload."
  },
  "api/NuvTools.Security/NuvTools.Security.Helpers.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Helpers.html",
    "title": "Namespace NuvTools.Security.Helpers | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Helpers Classes CryptographyHelper Provides helper methods for computing cryptographic hashes. JwtHelper Provides helper methods for generating, parsing, and validating JSON Web Tokens (JWTs). Enums CryptographyHelper.HashAlgorithmType Supported hashing algorithms."
  },
  "api/NuvTools.Security/NuvTools.Security.Models.ClaimConstants.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Models.ClaimConstants.html",
    "title": "Class ClaimConstants | Nuv Tools Framework Docs",
    "summary": "Class ClaimConstants Namespace NuvTools.Security.Models Assembly NuvTools.Security.dll public static class ClaimConstants Inheritance object ClaimConstants Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Email public const string Email = \"email\" Field Value string FamilyName public const string FamilyName = \"family_name\" Field Value string GivenName public const string GivenName = \"given_name\" Field Value string PreferredUsername public const string PreferredUsername = \"preferred_username\" Field Value string Sub public const string Sub = \"sub\" Field Value string UniqueName public const string UniqueName = \"unique_name\" Field Value string Upn public const string Upn = \"upn\" Field Value string"
  },
  "api/NuvTools.Security/NuvTools.Security.Models.ClaimTypes.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Models.ClaimTypes.html",
    "title": "Class ClaimTypes | Nuv Tools Framework Docs",
    "summary": "Class ClaimTypes Namespace NuvTools.Security.Models Assembly NuvTools.Security.dll public static class ClaimTypes Inheritance object ClaimTypes Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields Permission The URI for a claim that specifies the permission, http://schemas.nuv.tools/ws/2021/10/identity/claims/permission. public const string Permission = \"http://schemas.nuv.tools/ws/2021/10/identity/claims/permission\" Field Value string"
  },
  "api/NuvTools.Security/NuvTools.Security.Models.html": {
    "href": "api/NuvTools.Security/NuvTools.Security.Models.html",
    "title": "Namespace NuvTools.Security.Models | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Security.Models Classes ClaimConstants ClaimTypes"
  },
  "api/NuvTools.Storage/NuvTools.Storage.AccessPermissions.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.AccessPermissions.html",
    "title": "Enum AccessPermissions | Nuv Tools Framework Docs",
    "summary": "Enum AccessPermissions Namespace NuvTools.Storage Assembly NuvTools.Storage.dll [Flags] public enum AccessPermissions Fields Add = 2 Permission to add messages, table entities, blobs, and files granted. All = 0 Complete access. Create = Read | Add Permission to create containers, blobs, shares, directories, and files granted. Delete = Add | Update Permission to delete resources granted. List = Read | Delete Permission to list blob containers, blobs, shares, directories, and files granted. Read = 1 Permission to read resources and list queues and tables granted. Update = 4 Permissions to update messages and table entities granted. Write = Read | Update Permission to write resources granted."
  },
  "api/NuvTools.Storage/NuvTools.Storage.Azure.AzureFileManager.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.Azure.AzureFileManager.html",
    "title": "Class AzureFileManager | Nuv Tools Framework Docs",
    "summary": "Class AzureFileManager Namespace NuvTools.Storage.Azure Assembly NuvTools.Storage.Azure.dll public class AzureFileManager : IFileManager Inheritance object AzureFileManager Implements IFileManager Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors AzureFileManager(BlobServiceClient, string) public AzureFileManager(BlobServiceClient serviceClient, string repositoryName) Parameters serviceClient BlobServiceClient repositoryName string AzureFileManager(string, string) public AzureFileManager(string connectionString, string repositoryName) Parameters connectionString string repositoryName string Properties Credencial protected BlobServiceClient Credencial { get; } Property Value BlobServiceClient Repository protected BlobContainerClient Repository { get; } Property Value BlobContainerClient Methods AddFileAsync(IFile, string?, CancellationToken) public Task<IFile> AddFileAsync(IFile file, string? rootDir = null, CancellationToken cancellationToken = default) Parameters file IFile rootDir string cancellationToken CancellationToken Returns Task<IFile> AddFilesAsync(IFile[], CancellationToken) public Task<IReadOnlyList<IFile>> AddFilesAsync(IFile[] files, CancellationToken cancellationToken = default) Parameters files IFile[] cancellationToken CancellationToken Returns Task<IReadOnlyList<IFile>> AddFilesAsync(string, IFile[], CancellationToken) public Task<IReadOnlyList<IFile>> AddFilesAsync(string rootDir, IFile[] files, CancellationToken cancellationToken = default) Parameters rootDir string files IFile[] cancellationToken CancellationToken Returns Task<IReadOnlyList<IFile>> FileExistsAsync(string, CancellationToken) public Task<bool> FileExistsAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<bool> GetAccessRepositoryUri(AccessPermissions) public Uri GetAccessRepositoryUri(AccessPermissions permissions = AccessPermissions.Read) Parameters permissions AccessPermissions Returns Uri GetFileAsync(string, bool, CancellationToken) public Task<IFile?> GetFileAsync(string id, bool download = false, CancellationToken cancellationToken = default) Parameters id string download bool cancellationToken CancellationToken Returns Task<IFile> GetFilesAsync(int?, CancellationToken) public Task<IReadOnlyList<IFile>> GetFilesAsync(int? pageSize, CancellationToken cancellationToken = default) Parameters pageSize int? cancellationToken CancellationToken Returns Task<IReadOnlyList<IFile>> RemoveFileAsync(string, CancellationToken) public Task RemoveFileAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task"
  },
  "api/NuvTools.Storage/NuvTools.Storage.Azure.Security.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.Azure.Security.html",
    "title": "Class Security | Nuv Tools Framework Docs",
    "summary": "Class Security Namespace NuvTools.Storage.Azure Assembly NuvTools.Storage.Azure.dll public class Security Inheritance object Security Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Constructors Security() public Security() Methods GetAccessAccountToken(string, string, AccessPermissions) public static string GetAccessAccountToken(string accountName, string accountKey, AccessPermissions permissions = AccessPermissions.Read) Parameters accountName string accountKey string permissions AccessPermissions Returns string"
  },
  "api/NuvTools.Storage/NuvTools.Storage.Azure.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.Azure.html",
    "title": "Namespace NuvTools.Storage.Azure | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Storage.Azure Classes AzureFileManager Security"
  },
  "api/NuvTools.Storage/NuvTools.Storage.File.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.File.html",
    "title": "Class File | Nuv Tools Framework Docs",
    "summary": "Class File Namespace NuvTools.Storage Assembly NuvTools.Storage.dll public class File : IFile Inheritance object File Implements IFile Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods FileExtensions.Base64StringFromContent(IFile) FileExtensions.ContentFromBase64String(IFile) Constructors File(string, string, Stream) public File(string name, string type, Stream content) Parameters name string type string content Stream File(string, string, string) public File(string name, string type, string base64String) Parameters name string type string base64String string File(string, string, Uri) public File(string name, string type, Uri uri) Parameters name string type string uri Uri Properties Base64String public string? Base64String { get; } Property Value string Content public Stream? Content { get; } Property Value Stream Name public string Name { get; } Property Value string Type public string Type { get; } Property Value string Uri public Uri? Uri { get; } Property Value Uri"
  },
  "api/NuvTools.Storage/NuvTools.Storage.FileExtensions.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.FileExtensions.html",
    "title": "Class FileExtensions | Nuv Tools Framework Docs",
    "summary": "Class FileExtensions Namespace NuvTools.Storage Assembly NuvTools.Storage.dll public static class FileExtensions Inheritance object FileExtensions Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods Base64StringFromContent(IFile) public static string? Base64StringFromContent(this IFile value) Parameters value IFile Returns string ContentFromBase64String(IFile) public static Stream? ContentFromBase64String(this IFile value) Parameters value IFile Returns Stream"
  },
  "api/NuvTools.Storage/NuvTools.Storage.FileHelper.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.FileHelper.html",
    "title": "Class FileHelper | Nuv Tools Framework Docs",
    "summary": "Class FileHelper Namespace NuvTools.Storage Assembly NuvTools.Storage.dll public static class FileHelper Inheritance object FileHelper Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods GetFileName(string) public static string GetFileName(string name) Parameters name string Returns string"
  },
  "api/NuvTools.Storage/NuvTools.Storage.IFile.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.IFile.html",
    "title": "Interface IFile | Nuv Tools Framework Docs",
    "summary": "Interface IFile Namespace NuvTools.Storage Assembly NuvTools.Storage.dll public interface IFile Extension Methods FileExtensions.Base64StringFromContent(IFile) FileExtensions.ContentFromBase64String(IFile) Properties Base64String string? Base64String { get; } Property Value string Content Stream? Content { get; } Property Value Stream Name string Name { get; } Property Value string Type string Type { get; } Property Value string Uri Uri? Uri { get; } Property Value Uri"
  },
  "api/NuvTools.Storage/NuvTools.Storage.IFileManager.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.IFileManager.html",
    "title": "Interface IFileManager | Nuv Tools Framework Docs",
    "summary": "Interface IFileManager Namespace NuvTools.Storage Assembly NuvTools.Storage.dll public interface IFileManager Methods AddFileAsync(IFile, string?, CancellationToken) Task<IFile> AddFileAsync(IFile file, string? rootDir = null, CancellationToken cancellationToken = default) Parameters file IFile rootDir string cancellationToken CancellationToken Returns Task<IFile> AddFilesAsync(IFile[], CancellationToken) Task<IReadOnlyList<IFile>> AddFilesAsync(IFile[] files, CancellationToken cancellationToken = default) Parameters files IFile[] cancellationToken CancellationToken Returns Task<IReadOnlyList<IFile>> AddFilesAsync(string, IFile[], CancellationToken) Task<IReadOnlyList<IFile>> AddFilesAsync(string rootDir, IFile[] files, CancellationToken cancellationToken = default) Parameters rootDir string files IFile[] cancellationToken CancellationToken Returns Task<IReadOnlyList<IFile>> FileExistsAsync(string, CancellationToken) Task<bool> FileExistsAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<bool> GetAccessRepositoryUri(AccessPermissions) Uri GetAccessRepositoryUri(AccessPermissions permissions = AccessPermissions.Read) Parameters permissions AccessPermissions Returns Uri GetFileAsync(string, bool, CancellationToken) Task<IFile?> GetFileAsync(string id, bool download = false, CancellationToken cancellationToken = default) Parameters id string download bool cancellationToken CancellationToken Returns Task<IFile> GetFilesAsync(int?, CancellationToken) Task<IReadOnlyList<IFile>> GetFilesAsync(int? pageSize, CancellationToken cancellationToken = default) Parameters pageSize int? cancellationToken CancellationToken Returns Task<IReadOnlyList<IFile>> RemoveFileAsync(string, CancellationToken) Task RemoveFileAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task"
  },
  "api/NuvTools.Storage/NuvTools.Storage.html": {
    "href": "api/NuvTools.Storage/NuvTools.Storage.html",
    "title": "Namespace NuvTools.Storage | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Storage Classes File FileExtensions FileHelper Interfaces IFile IFileManager Enums AccessPermissions"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityBaseAttribute.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityBaseAttribute.html",
    "title": "Class PasswordComplexityBaseAttribute | Nuv Tools Framework Docs",
    "summary": "Class PasswordComplexityBaseAttribute Namespace NuvTools.Validation.Annotations Assembly NuvTools.Validation.dll public abstract class PasswordComplexityBaseAttribute : ValidationAttribute Inheritance object Attribute ValidationAttribute PasswordComplexityBaseAttribute Derived PasswordComplexityCapitalLettersAttribute PasswordComplexityDigitsAttribute PasswordComplexityLowerCaseLettersAttribute Inherited Members ValidationAttribute.IsValid(object) ValidationAttribute.IsValid(object, ValidationContext) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Validator.Validate<T>(T) Constructors PasswordComplexityBaseAttribute(int, Func<string>) protected PasswordComplexityBaseAttribute(int minOccurrences, Func<string> errorMessageAccessor) Parameters minOccurrences int errorMessageAccessor Func<string> Properties MinOccurrences public int MinOccurrences { get; } Property Value int Methods EnsureLegalMinOcorrences() Checks that MinOccurrences has a legal value. protected void EnsureLegalMinOcorrences() Exceptions InvalidOperationException MinOccurrences is zero or less than negative one. FormatErrorMessage(string) Applies formatting to a specified error message. (Overrides FormatErrorMessage(string)) public override string FormatErrorMessage(string name) Parameters name string The name to include in the formatted string. Returns string A localized string to describe the minimal occurrences of capital letters. IsValidValue(object?) protected static bool IsValidValue(object? value) Parameters value object Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityCapitalLettersAttribute.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityCapitalLettersAttribute.html",
    "title": "Class PasswordComplexityCapitalLettersAttribute | Nuv Tools Framework Docs",
    "summary": "Class PasswordComplexityCapitalLettersAttribute Namespace NuvTools.Validation.Annotations Assembly NuvTools.Validation.dll public class PasswordComplexityCapitalLettersAttribute : PasswordComplexityBaseAttribute Inheritance object Attribute ValidationAttribute PasswordComplexityBaseAttribute PasswordComplexityCapitalLettersAttribute Inherited Members PasswordComplexityBaseAttribute.FormatErrorMessage(string) PasswordComplexityBaseAttribute.EnsureLegalMinOcorrences() PasswordComplexityBaseAttribute.IsValidValue(object) PasswordComplexityBaseAttribute.MinOccurrences ValidationAttribute.IsValid(object, ValidationContext) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Validator.Validate<T>(T) Constructors PasswordComplexityCapitalLettersAttribute(int) public PasswordComplexityCapitalLettersAttribute(int minOccurrences) Parameters minOccurrences int Methods IsValid(object?) public override bool IsValid(object? value) Parameters value object Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityDigitsAttribute.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityDigitsAttribute.html",
    "title": "Class PasswordComplexityDigitsAttribute | Nuv Tools Framework Docs",
    "summary": "Class PasswordComplexityDigitsAttribute Namespace NuvTools.Validation.Annotations Assembly NuvTools.Validation.dll public class PasswordComplexityDigitsAttribute : PasswordComplexityBaseAttribute Inheritance object Attribute ValidationAttribute PasswordComplexityBaseAttribute PasswordComplexityDigitsAttribute Inherited Members PasswordComplexityBaseAttribute.FormatErrorMessage(string) PasswordComplexityBaseAttribute.EnsureLegalMinOcorrences() PasswordComplexityBaseAttribute.IsValidValue(object) PasswordComplexityBaseAttribute.MinOccurrences ValidationAttribute.IsValid(object, ValidationContext) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Validator.Validate<T>(T) Constructors PasswordComplexityDigitsAttribute(int) public PasswordComplexityDigitsAttribute(int minOccurrences) Parameters minOccurrences int Methods IsValid(object?) public override bool IsValid(object? value) Parameters value object Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityLowerCaseLettersAttribute.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Annotations.PasswordComplexityLowerCaseLettersAttribute.html",
    "title": "Class PasswordComplexityLowerCaseLettersAttribute | Nuv Tools Framework Docs",
    "summary": "Class PasswordComplexityLowerCaseLettersAttribute Namespace NuvTools.Validation.Annotations Assembly NuvTools.Validation.dll public class PasswordComplexityLowerCaseLettersAttribute : PasswordComplexityBaseAttribute Inheritance object Attribute ValidationAttribute PasswordComplexityBaseAttribute PasswordComplexityLowerCaseLettersAttribute Inherited Members PasswordComplexityBaseAttribute.FormatErrorMessage(string) PasswordComplexityBaseAttribute.EnsureLegalMinOcorrences() PasswordComplexityBaseAttribute.IsValidValue(object) PasswordComplexityBaseAttribute.MinOccurrences ValidationAttribute.IsValid(object, ValidationContext) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Validator.Validate<T>(T) Constructors PasswordComplexityLowerCaseLettersAttribute(int) public PasswordComplexityLowerCaseLettersAttribute(int minOccurrences) Parameters minOccurrences int Methods IsValid(object?) public override bool IsValid(object? value) Parameters value object Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Annotations.StringValueBaseAttribute.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Annotations.StringValueBaseAttribute.html",
    "title": "Class StringValueBaseAttribute | Nuv Tools Framework Docs",
    "summary": "Class StringValueBaseAttribute Namespace NuvTools.Validation.Annotations Assembly NuvTools.Validation.dll public class StringValueBaseAttribute : ValidationAttribute Inheritance object Attribute ValidationAttribute StringValueBaseAttribute Derived CNPJAttribute CPFAttribute Inherited Members ValidationAttribute.IsValid(object) ValidationAttribute.IsValid(object, ValidationContext) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Validator.Validate<T>(T) Constructors StringValueBaseAttribute(Func<string>) public StringValueBaseAttribute(Func<string> errorMessageAccessor) Parameters errorMessageAccessor Func<string> Methods FormatErrorMessage(string) Applies formatting to a specified error message. (Overrides FormatErrorMessage(string)) public override string FormatErrorMessage(string name) Parameters name string The name to include in the formatted string. Returns string A localized string to describe the minimal occurrences of capital letters. IsValidValue(object?) protected static bool IsValidValue(object? value) Parameters value object Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Annotations.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Annotations.html",
    "title": "Namespace NuvTools.Validation.Annotations | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Validation.Annotations Classes PasswordComplexityBaseAttribute PasswordComplexityCapitalLettersAttribute PasswordComplexityDigitsAttribute PasswordComplexityLowerCaseLettersAttribute StringValueBaseAttribute"
  },
  "api/NuvTools.Validation/NuvTools.Validation.AspNetCore.Blazor.FluentValidation-1.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.AspNetCore.Blazor.FluentValidation-1.html",
    "title": "Class FluentValidation<TModel> | Nuv Tools Framework Docs",
    "summary": "Class FluentValidation<TModel> Namespace NuvTools.Validation.AspNetCore.Blazor Assembly NuvTools.Validation.AspNetCore.Blazor.dll public class FluentValidation<TModel> where TModel : class, new() Type Parameters TModel Inheritance object FluentValidation<TModel> Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Validator.Validate<T>(T) Constructors FluentValidation(TModel, IValidator<TModel>, EditContext, bool, bool, bool) public FluentValidation(TModel model, IValidator<TModel> validator, EditContext editContext, bool autoValidationOnRequested = true, bool autoValidationOnFieldChanged = true, bool highlightInvalidFields = true) Parameters model TModel validator IValidator<TModel> editContext EditContext autoValidationOnRequested bool autoValidationOnFieldChanged bool highlightInvalidFields bool Methods Validate(bool) public ValidationResult Validate(bool highlightInvalidFields = true) Parameters highlightInvalidFields bool Returns ValidationResult ValidateField(FieldIdentifier, bool) public void ValidateField(FieldIdentifier fieldIdentifier, bool highlightInvalidField = true) Parameters fieldIdentifier FieldIdentifier highlightInvalidField bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.AspNetCore.Blazor.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.AspNetCore.Blazor.html",
    "title": "Namespace NuvTools.Validation.AspNetCore.Blazor | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Validation.AspNetCore.Blazor Classes FluentValidation<TModel>"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Brazil.Annotations.CNPJAttribute.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Brazil.Annotations.CNPJAttribute.html",
    "title": "Class CNPJAttribute | Nuv Tools Framework Docs",
    "summary": "Class CNPJAttribute Namespace NuvTools.Validation.Brazil.Annotations Assembly NuvTools.Validation.dll public class CNPJAttribute : StringValueBaseAttribute Inheritance object Attribute ValidationAttribute StringValueBaseAttribute CNPJAttribute Inherited Members StringValueBaseAttribute.FormatErrorMessage(string) StringValueBaseAttribute.IsValidValue(object) ValidationAttribute.IsValid(object, ValidationContext) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Validator.Validate<T>(T) Constructors CNPJAttribute() public CNPJAttribute() Methods IsValid(object?) public override bool IsValid(object? value) Parameters value object Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Brazil.Annotations.CPFAttribute.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Brazil.Annotations.CPFAttribute.html",
    "title": "Class CPFAttribute | Nuv Tools Framework Docs",
    "summary": "Class CPFAttribute Namespace NuvTools.Validation.Brazil.Annotations Assembly NuvTools.Validation.dll public class CPFAttribute : StringValueBaseAttribute Inheritance object Attribute ValidationAttribute StringValueBaseAttribute CPFAttribute Inherited Members StringValueBaseAttribute.FormatErrorMessage(string) StringValueBaseAttribute.IsValidValue(object) ValidationAttribute.IsValid(object, ValidationContext) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Extension Methods Validator.Validate<T>(T) Constructors CPFAttribute() public CPFAttribute() Methods IsValid(object?) public override bool IsValid(object? value) Parameters value object Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Brazil.Annotations.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Brazil.Annotations.html",
    "title": "Namespace NuvTools.Validation.Brazil.Annotations | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Validation.Brazil.Annotations Classes CNPJAttribute CPFAttribute"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Brazil.Format.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Brazil.Format.html",
    "title": "Class Format | Nuv Tools Framework Docs",
    "summary": "Class Format Namespace NuvTools.Validation.Brazil Assembly NuvTools.Validation.dll public static class Format Inheritance object Format Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods FormatCNPJ(string) public static string FormatCNPJ(this string cnpj) Parameters cnpj string Returns string FormatCPF(string) public static string FormatCPF(this string cpf) Parameters cpf string Returns string"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Brazil.RegexPattern.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Brazil.RegexPattern.html",
    "title": "Class RegexPattern | Nuv Tools Framework Docs",
    "summary": "Class RegexPattern Namespace NuvTools.Validation.Brazil Assembly NuvTools.Validation.dll Regex patterns class. public static class RegexPattern Inheritance object RegexPattern Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields MobileNumber Regex pattern for mobile phone validation. public const string MobileNumber = \"(?<CodeArea>11|12|13|14|15|16|17|18|19|21|22|24|27|28|31|32|33|34|35|37|38|41|42|43|44|45|46|47|48|49|51|53|54|55|61|62|63|64|65|66|67|68|69|71|73|74|75|77|79|81|82|83|84|85|86|87|88|89|91|92|93|94|95|96|97|98|99)(?<FirstDigit>9)(?<Number>\\\\d{8})\" Field Value string"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Brazil.Validator.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Brazil.Validator.html",
    "title": "Class Validator | Nuv Tools Framework Docs",
    "summary": "Class Validator Namespace NuvTools.Validation.Brazil Assembly NuvTools.Validation.dll Responsible for validating rules used in Brazil. public static class Validator Inheritance object Validator Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods IsCNPJ(string) Validates a CNPJ. public static bool IsCNPJ(this string value) Parameters value string Enter a CNPJ. Returns bool Whether CNPJ is valid or not. IsCPF(string) Validates a CPF. public static bool IsCPF(this string value) Parameters value string Enter a CPF. Returns bool Whether CPF is valid or not. IsCPForCNPJ(string) Validates a CPF or CNPJ. public static bool IsCPForCNPJ(this string value) Parameters value string Enter a CPF or CNPJ. Returns bool Whether CPF or CNPJ is valid or not. IsMobileNumber(string, bool) Validates a mobile phone number based on a specific regex pattern. The method checks if the phone number contains a valid Brazilian Code Area, followed by the digit 9 and then exactly eight digits. public static bool IsMobileNumber(this string mobileNumber, bool clearMask = true) Parameters mobileNumber string Mobile number. clearMask bool Clear mask before validate. Returns bool IsZipCodeNumber(string) Validates Zip Code number public static bool IsZipCodeNumber(this string zipCode) Parameters zipCode string Zip Code. Returns bool"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Brazil.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Brazil.html",
    "title": "Namespace NuvTools.Validation.Brazil | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Validation.Brazil Classes Format RegexPattern Regex patterns class. Validator Responsible for validating rules used in Brazil."
  },
  "api/NuvTools.Validation/NuvTools.Validation.RegexPattern.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.RegexPattern.html",
    "title": "Class RegexPattern | Nuv Tools Framework Docs",
    "summary": "Class RegexPattern Namespace NuvTools.Validation Assembly NuvTools.Validation.dll Regex patterns class. public static class RegexPattern Inheritance object RegexPattern Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Fields BASE64_CONTENT Regex to validate Base64 and extract using content label. public const string BASE64_CONTENT = \"^(?<content>(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4}))$\" Field Value string BASE64_DATAURI Regex to validate and extract informations (type, extension and content) from Data URI Base64. public const string BASE64_DATAURI = \"^data:(?<type>.+?/(?<extension>.+?));(?<base>.+),(?<content>(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4}))$\" Field Value string EMAIL_ADDRESS Regex pattern for e-mail address validation. public const string EMAIL_ADDRESS = \"^([a-z0-9_\\\\-])([a-z0-9_\\\\-\\\\.]*)@(\\\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\\\.){3}|((([a-z0-9\\\\-]+)\\\\.)+))([a-z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\\\])$\" Field Value string"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Resources.Messages.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Resources.Messages.html",
    "title": "Class Messages | Nuv Tools Framework Docs",
    "summary": "Class Messages Namespace NuvTools.Validation.Resources Assembly NuvTools.Validation.dll A strongly-typed resource class, for looking up localized strings, etc. public class Messages Inheritance object Messages Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Extension Methods Validator.Validate<T>(T) Properties Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. public static CultureInfo Culture { get; set; } Property Value CultureInfo InvalidValue Looks up a localized string similar to Invalid value.. public static string InvalidValue { get; } Property Value string ResourceManager Returns the cached ResourceManager instance used by this class. public static ResourceManager ResourceManager { get; } Property Value ResourceManager XInvalid Looks up a localized string similar to {0} is invalid.. public static string XInvalid { get; } Property Value string XMustContainAtLeastYCapitalLetters Looks up a localized string similar to The {0} must contain at least {1} capital letter(s).. public static string XMustContainAtLeastYCapitalLetters { get; } Property Value string XMustContainAtLeastYDigits Looks up a localized string similar to The {0} must contain at least {1} digit(s).. public static string XMustContainAtLeastYDigits { get; } Property Value string XMustContainAtLeastYLowerCaseLetters Looks up a localized string similar to The {0} must contain at least {1} lower case letter(s).. public static string XMustContainAtLeastYLowerCaseLetters { get; } Property Value string"
  },
  "api/NuvTools.Validation/NuvTools.Validation.Resources.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Resources.html",
    "title": "Namespace NuvTools.Validation.Resources | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Validation.Resources Classes Messages A strongly-typed resource class, for looking up localized strings, etc."
  },
  "api/NuvTools.Validation/NuvTools.Validation.Validator.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.Validator.html",
    "title": "Class Validator | Nuv Tools Framework Docs",
    "summary": "Class Validator Namespace NuvTools.Validation Assembly NuvTools.Validation.dll Validators's class. public static class Validator Inheritance object Validator Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods HasNumbersOnly(string) Checks if the provided string contains only numeric characters. public static bool HasNumbersOnly(this string input) Parameters input string The string to check. Returns bool True if the input contains only numeric characters, otherwise false. IsDecimalNumber(string, bool, IFormatProvider?) Checks if the provided string represents a valid decimal number. public static bool IsDecimalNumber(this string input, bool positiveOnly = false, IFormatProvider? provider = null) Parameters input string The string to check. positiveOnly bool If only positive numbers is valid. provider IFormatProvider An object that supplies culture-specific parsing information about s. Returns bool True if the input is a valid decimal number, otherwise false. IsEmail(string) Validate the e-mail address. public static bool IsEmail(this string value) Parameters value string E-mail address Returns bool IsIntNumber(string, bool) Checks if the provided string represents a long type number. public static bool IsIntNumber(this string input, bool positiveOnly = false) Parameters input string The string to check. positiveOnly bool If only positive numbers is valid. Returns bool True if the input is a whole number, otherwise false. IsLongNumber(string, bool) Checks if the provided string represents a long type number. public static bool IsLongNumber(this string input, bool positiveOnly = false) Parameters input string The string to check. positiveOnly bool If only positive numbers is valid. Returns bool True if the input is a whole number, otherwise false. Validate<T>(T) public static List<string>? Validate<T>(this T obj) Parameters obj T Returns List<string> Type Parameters T"
  },
  "api/NuvTools.Validation/NuvTools.Validation.html": {
    "href": "api/NuvTools.Validation/NuvTools.Validation.html",
    "title": "Namespace NuvTools.Validation | Nuv Tools Framework Docs",
    "summary": "Namespace NuvTools.Validation Classes RegexPattern Regex patterns class. Validator Validators's class."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Nuv Tools Framework Docs",
    "summary": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction | Nuv Tools Framework Docs",
    "summary": "Introduction Here you will find the libraries of the Nuv Tools framework, which aim to assist in the development of cross-platform .NET applications. Nuv Tools Common Library Common library for Web, Desktop and Mobile (MAUI) applications. NuvTools.Data Library containg helpers to manipulate data. NuvTools.Data.EntityFrameworkCore Library containg helpers to manipulate data using Entity Framework Core. NuvTools.Data.EntityFrameworkCore.SqlServer Library containg helpers to manipulate data using Entity Framework Core for SQL Server. Nuv Tools Resources for .NET Contains the common resources for using in the libraries and projects of Nuv Tools. NuvTools.AspNetCore Common library with helpers to use with ASP.NET Aplications. NuvTools.AspNetCore.EntityFramework EntityFramework Core helper library to use with ASP.NET Aplications. NuvTools.Notification.Mail Use the NuvTools.Notification.Mail library and the NuvTools.Notification.Mail.Smtp as infrastructure. NuvTools.Report Report base library to support PDF and Sheet infrastructure libraries. NuvTools.Report.Sheet Helper report library to work with Excel/CSV. NuvTools.Report.Pdf Helper report library to work with PDF. NuvTools.Security.Models Library Contains models to be used by security modules. NuvTools.Security.AspNetCore Library Common library for security purposes in ASP.NET Core. NuvTools.Security Library Common library for security purposes. NuvTools.Security.Identity.Models Contains models to be used with ASP.NET Identity modules. NuvTools.Security.Identity.AspNetCore Library to use with ASP.NET Identity modules on server-side. NuvTools.Security.Identity Helper library to be used with ASP.NET Identity. NuvTools.Storage Contains base and helper classes to manipulate storages such as Microsoft Azure Storage. NuvTools.Storage.Azure Contains helper classes to manipulate Microsoft Azure Storage. Nuv Tools Validation Library Validation library for Web, Desktop and Mobile (MAUI) applications."
  },
  "instructions.html": {
    "href": "instructions.html",
    "title": "| Nuv Tools Framework Docs",
    "summary": "dotnet tool install -g docfx Remove the _site and api folder docfx metadata docfx.json docfx build docfx.json --serve"
  }
}