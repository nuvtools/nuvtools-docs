### YamlMime:ManagedReference
items:
- uid: NuvTools.Common.RegularExpressions.RegexExtensions
  commentId: T:NuvTools.Common.RegularExpressions.RegexExtensions
  id: RegexExtensions
  parent: NuvTools.Common.RegularExpressions
  children:
  - NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  langs:
  - csharp
  - vb
  name: RegexExtensions
  nameWithType: RegexExtensions
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions
  type: Class
  source:
    href: https://github.com/nuvtools/nuvtools-common/blob/aa990821ee74894d4e5db5af04128c16e76a699e/src/NuvTools.Common/RegularExpressions/RegexExtensions.cs
  assemblies:
  - NuvTools.Common
  namespace: NuvTools.Common.RegularExpressions
  summary: Provides extension methods for simplifying common <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> operations on <xref href="System.String" data-throw-if-not-resolved="false"></xref> values.
  example: []
  syntax:
    content: public static class RegexExtensions
    content.vb: Public Module RegexExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  isExtensionMethod: true
  parent: NuvTools.Common.RegularExpressions.RegexExtensions
  langs:
  - csharp
  - vb
  name: Match(string?, string, RegexOptions)
  nameWithType: RegexExtensions.Match(string?, string, RegexOptions)
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions.Match(string?, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-common/blob/aa990821ee74894d4e5db5af04128c16e76a699e/src/NuvTools.Common/RegularExpressions/RegexExtensions.cs
  assemblies:
  - NuvTools.Common
  namespace: NuvTools.Common.RegularExpressions
  summary: Searches the specified input string for the first occurrence of a regular expression pattern.
  example: []
  syntax:
    content: public static Match Match(this string? value, string pattern, RegexOptions options = RegexOptions.None)
    parameters:
    - id: value
      type: System.String
      description: The input string to search. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, returns an empty <xref href="NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String%2cSystem.String%2cSystem.Text.RegularExpressions.RegexOptions)" data-throw-if-not-resolved="false"></xref>.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: Optional <xref href="System.Text.RegularExpressions.RegexOptions" data-throw-if-not-resolved="false"></xref> to modify the search behavior. Default is <xref href="System.Text.RegularExpressions.RegexOptions.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Text.RegularExpressions.Match
      description: >-
        A <xref href="NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String%2cSystem.String%2cSystem.Text.RegularExpressions.RegexOptions)" data-throw-if-not-resolved="false"></xref> object containing information about the first match found in <code class="paramref">value</code>.

        If <code class="paramref">value</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, returns an empty match.
    content.vb: Public Shared Function Match(value As String, pattern As String, options As RegexOptions = RegexOptions.None) As Match
  overload: NuvTools.Common.RegularExpressions.RegexExtensions.Match*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">pattern</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty.
  nameWithType.vb: RegexExtensions.Match(String, String, RegexOptions)
  fullName.vb: NuvTools.Common.RegularExpressions.RegexExtensions.Match(String, String, System.Text.RegularExpressions.RegexOptions)
  name.vb: Match(String, String, RegexOptions)
- uid: NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  isExtensionMethod: true
  parent: NuvTools.Common.RegularExpressions.RegexExtensions
  langs:
  - csharp
  - vb
  name: IsMatch(string?, string, RegexOptions)
  nameWithType: RegexExtensions.IsMatch(string?, string, RegexOptions)
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch(string?, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-common/blob/aa990821ee74894d4e5db5af04128c16e76a699e/src/NuvTools.Common/RegularExpressions/RegexExtensions.cs
  assemblies:
  - NuvTools.Common
  namespace: NuvTools.Common.RegularExpressions
  summary: Determines whether the specified regular expression finds a match in the input string.
  example: []
  syntax:
    content: public static bool IsMatch(this string? value, string pattern, RegexOptions options = RegexOptions.IgnoreCase)
    parameters:
    - id: value
      type: System.String
      description: The input string to search. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: >-
        Optional <xref href="System.Text.RegularExpressions.RegexOptions" data-throw-if-not-resolved="false"></xref> to modify the search behavior.

        Default is <xref href="System.Text.RegularExpressions.RegexOptions.IgnoreCase" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the regular expression finds a match; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function IsMatch(value As String, pattern As String, options As RegexOptions = RegexOptions.IgnoreCase) As Boolean
  overload: NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">pattern</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty.
  nameWithType.vb: RegexExtensions.IsMatch(String, String, RegexOptions)
  fullName.vb: NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch(String, String, System.Text.RegularExpressions.RegexOptions)
  name.vb: IsMatch(String, String, RegexOptions)
- uid: NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: ReplacePattern(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  isExtensionMethod: true
  parent: NuvTools.Common.RegularExpressions.RegexExtensions
  langs:
  - csharp
  - vb
  name: ReplacePattern(string?, string, string, RegexOptions)
  nameWithType: RegexExtensions.ReplacePattern(string?, string, string, RegexOptions)
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern(string?, string, string, System.Text.RegularExpressions.RegexOptions)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-common/blob/aa990821ee74894d4e5db5af04128c16e76a699e/src/NuvTools.Common/RegularExpressions/RegexExtensions.cs
  assemblies:
  - NuvTools.Common
  namespace: NuvTools.Common.RegularExpressions
  summary: Replaces all occurrences of a specified regular expression pattern in the input string with a replacement string.
  example: []
  syntax:
    content: public static string? ReplacePattern(this string? value, string pattern, string newValue, RegexOptions options = RegexOptions.None)
    parameters:
    - id: value
      type: System.String
      description: The input string to modify. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, returns an empty string.
    - id: pattern
      type: System.String
      description: The regular expression pattern to match.
    - id: newValue
      type: System.String
      description: The replacement string. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, it is treated as an empty string.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: Optional <xref href="System.Text.RegularExpressions.RegexOptions" data-throw-if-not-resolved="false"></xref> to modify the search behavior. Default is <xref href="System.Text.RegularExpressions.RegexOptions.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
      description: >-
        A new string that is identical to the input string except that all instances of <code class="paramref">pattern</code>

        have been replaced with <code class="paramref">newValue</code>.
    content.vb: Public Shared Function ReplacePattern(value As String, pattern As String, newValue As String, options As RegexOptions = RegexOptions.None) As String
  overload: NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">pattern</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty.
  nameWithType.vb: RegexExtensions.ReplacePattern(String, String, String, RegexOptions)
  fullName.vb: NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern(String, String, String, System.Text.RegularExpressions.RegexOptions)
  name.vb: ReplacePattern(String, String, String, RegexOptions)
references:
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NuvTools.Common.RegularExpressions
  commentId: N:NuvTools.Common.RegularExpressions
  isExternal: true
  href: NuvTools.html
  name: NuvTools.Common.RegularExpressions
  nameWithType: NuvTools.Common.RegularExpressions
  fullName: NuvTools.Common.RegularExpressions
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Common
    name: Common
    isExternal: true
    href: NuvTools.Common.html
  - name: .
  - uid: NuvTools.Common.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: NuvTools.Common.RegularExpressions.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Common
    name: Common
    isExternal: true
    href: NuvTools.Common.html
  - name: .
  - uid: NuvTools.Common.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: NuvTools.Common.RegularExpressions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  isExternal: true
  href: NuvTools.Common.RegularExpressions.RegexExtensions.html#NuvTools_Common_RegularExpressions_RegexExtensions_Match_System_String_System_String_System_Text_RegularExpressions_RegexOptions_
  name: Match(string, string, RegexOptions)
  nameWithType: RegexExtensions.Match(string, string, RegexOptions)
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions.Match(string, string, System.Text.RegularExpressions.RegexOptions)
  nameWithType.vb: RegexExtensions.Match(String, String, RegexOptions)
  fullName.vb: NuvTools.Common.RegularExpressions.RegexExtensions.Match(String, String, System.Text.RegularExpressions.RegexOptions)
  name.vb: Match(String, String, RegexOptions)
  spec.csharp:
  - uid: NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
    name: Match
    isExternal: true
    href: NuvTools.Common.RegularExpressions.RegexExtensions.html#NuvTools_Common_RegularExpressions_RegexExtensions_Match_System_String_System_String_System_Text_RegularExpressions_RegexOptions_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.RegularExpressions.RegexOptions
    name: RegexOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regexoptions
  - name: )
  spec.vb:
  - uid: NuvTools.Common.RegularExpressions.RegexExtensions.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
    name: Match
    isExternal: true
    href: NuvTools.Common.RegularExpressions.RegexExtensions.html#NuvTools_Common_RegularExpressions_RegexExtensions_Match_System_String_System_String_System_Text_RegularExpressions_RegexOptions_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.RegularExpressions.RegexOptions
    name: RegexOptions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regexoptions
  - name: )
- uid: System.Text.RegularExpressions.RegexOptions
  commentId: T:System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regexoptions
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Text.RegularExpressions.RegexOptions.None
  commentId: F:System.Text.RegularExpressions.RegexOptions.None
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regexoptions#system-text-regularexpressions-regexoptions-none
  name: None
  nameWithType: RegexOptions.None
  fullName: System.Text.RegularExpressions.RegexOptions.None
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NuvTools.Common.RegularExpressions.RegexExtensions.Match*
  commentId: Overload:NuvTools.Common.RegularExpressions.RegexExtensions.Match
  isExternal: true
  href: NuvTools.Common.RegularExpressions.RegexExtensions.html#NuvTools_Common_RegularExpressions_RegexExtensions_Match_System_String_System_String_System_Text_RegularExpressions_RegexOptions_
  name: Match
  nameWithType: RegexExtensions.Match
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions.Match
- uid: System.Text.RegularExpressions.Match
  commentId: T:System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.match
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: System.Text.RegularExpressions.RegexOptions.IgnoreCase
  commentId: F:System.Text.RegularExpressions.RegexOptions.IgnoreCase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regexoptions#system-text-regularexpressions-regexoptions-ignorecase
  name: IgnoreCase
  nameWithType: RegexOptions.IgnoreCase
  fullName: System.Text.RegularExpressions.RegexOptions.IgnoreCase
- uid: NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch*
  commentId: Overload:NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch
  isExternal: true
  href: NuvTools.Common.RegularExpressions.RegexExtensions.html#NuvTools_Common_RegularExpressions_RegexExtensions_IsMatch_System_String_System_String_System_Text_RegularExpressions_RegexOptions_
  name: IsMatch
  nameWithType: RegexExtensions.IsMatch
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions.IsMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern*
  commentId: Overload:NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern
  isExternal: true
  href: NuvTools.Common.RegularExpressions.RegexExtensions.html#NuvTools_Common_RegularExpressions_RegexExtensions_ReplacePattern_System_String_System_String_System_String_System_Text_RegularExpressions_RegexOptions_
  name: ReplacePattern
  nameWithType: RegexExtensions.ReplacePattern
  fullName: NuvTools.Common.RegularExpressions.RegexExtensions.ReplacePattern
