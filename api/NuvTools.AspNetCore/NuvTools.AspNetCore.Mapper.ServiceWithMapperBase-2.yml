### YamlMime:ManagedReference
items:
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  commentId: T:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  id: ServiceWithMapperBase`2
  parent: NuvTools.AspNetCore.Mapper
  children:
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.#ctor(AutoMapper.IMapper)
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(System.Collections.Generic.IEnumerable{`1})
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(System.Collections.Generic.IList{`1})
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(`1)
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(`1[])
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToEntity(`0)
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo``1(System.Collections.Generic.IEnumerable{`1})
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo``1(`1)
  - NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.Mapper
  langs:
  - csharp
  - vb
  name: ServiceWithMapperBase<TDTO, TEntity>
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>
  type: Class
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: 'public abstract class ServiceWithMapperBase<TDTO, TEntity> where TDTO : class where TEntity : class'
    typeParameters:
    - id: TDTO
    - id: TEntity
    content.vb: Public MustInherit Class ServiceWithMapperBase(Of TDTO As Class, TEntity As Class)
  inheritance:
  - System.Object
  derivedClasses:
  - NuvTools.AspNetCore.EntityFrameworkCore.Mapper.ServiceWithCrudBase`4
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity)
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity)
  name.vb: ServiceWithMapperBase(Of TDTO, TEntity)
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.#ctor(AutoMapper.IMapper)
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.#ctor(AutoMapper.IMapper)
  id: '#ctor(AutoMapper.IMapper)'
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ServiceWithMapperBase(IMapper)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ServiceWithMapperBase(IMapper)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ServiceWithMapperBase(AutoMapper.IMapper)
  type: Constructor
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected ServiceWithMapperBase(IMapper mapper)
    parameters:
    - id: mapper
      type: AutoMapper.IMapper
    content.vb: Protected Sub New(mapper As IMapper)
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.#ctor*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).New(IMapper)
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).New(AutoMapper.IMapper)
  name.vb: New(IMapper)
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo``1(`1)
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo``1(`1)
  id: ConvertTo``1(`1)
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ConvertTo<TReturn>(TEntity?)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertTo<TReturn>(TEntity?)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertTo<TReturn>(TEntity?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected TReturn? ConvertTo<TReturn>(TEntity? model)
    parameters:
    - id: model
      type: '{TEntity}'
    typeParameters:
    - id: TReturn
    return:
      type: '{TReturn}'
    content.vb: Protected Function ConvertTo(Of TReturn)(model As TEntity) As TReturn
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertTo(Of TReturn)(TEntity)
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertTo(Of TReturn)(TEntity)
  name.vb: ConvertTo(Of TReturn)(TEntity)
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo``1(System.Collections.Generic.IEnumerable{`1})
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo``1(System.Collections.Generic.IEnumerable{`1})
  id: ConvertTo``1(System.Collections.Generic.IEnumerable{`1})
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ConvertTo<TReturn>(IEnumerable<TEntity>?)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertTo<TReturn>(IEnumerable<TEntity>?)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertTo<TReturn>(System.Collections.Generic.IEnumerable<TEntity>?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected IEnumerable<TReturn>? ConvertTo<TReturn>(IEnumerable<TEntity>? models)
    parameters:
    - id: models
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    typeParameters:
    - id: TReturn
    return:
      type: System.Collections.Generic.IEnumerable{{TReturn}}
    content.vb: Protected Function ConvertTo(Of TReturn)(models As IEnumerable(Of TEntity)) As IEnumerable(Of TReturn)
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertTo(Of TReturn)(IEnumerable(Of TEntity))
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertTo(Of TReturn)(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: ConvertTo(Of TReturn)(IEnumerable(Of TEntity))
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToEntity(`0)
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToEntity(`0)
  id: ConvertToEntity(`0)
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ConvertToEntity(TDTO)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertToEntity(TDTO)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertToEntity(TDTO)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected TEntity ConvertToEntity(TDTO model)
    parameters:
    - id: model
      type: '{TDTO}'
    return:
      type: '{TEntity}'
    content.vb: Protected Function ConvertToEntity(model As TDTO) As TEntity
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToEntity*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertToEntity(TDTO)
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertToEntity(TDTO)
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(`1)
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(`1)
  id: ConvertToDTO(`1)
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ConvertToDTO(TEntity?)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(TEntity?)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(TEntity?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected TDTO? ConvertToDTO(TEntity? model)
    parameters:
    - id: model
      type: '{TEntity}'
    return:
      type: '{TDTO}'
    content.vb: Protected Function ConvertToDTO(model As TEntity) As TDTO
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(TEntity)
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(TEntity)
  name.vb: ConvertToDTO(TEntity)
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(System.Collections.Generic.IEnumerable{`1})
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(System.Collections.Generic.IEnumerable{`1})
  id: ConvertToDTO(System.Collections.Generic.IEnumerable{`1})
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ConvertToDTO(IEnumerable<TEntity>?)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(IEnumerable<TEntity>?)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(System.Collections.Generic.IEnumerable<TEntity>?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected IEnumerable<TDTO>? ConvertToDTO(IEnumerable<TEntity>? models)
    parameters:
    - id: models
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    return:
      type: System.Collections.Generic.IEnumerable{{TDTO}}
    content.vb: Protected Function ConvertToDTO(models As IEnumerable(Of TEntity)) As IEnumerable(Of TDTO)
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(IEnumerable(Of TEntity))
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: ConvertToDTO(IEnumerable(Of TEntity))
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(System.Collections.Generic.IList{`1})
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(System.Collections.Generic.IList{`1})
  id: ConvertToDTO(System.Collections.Generic.IList{`1})
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ConvertToDTO(IList<TEntity>?)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(IList<TEntity>?)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(System.Collections.Generic.IList<TEntity>?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected IList<TDTO>? ConvertToDTO(IList<TEntity>? models)
    parameters:
    - id: models
      type: System.Collections.Generic.IList{{TEntity}}
    return:
      type: System.Collections.Generic.IList{{TDTO}}
    content.vb: Protected Function ConvertToDTO(models As IList(Of TEntity)) As IList(Of TDTO)
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(IList(Of TEntity))
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(System.Collections.Generic.IList(Of TEntity))
  name.vb: ConvertToDTO(IList(Of TEntity))
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(`1[])
  commentId: M:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO(`1[])
  id: ConvertToDTO(`1[])
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: ConvertToDTO(TEntity[]?)
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(TEntity[]?)
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO(TEntity[]?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected TDTO[]? ConvertToDTO(TEntity[]? models)
    parameters:
    - id: models
      type: '{TEntity}[]'
    return:
      type: '{TDTO}[]'
    content.vb: Protected Function ConvertToDTO(models As TEntity()) As TDTO()
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(TEntity())
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO(TEntity())
  name.vb: ConvertToDTO(TEntity())
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.Mapper
  commentId: P:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.Mapper
  id: Mapper
  parent: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2
  langs:
  - csharp
  - vb
  name: Mapper
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.Mapper
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.Mapper
  type: Property
  source:
    href: https://github.com/nuvtools/nuvtools-aspnetcore/blob/d1cd087f58fac1638c0989caa484e2a34ff2cce6/src/NuvTools.AspNetCore/Mapper/ServiceWithMapperBase.cs
  assemblies:
  - NuvTools.AspNetCore
  namespace: NuvTools.AspNetCore.Mapper
  syntax:
    content: protected IMapper Mapper { get; }
    parameters: []
    return:
      type: AutoMapper.IMapper
    content.vb: Protected ReadOnly Property Mapper As IMapper
  overload: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.Mapper*
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).Mapper
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).Mapper
references:
- uid: NuvTools.AspNetCore.Mapper
  commentId: N:NuvTools.AspNetCore.Mapper
  isExternal: true
  href: NuvTools.html
  name: NuvTools.AspNetCore.Mapper
  nameWithType: NuvTools.AspNetCore.Mapper
  fullName: NuvTools.AspNetCore.Mapper
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.AspNetCore.html
  - name: .
  - uid: NuvTools.AspNetCore.Mapper
    name: Mapper
    isExternal: true
    href: NuvTools.AspNetCore.Mapper.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.AspNetCore.html
  - name: .
  - uid: NuvTools.AspNetCore.Mapper
    name: Mapper
    isExternal: true
    href: NuvTools.AspNetCore.Mapper.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.#ctor*
  commentId: Overload:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.#ctor
  isExternal: true
  href: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase-2.html#NuvTools_AspNetCore_Mapper_ServiceWithMapperBase_2__ctor_AutoMapper_IMapper_
  name: ServiceWithMapperBase
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ServiceWithMapperBase
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ServiceWithMapperBase
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).New
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).New
  name.vb: New
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo*
  commentId: Overload:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertTo
  isExternal: true
  href: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase-2.html#NuvTools_AspNetCore_Mapper_ServiceWithMapperBase_2_ConvertTo__1__1_
  name: ConvertTo
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertTo
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertTo
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertTo
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertTo
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: '{TReturn}'
  commentId: '!:TReturn'
  definition: TReturn
  name: TReturn
  nameWithType: TReturn
  fullName: TReturn
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TReturn
  name: TReturn
  nameWithType: TReturn
  fullName: TReturn
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TReturn}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TReturn>
  nameWithType: IEnumerable<TReturn>
  fullName: System.Collections.Generic.IEnumerable<TReturn>
  nameWithType.vb: IEnumerable(Of TReturn)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TReturn)
  name.vb: IEnumerable(Of TReturn)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TReturn
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TReturn
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToEntity*
  commentId: Overload:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToEntity
  isExternal: true
  href: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase-2.html#NuvTools_AspNetCore_Mapper_ServiceWithMapperBase_2_ConvertToEntity__0_
  name: ConvertToEntity
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertToEntity
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertToEntity
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertToEntity
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertToEntity
- uid: '{TDTO}'
  commentId: '!:TDTO'
  definition: TDTO
  name: TDTO
  nameWithType: TDTO
  fullName: TDTO
- uid: TDTO
  name: TDTO
  nameWithType: TDTO
  fullName: TDTO
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO*
  commentId: Overload:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.ConvertToDTO
  isExternal: true
  href: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase-2.html#NuvTools_AspNetCore_Mapper_ServiceWithMapperBase_2_ConvertToDTO__1_
  name: ConvertToDTO
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.ConvertToDTO
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).ConvertToDTO
- uid: System.Collections.Generic.IEnumerable{{TDTO}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TDTO>
  nameWithType: IEnumerable<TDTO>
  fullName: System.Collections.Generic.IEnumerable<TDTO>
  nameWithType.vb: IEnumerable(Of TDTO)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TDTO)
  name.vb: IEnumerable(Of TDTO)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TDTO
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TDTO
  - name: )
- uid: System.Collections.Generic.IList{{TEntity}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TEntity>
  nameWithType: IList<TEntity>
  fullName: System.Collections.Generic.IList<TEntity>
  nameWithType.vb: IList(Of TEntity)
  fullName.vb: System.Collections.Generic.IList(Of TEntity)
  name.vb: IList(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Collections.Generic.IList{{TDTO}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TDTO>
  nameWithType: IList<TDTO>
  fullName: System.Collections.Generic.IList<TDTO>
  nameWithType.vb: IList(Of TDTO)
  fullName.vb: System.Collections.Generic.IList(Of TDTO)
  name.vb: IList(Of TDTO)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TDTO
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TDTO
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{TEntity}[]'
  isExternal: true
  name: TEntity[]
  nameWithType: TEntity[]
  fullName: TEntity[]
  nameWithType.vb: TEntity()
  fullName.vb: TEntity()
  name.vb: TEntity()
  spec.csharp:
  - name: TEntity
  - name: '['
  - name: ']'
  spec.vb:
  - name: TEntity
  - name: (
  - name: )
- uid: '{TDTO}[]'
  isExternal: true
  name: TDTO[]
  nameWithType: TDTO[]
  fullName: TDTO[]
  nameWithType.vb: TDTO()
  fullName.vb: TDTO()
  name.vb: TDTO()
  spec.csharp:
  - name: TDTO
  - name: '['
  - name: ']'
  spec.vb:
  - name: TDTO
  - name: (
  - name: )
- uid: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.Mapper*
  commentId: Overload:NuvTools.AspNetCore.Mapper.ServiceWithMapperBase`2.Mapper
  isExternal: true
  href: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase-2.html#NuvTools_AspNetCore_Mapper_ServiceWithMapperBase_2_Mapper
  name: Mapper
  nameWithType: ServiceWithMapperBase<TDTO, TEntity>.Mapper
  fullName: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase<TDTO, TEntity>.Mapper
  nameWithType.vb: ServiceWithMapperBase(Of TDTO, TEntity).Mapper
  fullName.vb: NuvTools.AspNetCore.Mapper.ServiceWithMapperBase(Of TDTO, TEntity).Mapper
