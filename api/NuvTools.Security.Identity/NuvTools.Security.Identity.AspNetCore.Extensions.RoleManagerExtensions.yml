### YamlMime:ManagedReference
items:
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions
  commentId: T:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions
  id: RoleManagerExtensions
  parent: NuvTools.Security.Identity.AspNetCore.Extensions
  children:
  - NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String)
  - NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String[])
  langs:
  - csharp
  - vb
  name: RoleManagerExtensions
  nameWithType: RoleManagerExtensions
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions
  type: Class
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Extensions/RoleManagerExtensions.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Extensions
  summary: >-
    Provides extension methods for the <xref href="Microsoft.AspNetCore.Identity.RoleManager%601" data-throw-if-not-resolved="false"></xref> class to simplify the management of claims,

    particularly permission-based claims, associated with roles.
  example: []
  syntax:
    content: public static class RoleManagerExtensions
    content.vb: Public Module RoleManagerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: AddClaimsAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  isExtensionMethod: true
  parent: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions
  langs:
  - csharp
  - vb
  name: AddClaimsAsync<TRole>(RoleManager<TRole>, TRole, IEnumerable<Claim>)
  nameWithType: RoleManagerExtensions.AddClaimsAsync<TRole>(RoleManager<TRole>, TRole, IEnumerable<Claim>)
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync<TRole>(Microsoft.AspNetCore.Identity.RoleManager<TRole>, TRole, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Extensions/RoleManagerExtensions.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Extensions
  summary: Adds multiple claims to a role.
  example: []
  syntax:
    content: 'public static Task AddClaimsAsync<TRole>(this RoleManager<TRole> roleManager, TRole role, IEnumerable<Claim> claims) where TRole : class'
    parameters:
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
      description: The <xref href="Microsoft.AspNetCore.Identity.RoleManager%601" data-throw-if-not-resolved="false"></xref> instance used to manage roles.
    - id: role
      type: '{TRole}'
      description: The role to which claims should be added.
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: A collection of claims to add.
    typeParameters:
    - id: TRole
      description: The type representing the application role.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function AddClaimsAsync(Of TRole As Class)(roleManager As RoleManager(Of TRole), role As TRole, claims As IEnumerable(Of Claim)) As Task
  overload: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">roleManager</code>, <code class="paramref">role</code>, or <code class="paramref">claims</code> is null.
  nameWithType.vb: RoleManagerExtensions.AddClaimsAsync(Of TRole)(RoleManager(Of TRole), TRole, IEnumerable(Of Claim))
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync(Of TRole)(Microsoft.AspNetCore.Identity.RoleManager(Of TRole), TRole, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: AddClaimsAsync(Of TRole)(RoleManager(Of TRole), TRole, IEnumerable(Of Claim))
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String,System.String)
  id: AddClaimAsync``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String,System.String)
  isExtensionMethod: true
  parent: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions
  langs:
  - csharp
  - vb
  name: AddClaimAsync<TRole>(RoleManager<TRole>, TRole, string, string)
  nameWithType: RoleManagerExtensions.AddClaimAsync<TRole>(RoleManager<TRole>, TRole, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync<TRole>(Microsoft.AspNetCore.Identity.RoleManager<TRole>, TRole, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Extensions/RoleManagerExtensions.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Extensions
  summary: Adds a single claim to a role if it does not already exist.
  example: []
  syntax:
    content: 'public static Task AddClaimAsync<TRole>(this RoleManager<TRole> roleManager, TRole role, string type, string value) where TRole : class'
    parameters:
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
      description: The <xref href="Microsoft.AspNetCore.Identity.RoleManager%601" data-throw-if-not-resolved="false"></xref> instance used to manage roles.
    - id: role
      type: '{TRole}'
      description: The role to which the claim should be added.
    - id: type
      type: System.String
      description: The claim type.
    - id: value
      type: System.String
      description: The claim value.
    typeParameters:
    - id: TRole
      description: The type representing the application role.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function AddClaimAsync(Of TRole As Class)(roleManager As RoleManager(Of TRole), role As TRole, type As String, value As String) As Task
  overload: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">roleManager</code>, <code class="paramref">role</code>, <code class="paramref">type</code>, or <code class="paramref">value</code> is null or empty.
  nameWithType.vb: RoleManagerExtensions.AddClaimAsync(Of TRole)(RoleManager(Of TRole), TRole, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync(Of TRole)(Microsoft.AspNetCore.Identity.RoleManager(Of TRole), TRole, String, String)
  name.vb: AddClaimAsync(Of TRole)(RoleManager(Of TRole), TRole, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String)
  id: AddPermissionClaim``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String)
  isExtensionMethod: true
  parent: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions
  langs:
  - csharp
  - vb
  name: AddPermissionClaim<TRole>(RoleManager<TRole>, TRole, string)
  nameWithType: RoleManagerExtensions.AddPermissionClaim<TRole>(RoleManager<TRole>, TRole, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim<TRole>(Microsoft.AspNetCore.Identity.RoleManager<TRole>, TRole, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Extensions/RoleManagerExtensions.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Extensions
  summary: Adds a single permission claim to a role.
  remarks: This method uses the <xref href="NuvTools.Security.Models.ClaimTypes.Permission" data-throw-if-not-resolved="false"></xref> claim type.
  example: []
  syntax:
    content: 'public static Task AddPermissionClaim<TRole>(this RoleManager<TRole> roleManager, TRole role, string value) where TRole : class'
    parameters:
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
      description: The <xref href="Microsoft.AspNetCore.Identity.RoleManager%601" data-throw-if-not-resolved="false"></xref> instance used to manage roles.
    - id: role
      type: '{TRole}'
      description: The role to which the permission claim should be added.
    - id: value
      type: System.String
      description: The permission value.
    typeParameters:
    - id: TRole
      description: The type representing the application role.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function AddPermissionClaim(Of TRole As Class)(roleManager As RoleManager(Of TRole), role As TRole, value As String) As Task
  overload: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">roleManager</code>, <code class="paramref">role</code>, or <code class="paramref">value</code> is null or empty.
  nameWithType.vb: RoleManagerExtensions.AddPermissionClaim(Of TRole)(RoleManager(Of TRole), TRole, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim(Of TRole)(Microsoft.AspNetCore.Identity.RoleManager(Of TRole), TRole, String)
  name.vb: AddPermissionClaim(Of TRole)(RoleManager(Of TRole), TRole, String)
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String[])
  commentId: M:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String[])
  id: AddPermissionClaims``1(Microsoft.AspNetCore.Identity.RoleManager{``0},``0,System.String[])
  isExtensionMethod: true
  parent: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions
  langs:
  - csharp
  - vb
  name: AddPermissionClaims<TRole>(RoleManager<TRole>, TRole, params string[])
  nameWithType: RoleManagerExtensions.AddPermissionClaims<TRole>(RoleManager<TRole>, TRole, params string[])
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims<TRole>(Microsoft.AspNetCore.Identity.RoleManager<TRole>, TRole, params string[])
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Extensions/RoleManagerExtensions.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Extensions
  summary: Adds multiple permission claims to a role.
  example: []
  syntax:
    content: 'public static Task AddPermissionClaims<TRole>(this RoleManager<TRole> roleManager, TRole role, params string[] values) where TRole : class'
    parameters:
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
      description: The <xref href="Microsoft.AspNetCore.Identity.RoleManager%601" data-throw-if-not-resolved="false"></xref> instance used to manage roles.
    - id: role
      type: '{TRole}'
      description: The role to which permission claims should be added.
    - id: values
      type: System.String[]
      description: An array of permission values to add as claims.
    typeParameters:
    - id: TRole
      description: The type representing the application role.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function AddPermissionClaims(Of TRole As Class)(roleManager As RoleManager(Of TRole), role As TRole, ParamArray values As String()) As Task
  overload: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">roleManager</code>, <code class="paramref">role</code>, or <code class="paramref">values</code> is null or empty.
  nameWithType.vb: RoleManagerExtensions.AddPermissionClaims(Of TRole)(RoleManager(Of TRole), TRole, ParamArray String())
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims(Of TRole)(Microsoft.AspNetCore.Identity.RoleManager(Of TRole), TRole, ParamArray String())
  name.vb: AddPermissionClaims(Of TRole)(RoleManager(Of TRole), TRole, ParamArray String())
references:
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - name: TRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TRole
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Extensions
  commentId: N:NuvTools.Security.Identity.AspNetCore.Extensions
  isExternal: true
  href: NuvTools.html
  name: NuvTools.Security.Identity.AspNetCore.Extensions
  nameWithType: NuvTools.Security.Identity.AspNetCore.Extensions
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore.Extensions
    name: Extensions
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.Extensions.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore.Extensions
    name: Extensions
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.html#NuvTools_Security_Identity_AspNetCore_Extensions_RoleManagerExtensions_AddClaimsAsync__1_Microsoft_AspNetCore_Identity_RoleManager___0____0_System_Collections_Generic_IEnumerable_System_Security_Claims_Claim__
  name: AddClaimsAsync
  nameWithType: RoleManagerExtensions.AddClaimsAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimsAsync
- uid: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager{``0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - name: TRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TRole
  - name: )
- uid: '{TRole}'
  commentId: '!:TRole'
  definition: TRole
  name: TRole
  nameWithType: TRole
  fullName: TRole
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  commentId: T:System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  nameWithType.vb: IEnumerable(Of Claim)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  name.vb: IEnumerable(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Security.Claims.Claim
    name: Claim
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims.claim
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Security.Claims.Claim
    name: Claim
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims.claim
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
- uid: TRole
  name: TRole
  nameWithType: TRole
  fullName: TRole
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.html#NuvTools_Security_Identity_AspNetCore_Extensions_RoleManagerExtensions_AddClaimAsync__1_Microsoft_AspNetCore_Identity_RoleManager___0____0_System_String_System_String_
  name: AddClaimAsync
  nameWithType: RoleManagerExtensions.AddClaimAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddClaimAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NuvTools.Security.Models.ClaimTypes.Permission
  commentId: F:NuvTools.Security.Models.ClaimTypes.Permission
  isExternal: true
  name: Permission
  nameWithType: ClaimTypes.Permission
  fullName: NuvTools.Security.Models.ClaimTypes.Permission
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.html#NuvTools_Security_Identity_AspNetCore_Extensions_RoleManagerExtensions_AddPermissionClaim__1_Microsoft_AspNetCore_Identity_RoleManager___0____0_System_String_
  name: AddPermissionClaim
  nameWithType: RoleManagerExtensions.AddPermissionClaim
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaim
- uid: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.html#NuvTools_Security_Identity_AspNetCore_Extensions_RoleManagerExtensions_AddPermissionClaims__1_Microsoft_AspNetCore_Identity_RoleManager___0____0_System_String___
  name: AddPermissionClaims
  nameWithType: RoleManagerExtensions.AddPermissionClaims
  fullName: NuvTools.Security.Identity.AspNetCore.Extensions.RoleManagerExtensions.AddPermissionClaims
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
