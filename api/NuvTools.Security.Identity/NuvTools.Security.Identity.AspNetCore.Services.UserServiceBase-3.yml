### YamlMime:ManagedReference
items:
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  commentId: T:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  id: UserServiceBase`3
  parent: NuvTools.Security.Identity.AspNetCore.Services
  children:
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor(Microsoft.AspNetCore.Identity.UserManager{`0})
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync(`2,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync(`2,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync(`2,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync(`0)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync(`0,System.String[])
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync(`2)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync(`0)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync(`2)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync(System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync(`2)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailUrlAsync(System.String,System.String,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordUrlAsync(System.String,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync(System.String,System.String,System.String)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync(`2)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync(`0)
  - NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync(`2,System.Collections.Generic.IList{System.String})
  langs:
  - csharp
  - vb
  name: UserServiceBase<TUser, TRole, TKey>
  nameWithType: UserServiceBase<TUser, TRole, TKey>
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>
  type: Class
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Provides a base service for user management operations, built upon <xref href="Microsoft.AspNetCore.Identity.UserManager%601" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This abstract base class consolidates common user-related actions such as creation, updates,

    password management, email confirmation, and role assignments.  

    It standardizes the return model using <xref href="NuvTools.Common.ResultWrapper.IResult" data-throw-if-not-resolved="false"></xref> and <xref href="NuvTools.Common.ResultWrapper.IResult%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public abstract class UserServiceBase<TUser, TRole, TKey> where TUser : UserBase<TKey> where TRole : IdentityRole<TKey> where TKey : IEquatable<TKey>'
    typeParameters:
    - id: TUser
      description: The user entity type.
    - id: TRole
      description: The role entity type.
    - id: TKey
      description: The type of the user's primary key.
    content.vb: Public MustInherit Class UserServiceBase(Of TUser As UserBase(Of TKey), TRole As IdentityRole(Of TKey), TKey As IEquatable(Of TKey))
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey)
  name.vb: UserServiceBase(Of TUser, TRole, TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor(Microsoft.AspNetCore.Identity.UserManager{`0})
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor(Microsoft.AspNetCore.Identity.UserManager{`0})
  id: '#ctor(Microsoft.AspNetCore.Identity.UserManager{`0})'
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: UserServiceBase(UserManager<TUser>)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UserServiceBase(UserManager<TUser>)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UserServiceBase(Microsoft.AspNetCore.Identity.UserManager<TUser>)
  type: Constructor
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Provides a base service for user management operations, built upon <xref href="Microsoft.AspNetCore.Identity.UserManager%601" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This abstract base class consolidates common user-related actions such as creation, updates,

    password management, email confirmation, and role assignments.  

    It standardizes the return model using <xref href="NuvTools.Common.ResultWrapper.IResult" data-throw-if-not-resolved="false"></xref> and <xref href="NuvTools.Common.ResultWrapper.IResult%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected UserServiceBase(UserManager<TUser> userManager)
    parameters:
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
    content.vb: Protected Sub New(userManager As UserManager(Of TUser))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).New(UserManager(Of TUser))
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).New(Microsoft.AspNetCore.Identity.UserManager(Of TUser))
  name.vb: New(UserManager(Of TUser))
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  id: GetAllAsync
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetAllAsync()
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAllAsync()
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAllAsync()
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Gets all users as an <xref href="System.Linq.IQueryable%601" data-throw-if-not-resolved="false"></xref> queryable collection.
  example: []
  syntax:
    content: public IQueryable<TUser> GetAllAsync()
    return:
      type: System.Linq.IQueryable{{TUser}}
    content.vb: Public Function GetAllAsync() As IQueryable(Of TUser)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAllAsync()
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAllAsync()
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync(`2)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync(`2)
  id: GetAsync(`2)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetAsync(TKey)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAsync(TKey)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAsync(TKey)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Retrieves a user by their unique identifier.
  example: []
  syntax:
    content: public Task<TUser?> GetAsync(TKey id)
    parameters:
    - id: id
      type: '{TKey}'
    return:
      type: System.Threading.Tasks.Task{{TUser}}
    content.vb: Public Function GetAsync(id As TKey) As Task(Of TUser)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAsync(TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAsync(TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync(System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync(System.String)
  id: GetByEmailAsync(System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetByEmailAsync(string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync(string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync(string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Retrieves a user by their email address.
  example: []
  syntax:
    content: public Task<TUser?> GetByEmailAsync(string email)
    parameters:
    - id: email
      type: System.String
    return:
      type: System.Threading.Tasks.Task{{TUser}}
    content.vb: Public Function GetByEmailAsync(email As String) As Task(Of TUser)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync(String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync(String)
  name.vb: GetByEmailAsync(String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync(`2)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync(`2)
  id: DeleteAsync(`2)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: DeleteAsync(TKey)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.DeleteAsync(TKey)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.DeleteAsync(TKey)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Deletes a user by identifier.
  example: []
  syntax:
    content: public Task<IResult> DeleteAsync(TKey id)
    parameters:
    - id: id
      type: '{TKey}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function DeleteAsync(id As TKey) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).DeleteAsync(TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).DeleteAsync(TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync(`0)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync(`0)
  id: CreateAsync(`0)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: CreateAsync(TUser)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateAsync(TUser)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateAsync(TUser)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Creates a new user in the system.
  example: []
  syntax:
    content: public Task<IResult<TKey>> CreateAsync(TUser value)
    parameters:
    - id: value
      type: '{TUser}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
    content.vb: Public Function CreateAsync(value As TUser) As Task(Of IResult(Of TKey))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateAsync(TUser)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateAsync(TUser)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync(`0,System.String[])
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync(`0,System.String[])
  id: CreateWithRolesAsync(`0,System.String[])
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: CreateWithRolesAsync(TUser, params string[])
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync(TUser, params string[])
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync(TUser, params string[])
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Creates a new user and assigns one or more roles.
  example: []
  syntax:
    content: public Task<IResult<TKey>> CreateWithRolesAsync(TUser value, params string[] roles)
    parameters:
    - id: value
      type: '{TUser}'
    - id: roles
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
    content.vb: Public Function CreateWithRolesAsync(value As TUser, ParamArray roles As String()) As Task(Of IResult(Of TKey))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync(TUser, ParamArray String())
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync(TUser, ParamArray String())
  name.vb: CreateWithRolesAsync(TUser, ParamArray String())
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync(`0)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync(`0)
  id: UpdateAsync(`0)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: UpdateAsync(TUser)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateAsync(TUser)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateAsync(TUser)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Updates basic user information (name, surname, etc.).
  example: []
  syntax:
    content: public Task<IResult> UpdateAsync(TUser value)
    parameters:
    - id: value
      type: '{TUser}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function UpdateAsync(value As TUser) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateAsync(TUser)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateAsync(TUser)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync(`2)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync(`2)
  id: ToggleUserStatusAsync(`2)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ToggleUserStatusAsync(TKey)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync(TKey)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync(TKey)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Toggles the user's active status.
  example: []
  syntax:
    content: public virtual Task<IResult> ToggleUserStatusAsync(TKey id)
    parameters:
    - id: id
      type: '{TKey}'
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Overridable Function ToggleUserStatusAsync(id As TKey) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync(TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync(TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  id: GenerateEmailConfirmationUriAsync(`0,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GenerateEmailConfirmationUriAsync(TUser, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync(TUser, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync(TUser, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Generates a verification URL for confirming the user's email.
  example: []
  syntax:
    content: public Task<string> GenerateEmailConfirmationUriAsync(TUser user, string origin, string route = "login")
    parameters:
    - id: user
      type: '{TUser}'
    - id: origin
      type: System.String
    - id: route
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GenerateEmailConfirmationUriAsync(user As TUser, origin As String, route As String = "login") As Task(Of String)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync(TUser, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync(TUser, String, String)
  name.vb: GenerateEmailConfirmationUriAsync(TUser, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync(`0)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync(`0)
  id: GenerateEmailConfirmationTokenAsync(`0)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync(TUser)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync(TUser)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Generates a base64-encoded token used for email confirmation.
  example: []
  syntax:
    content: public Task<string> GenerateEmailConfirmationTokenAsync(TUser user)
    parameters:
    - id: user
      type: '{TUser}'
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GenerateEmailConfirmationTokenAsync(user As TUser) As Task(Of String)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync(TUser)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync(TUser)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync(`2,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync(`2,System.String)
  id: ConfirmEmailAsync(`2,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ConfirmEmailAsync(TKey, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync(TKey, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync(TKey, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Confirms a user's email address.
  example: []
  syntax:
    content: public Task<IResult> ConfirmEmailAsync(TKey id, string token)
    parameters:
    - id: id
      type: '{TKey}'
    - id: token
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ConfirmEmailAsync(id As TKey, token As String) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync(TKey, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync(TKey, String)
  name.vb: ConfirmEmailAsync(TKey, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailUrlAsync(System.String,System.String,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailUrlAsync(System.String,System.String,System.String,System.String)
  id: RequestChangeEmailUrlAsync(System.String,System.String,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: RequestChangeEmailUrlAsync(string, string, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailUrlAsync(string, string, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailUrlAsync(string, string, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Generates a URL for confirming an email change request.
  example: []
  syntax:
    content: public Task<IResult<string>> RequestChangeEmailUrlAsync(string email, string newEmail, string origin, string route = "security/change-email")
    parameters:
    - id: email
      type: System.String
    - id: newEmail
      type: System.String
    - id: origin
      type: System.String
    - id: route
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{System.String}}
    content.vb: Public Function RequestChangeEmailUrlAsync(email As String, newEmail As String, origin As String, route As String = "security/change-email") As Task(Of IResult(Of String))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailUrlAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailUrlAsync(String, String, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailUrlAsync(String, String, String, String)
  name.vb: RequestChangeEmailUrlAsync(String, String, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync(`2,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync(`2,System.String,System.String)
  id: ChangeEmailAsync(`2,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ChangeEmailAsync(TKey, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync(TKey, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync(TKey, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Applies an email change using a confirmation token.
  example: []
  syntax:
    content: public Task<IResult> ChangeEmailAsync(TKey id, string email, string token)
    parameters:
    - id: id
      type: '{TKey}'
    - id: email
      type: System.String
    - id: token
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ChangeEmailAsync(id As TKey, email As String, token As String) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync(TKey, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync(TKey, String, String)
  name.vb: ChangeEmailAsync(TKey, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync(`2,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync(`2,System.String,System.String)
  id: ChangePasswordAsync(`2,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(TKey, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync(TKey, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync(TKey, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Changes the user's password.
  example: []
  syntax:
    content: public Task<IResult> ChangePasswordAsync(TKey id, string password, string newPassword)
    parameters:
    - id: id
      type: '{TKey}'
    - id: password
      type: System.String
    - id: newPassword
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ChangePasswordAsync(id As TKey, password As String, newPassword As String) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync(TKey, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync(TKey, String, String)
  name.vb: ChangePasswordAsync(TKey, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordUrlAsync(System.String,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordUrlAsync(System.String,System.String,System.String)
  id: RequestResetPasswordUrlAsync(System.String,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: RequestResetPasswordUrlAsync(string, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordUrlAsync(string, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordUrlAsync(string, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Generates a password reset URL for a user with a confirmed email.
  example: []
  syntax:
    content: public Task<IResult<string>> RequestResetPasswordUrlAsync(string email, string origin, string route = "security/reset-password")
    parameters:
    - id: email
      type: System.String
    - id: origin
      type: System.String
    - id: route
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{System.String}}
    content.vb: Public Function RequestResetPasswordUrlAsync(email As String, origin As String, route As String = "security/reset-password") As Task(Of IResult(Of String))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordUrlAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordUrlAsync(String, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordUrlAsync(String, String, String)
  name.vb: RequestResetPasswordUrlAsync(String, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync(System.String,System.String,System.String)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync(System.String,System.String,System.String)
  id: ResetPasswordAsync(System.String,System.String,System.String)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: ResetPasswordAsync(string, string, string)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync(string, string, string)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync(string, string, string)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Resets the user's password using a reset token.
  example: []
  syntax:
    content: public Task<IResult> ResetPasswordAsync(string email, string newPassword, string token)
    parameters:
    - id: email
      type: System.String
    - id: newPassword
      type: System.String
    - id: token
      type: System.String
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function ResetPasswordAsync(email As String, newPassword As String, token As String) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync(String, String, String)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync(String, String, String)
  name.vb: ResetPasswordAsync(String, String, String)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync(`2)
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync(`2)
  id: GetRolesAsync(`2)
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: GetRolesAsync(TKey)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetRolesAsync(TKey)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetRolesAsync(TKey)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Retrieves all role names assigned to a user.
  example: []
  syntax:
    content: public Task<IList<string>?> GetRolesAsync(TKey id)
    parameters:
    - id: id
      type: '{TKey}'
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
    content.vb: Public Function GetRolesAsync(id As TKey) As Task(Of IList(Of String))
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync(TKey)
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync(TKey)
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync(`2,System.Collections.Generic.IList{System.String})
  commentId: M:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync(`2,System.Collections.Generic.IList{System.String})
  id: UpdateRolesAsync(`2,System.Collections.Generic.IList{System.String})
  parent: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3
  langs:
  - csharp
  - vb
  name: UpdateRolesAsync(TKey, IList<string>)
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync(TKey, IList<string>)
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync(TKey, System.Collections.Generic.IList<string>)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-security-identity/blob/53a45c22ac12cee6d937982b3d3e4aa5a3f27be8/src/NuvTools.Security.Identity.AspNetCore/Services/UserServiceBase.cs
  assemblies:
  - NuvTools.Security.Identity.AspNetCore
  namespace: NuvTools.Security.Identity.AspNetCore.Services
  summary: Replaces all roles of a user with a new set of roles.
  example: []
  syntax:
    content: public Task<IResult> UpdateRolesAsync(TKey id, IList<string> roles)
    parameters:
    - id: id
      type: '{TKey}'
    - id: roles
      type: System.Collections.Generic.IList{System.String}
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Function UpdateRolesAsync(id As TKey, roles As IList(Of String)) As Task(Of IResult)
  overload: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync*
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync(TKey, IList(Of String))
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync(TKey, System.Collections.Generic.IList(Of String))
  name.vb: UpdateRolesAsync(TKey, IList(Of String))
references:
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: NuvTools.Common.ResultWrapper.IResult
  commentId: T:NuvTools.Common.ResultWrapper.IResult
  isExternal: true
  name: IResult
  nameWithType: IResult
  fullName: NuvTools.Common.ResultWrapper.IResult
- uid: NuvTools.Common.ResultWrapper.IResult`1
  commentId: T:NuvTools.Common.ResultWrapper.IResult`1
  isExternal: true
  name: IResult<T>
  nameWithType: IResult<T>
  fullName: NuvTools.Common.ResultWrapper.IResult<T>
  nameWithType.vb: IResult(Of T)
  fullName.vb: NuvTools.Common.ResultWrapper.IResult(Of T)
  name.vb: IResult(Of T)
  spec.csharp:
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services
  commentId: N:NuvTools.Security.Identity.AspNetCore.Services
  isExternal: true
  href: NuvTools.html
  name: NuvTools.Security.Identity.AspNetCore.Services
  nameWithType: NuvTools.Security.Identity.AspNetCore.Services
  fullName: NuvTools.Security.Identity.AspNetCore.Services
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore.Services
    name: Services
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.Services.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Security
    name: Security
    isExternal: true
    href: NuvTools.Security.html
  - name: .
  - uid: NuvTools.Security.Identity
    name: Identity
    isExternal: true
    href: NuvTools.Security.Identity.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore
    name: AspNetCore
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.html
  - name: .
  - uid: NuvTools.Security.Identity.AspNetCore.Services
    name: Services
    isExternal: true
    href: NuvTools.Security.Identity.AspNetCore.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.#ctor
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3__ctor_Microsoft_AspNetCore_Identity_UserManager__0__
  name: UserServiceBase
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UserServiceBase
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UserServiceBase
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).New
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).New
  name.vb: New
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAllAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetAllAsync
  name: GetAllAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAllAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAllAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAllAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAllAsync
- uid: System.Linq.IQueryable{{TUser}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<TUser>
  nameWithType: IQueryable<TUser>
  fullName: System.Linq.IQueryable<TUser>
  nameWithType.vb: IQueryable(Of TUser)
  fullName.vb: System.Linq.IQueryable(Of TUser)
  name.vb: IQueryable(Of TUser)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetAsync__2_
  name: GetAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetAsync
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Threading.Tasks.Task{{TUser}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TUser>
  nameWithType: Task<TUser>
  fullName: System.Threading.Tasks.Task<TUser>
  nameWithType.vb: Task(Of TUser)
  fullName.vb: System.Threading.Tasks.Task(Of TUser)
  name.vb: Task(Of TUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetByEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetByEmailAsync_System_String_
  name: GetByEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetByEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetByEmailAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.DeleteAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_DeleteAsync__2_
  name: DeleteAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.DeleteAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.DeleteAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).DeleteAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).DeleteAsync
- uid: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
  commentId: T:System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult>
  nameWithType: Task<IResult>
  fullName: System.Threading.Tasks.Task<NuvTools.Common.ResultWrapper.IResult>
  nameWithType.vb: Task(Of IResult)
  fullName.vb: System.Threading.Tasks.Task(Of NuvTools.Common.ResultWrapper.IResult)
  name.vb: Task(Of IResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: NuvTools.Common.ResultWrapper.IResult
    name: IResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: NuvTools.Common.ResultWrapper.IResult
    name: IResult
    isExternal: true
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_CreateAsync__0_
  name: CreateAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateAsync
- uid: '{TUser}'
  commentId: '!:TUser'
  definition: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{{TKey}}}
  commentId: T:System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{`2}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult<TKey>>
  nameWithType: Task<IResult<TKey>>
  fullName: System.Threading.Tasks.Task<NuvTools.Common.ResultWrapper.IResult<TKey>>
  nameWithType.vb: Task(Of IResult(Of TKey))
  fullName.vb: System.Threading.Tasks.Task(Of NuvTools.Common.ResultWrapper.IResult(Of TKey))
  name.vb: Task(Of IResult(Of TKey))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: <
  - name: TKey
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.CreateWithRolesAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_CreateWithRolesAsync__0_System_String___
  name: CreateWithRolesAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.CreateWithRolesAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).CreateWithRolesAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_UpdateAsync__0_
  name: UpdateAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ToggleUserStatusAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ToggleUserStatusAsync__2_
  name: ToggleUserStatusAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ToggleUserStatusAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ToggleUserStatusAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationUriAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GenerateEmailConfirmationUriAsync__0_System_String_System_String_
  name: GenerateEmailConfirmationUriAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationUriAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationUriAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GenerateEmailConfirmationTokenAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GenerateEmailConfirmationTokenAsync__0_
  name: GenerateEmailConfirmationTokenAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GenerateEmailConfirmationTokenAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GenerateEmailConfirmationTokenAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ConfirmEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ConfirmEmailAsync__2_System_String_
  name: ConfirmEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ConfirmEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ConfirmEmailAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailUrlAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestChangeEmailUrlAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_RequestChangeEmailUrlAsync_System_String_System_String_System_String_System_String_
  name: RequestChangeEmailUrlAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailUrlAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestChangeEmailUrlAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailUrlAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestChangeEmailUrlAsync
- uid: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{System.String}}
  commentId: T:System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult<string>>
  nameWithType: Task<IResult<string>>
  fullName: System.Threading.Tasks.Task<NuvTools.Common.ResultWrapper.IResult<string>>
  nameWithType.vb: Task(Of IResult(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of NuvTools.Common.ResultWrapper.IResult(Of String))
  name.vb: Task(Of IResult(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: NuvTools.Common.ResultWrapper.IResult`1
    name: IResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangeEmailAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ChangeEmailAsync__2_System_String_System_String_
  name: ChangeEmailAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangeEmailAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangeEmailAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ChangePasswordAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ChangePasswordAsync__2_System_String_System_String_
  name: ChangePasswordAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ChangePasswordAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ChangePasswordAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordUrlAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.RequestResetPasswordUrlAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_RequestResetPasswordUrlAsync_System_String_System_String_System_String_
  name: RequestResetPasswordUrlAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordUrlAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.RequestResetPasswordUrlAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordUrlAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).RequestResetPasswordUrlAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.ResetPasswordAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_ResetPasswordAsync_System_String_System_String_System_String_
  name: ResetPasswordAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.ResetPasswordAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).ResetPasswordAsync
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.GetRolesAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_GetRolesAsync__2_
  name: GetRolesAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.GetRolesAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.GetRolesAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).GetRolesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<string>>
  nameWithType: Task<IList<string>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<string>>
  nameWithType.vb: Task(Of IList(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of String))
  name.vb: Task(Of IList(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync*
  commentId: Overload:NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase`3.UpdateRolesAsync
  isExternal: true
  href: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase-3.html#NuvTools_Security_Identity_AspNetCore_Services_UserServiceBase_3_UpdateRolesAsync__2_System_Collections_Generic_IList_System_String__
  name: UpdateRolesAsync
  nameWithType: UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync
  fullName: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase<TUser, TRole, TKey>.UpdateRolesAsync
  nameWithType.vb: UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync
  fullName.vb: NuvTools.Security.Identity.AspNetCore.Services.UserServiceBase(Of TUser, TRole, TKey).UpdateRolesAsync
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<string>
  nameWithType: IList<string>
  fullName: System.Collections.Generic.IList<string>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
