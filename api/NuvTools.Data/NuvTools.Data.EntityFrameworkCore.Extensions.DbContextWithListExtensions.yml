### YamlMime:ManagedReference
items:
- uid: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions
  commentId: T:NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions
  id: DbContextWithListExtensions
  parent: NuvTools.Data.EntityFrameworkCore.Extensions
  children:
  - NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  langs:
  - csharp
  - vb
  name: DbContextWithListExtensions
  nameWithType: DbContextWithListExtensions
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions
  type: Class
  source:
    href: https://github.com/nuvtools/nuvtools-data/blob/92b78492c8c296e07b2714393509db4f8584826c/src/NuvTools.Data.EntityFrameworkCore/Extensions/DbContextWithListExtensions.cs
  assemblies:
  - NuvTools.Data.EntityFrameworkCore
  namespace: NuvTools.Data.EntityFrameworkCore.Extensions
  syntax:
    content: public static class DbContextWithListExtensions
    content.vb: Public Module DbContextWithListExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: SyncFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  isExtensionMethod: true
  parent: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions
  langs:
  - csharp
  - vb
  name: SyncFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?)
  nameWithType: DbContextWithListExtensions.SyncFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?)
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync<TEntity, TKey>(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.IEnumerable<TEntity>, System.Func<TEntity, TKey>, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-data/blob/92b78492c8c296e07b2714393509db4f8584826c/src/NuvTools.Data.EntityFrameworkCore/Extensions/DbContextWithListExtensions.cs
  assemblies:
  - NuvTools.Data.EntityFrameworkCore
  namespace: NuvTools.Data.EntityFrameworkCore.Extensions
  summary: Synchronizes a DbSet with a provided list by adding, updating, or removing entities.
  remarks: >-
    This method adds entities in the list that are not in the database, updates entities that exist in both,

    and removes entities in the database that are not in the list.
  example:
  - >-
    await context.SyncFromListAsync(
        updatedEmployees,
        e =&gt; e.Id,
        e =&gt; e.IsActive
    );
  syntax:
    content: 'public static Task<IResult> SyncFromListAsync<TEntity, TKey>(this DbContext context, IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null) where TEntity : class where TKey : notnull'
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The <xref href="Microsoft.EntityFrameworkCore.DbContext" data-throw-if-not-resolved="false"></xref> instance to operate on.
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The list of entities to synchronize with the database.
    - id: keySelector
      type: System.Func{{TEntity},{TKey}}
      description: A function to select the key for matching entities.
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: An optional filter predicate to apply to the database entities.
    typeParameters:
    - id: TEntity
      description: The type of the entity.
    - id: TKey
      description: The type of the key used to uniquely identify entities.
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Shared Function SyncFromListAsync(Of TEntity As Class, TKey)(context As DbContext, entities As IEnumerable(Of TEntity), keySelector As Func(Of TEntity, TKey), filter As Expression(Of Func(Of TEntity, Boolean)) = Nothing) As Task(Of IResult)
  overload: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync*
  nameWithType.vb: DbContextWithListExtensions.SyncFromListAsync(Of TEntity, TKey)(DbContext, IEnumerable(Of TEntity), Func(Of TEntity, TKey), Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync(Of TEntity, TKey)(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.IEnumerable(Of TEntity), System.Func(Of TEntity, TKey), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: SyncFromListAsync(Of TEntity, TKey)(DbContext, IEnumerable(Of TEntity), Func(Of TEntity, TKey), Expression(Of Func(Of TEntity, Boolean)))
- uid: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: AddOrUpdateFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  isExtensionMethod: true
  parent: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions
  langs:
  - csharp
  - vb
  name: AddOrUpdateFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?)
  nameWithType: DbContextWithListExtensions.AddOrUpdateFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?)
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync<TEntity, TKey>(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.IEnumerable<TEntity>, System.Func<TEntity, TKey>, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-data/blob/92b78492c8c296e07b2714393509db4f8584826c/src/NuvTools.Data.EntityFrameworkCore/Extensions/DbContextWithListExtensions.cs
  assemblies:
  - NuvTools.Data.EntityFrameworkCore
  namespace: NuvTools.Data.EntityFrameworkCore.Extensions
  summary: Synchronizes a DbSet with a provided list by adding or updating entities, without removing any entities.
  remarks: >-
    This method adds entities in the list that are not in the database and updates entities that exist in both.

    It does not remove any entities from the database.
  example:
  - >-
    await context.AddOrUpdateFromListAsync(
        updatedProducts,
        p =&gt; p.ProductCode,
        p =&gt; p.IsActive
    );
  syntax:
    content: 'public static Task<IResult> AddOrUpdateFromListAsync<TEntity, TKey>(this DbContext context, IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null) where TEntity : class where TKey : notnull'
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The <xref href="Microsoft.EntityFrameworkCore.DbContext" data-throw-if-not-resolved="false"></xref> instance to operate on.
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The list of entities to synchronize with the database.
    - id: keySelector
      type: System.Func{{TEntity},{TKey}}
      description: A function to select the key for matching entities.
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: An optional filter predicate to apply to the database entities.
    typeParameters:
    - id: TEntity
      description: The type of the entity.
    - id: TKey
      description: The type of the key used to uniquely identify entities.
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Shared Function AddOrUpdateFromListAsync(Of TEntity As Class, TKey)(context As DbContext, entities As IEnumerable(Of TEntity), keySelector As Func(Of TEntity, TKey), filter As Expression(Of Func(Of TEntity, Boolean)) = Nothing) As Task(Of IResult)
  overload: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync*
  nameWithType.vb: DbContextWithListExtensions.AddOrUpdateFromListAsync(Of TEntity, TKey)(DbContext, IEnumerable(Of TEntity), Func(Of TEntity, TKey), Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync(Of TEntity, TKey)(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.IEnumerable(Of TEntity), System.Func(Of TEntity, TKey), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: AddOrUpdateFromListAsync(Of TEntity, TKey)(DbContext, IEnumerable(Of TEntity), Func(Of TEntity, TKey), Expression(Of Func(Of TEntity, Boolean)))
- uid: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  commentId: M:NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: AddOrRemoveFromListAsync``2(Microsoft.EntityFrameworkCore.DbContext,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  isExtensionMethod: true
  parent: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions
  langs:
  - csharp
  - vb
  name: AddOrRemoveFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?)
  nameWithType: DbContextWithListExtensions.AddOrRemoveFromListAsync<TEntity, TKey>(DbContext, IEnumerable<TEntity>, Func<TEntity, TKey>, Expression<Func<TEntity, bool>>?)
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync<TEntity, TKey>(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.IEnumerable<TEntity>, System.Func<TEntity, TKey>, System.Linq.Expressions.Expression<System.Func<TEntity, bool>>?)
  type: Method
  source:
    href: https://github.com/nuvtools/nuvtools-data/blob/92b78492c8c296e07b2714393509db4f8584826c/src/NuvTools.Data.EntityFrameworkCore/Extensions/DbContextWithListExtensions.cs
  assemblies:
  - NuvTools.Data.EntityFrameworkCore
  namespace: NuvTools.Data.EntityFrameworkCore.Extensions
  summary: Synchronizes a DbSet with a provided list by adding or removing entities, without updating any entities.
  remarks: >-
    This method adds entities in the list that are not in the database and removes entities in the database

    that are not in the list. It does not update any entities.
  example:
  - >-
    await context.AddOrRemoveFromListAsync(
        updatedOrders,
        o =&gt; o.OrderId,
        o =&gt; o.IsPending
    );
  syntax:
    content: 'public static Task<IResult> AddOrRemoveFromListAsync<TEntity, TKey>(this DbContext context, IEnumerable<TEntity> entities, Func<TEntity, TKey> keySelector, Expression<Func<TEntity, bool>>? filter = null) where TEntity : class where TKey : notnull'
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
      description: The <xref href="Microsoft.EntityFrameworkCore.DbContext" data-throw-if-not-resolved="false"></xref> instance to operate on.
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The list of entities to synchronize with the database.
    - id: keySelector
      type: System.Func{{TEntity},{TKey}}
      description: A function to select the key for matching entities.
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: An optional filter predicate to apply to the database entities.
    typeParameters:
    - id: TEntity
      description: The type of the entity.
    - id: TKey
      description: The type of the key used to uniquely identify entities.
    return:
      type: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
    content.vb: Public Shared Function AddOrRemoveFromListAsync(Of TEntity As Class, TKey)(context As DbContext, entities As IEnumerable(Of TEntity), keySelector As Func(Of TEntity, TKey), filter As Expression(Of Func(Of TEntity, Boolean)) = Nothing) As Task(Of IResult)
  overload: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync*
  nameWithType.vb: DbContextWithListExtensions.AddOrRemoveFromListAsync(Of TEntity, TKey)(DbContext, IEnumerable(Of TEntity), Func(Of TEntity, TKey), Expression(Of Func(Of TEntity, Boolean)))
  fullName.vb: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync(Of TEntity, TKey)(Microsoft.EntityFrameworkCore.DbContext, System.Collections.Generic.IEnumerable(Of TEntity), System.Func(Of TEntity, TKey), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean)))
  name.vb: AddOrRemoveFromListAsync(Of TEntity, TKey)(DbContext, IEnumerable(Of TEntity), Func(Of TEntity, TKey), Expression(Of Func(Of TEntity, Boolean)))
references:
- uid: NuvTools.Data.EntityFrameworkCore.Extensions
  commentId: N:NuvTools.Data.EntityFrameworkCore.Extensions
  isExternal: true
  href: NuvTools.html
  name: NuvTools.Data.EntityFrameworkCore.Extensions
  nameWithType: NuvTools.Data.EntityFrameworkCore.Extensions
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions
  spec.csharp:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Data
    name: Data
    isExternal: true
    href: NuvTools.Data.html
  - name: .
  - uid: NuvTools.Data.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: NuvTools.Data.EntityFrameworkCore.html
  - name: .
  - uid: NuvTools.Data.EntityFrameworkCore.Extensions
    name: Extensions
    isExternal: true
    href: NuvTools.Data.EntityFrameworkCore.Extensions.html
  spec.vb:
  - uid: NuvTools
    name: NuvTools
    isExternal: true
    href: NuvTools.html
  - name: .
  - uid: NuvTools.Data
    name: Data
    isExternal: true
    href: NuvTools.Data.html
  - name: .
  - uid: NuvTools.Data.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: NuvTools.Data.EntityFrameworkCore.html
  - name: .
  - uid: NuvTools.Data.EntityFrameworkCore.Extensions
    name: Extensions
    isExternal: true
    href: NuvTools.Data.EntityFrameworkCore.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync*
  commentId: Overload:NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync
  isExternal: true
  href: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.html#NuvTools_Data_EntityFrameworkCore_Extensions_DbContextWithListExtensions_SyncFromListAsync__2_Microsoft_EntityFrameworkCore_DbContext_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  name: SyncFromListAsync
  nameWithType: DbContextWithListExtensions.SyncFromListAsync
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.SyncFromListAsync
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Func{{TEntity},{TKey}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TEntity, TKey>
  nameWithType: Func<TEntity, TKey>
  fullName: System.Func<TEntity, TKey>
  nameWithType.vb: Func(Of TEntity, TKey)
  fullName.vb: System.Func(Of TEntity, TKey)
  name.vb: Func(Of TEntity, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TEntity, bool>>
  nameWithType: Expression<Func<TEntity, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, bool>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
  commentId: T:System.Threading.Tasks.Task{NuvTools.Common.ResultWrapper.IResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult>
  nameWithType: Task<IResult>
  fullName: System.Threading.Tasks.Task<NuvTools.Common.ResultWrapper.IResult>
  nameWithType.vb: Task(Of IResult)
  fullName.vb: System.Threading.Tasks.Task(Of NuvTools.Common.ResultWrapper.IResult)
  name.vb: Task(Of IResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: NuvTools.Common.ResultWrapper.IResult
    name: IResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: NuvTools.Common.ResultWrapper.IResult
    name: IResult
    isExternal: true
  - name: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync*
  commentId: Overload:NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync
  isExternal: true
  href: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.html#NuvTools_Data_EntityFrameworkCore_Extensions_DbContextWithListExtensions_AddOrUpdateFromListAsync__2_Microsoft_EntityFrameworkCore_DbContext_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  name: AddOrUpdateFromListAsync
  nameWithType: DbContextWithListExtensions.AddOrUpdateFromListAsync
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrUpdateFromListAsync
- uid: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync*
  commentId: Overload:NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync
  isExternal: true
  href: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.html#NuvTools_Data_EntityFrameworkCore_Extensions_DbContextWithListExtensions_AddOrRemoveFromListAsync__2_Microsoft_EntityFrameworkCore_DbContext_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  name: AddOrRemoveFromListAsync
  nameWithType: DbContextWithListExtensions.AddOrRemoveFromListAsync
  fullName: NuvTools.Data.EntityFrameworkCore.Extensions.DbContextWithListExtensions.AddOrRemoveFromListAsync
